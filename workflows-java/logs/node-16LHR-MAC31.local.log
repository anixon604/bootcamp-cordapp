[INFO ] 2019-08-19T08:06:33,212Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:06:33,365Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar {}
[INFO ] 2019-08-19T08:06:33,516Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:06:37,581Z [main] internal.Verifier. - Error validating transaction 08A777081F1855DF43D20AB1EC7AEB1B8B248A2420E4AACE33C8ABF0A2BFD220. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:29) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:57) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:37,592Z [main] internal.Verifier. - Error validating transaction 08A777081F1855DF43D20AB1EC7AEB1B8B248A2420E4AACE33C8ABF0A2BFD220. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:29) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:57) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:06:38,575Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:06:38,575Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar {}
[INFO ] 2019-08-19T08:06:38,606Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:06:40,048Z [main] internal.Verifier. - Error validating transaction CD9DF2CA3B46160BF2F36C0DACA01EED325AAB449DB650D988F3413EAC4A5C72. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required singer.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:32) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:175) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:171) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:40,051Z [main] internal.Verifier. - Error validating transaction CD9DF2CA3B46160BF2F36C0DACA01EED325AAB449DB650D988F3413EAC4A5C72. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required singer.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:32) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:175) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:171) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:40,972Z [main] internal.Verifier. - Error validating transaction 33DFEC7B7E667BFD759C7A82675F10D6304804CA1DA30BB389B30ACEA990A1C8. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required singer.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:32) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:183) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:179) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:40,975Z [main] internal.Verifier. - Error validating transaction 33DFEC7B7E667BFD759C7A82675F10D6304804CA1DA30BB389B30ACEA990A1C8. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required singer.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:32) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:183) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:179) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:06:42,233Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:06:42,233Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar {}
[INFO ] 2019-08-19T08:06:42,256Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:06:42,293Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:06:42,294Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar {}
[INFO ] 2019-08-19T08:06:42,316Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:06:42,390Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:06:42,399Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:06:42,980Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:06:42,981Z [main] internal.Verifier. - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.contracts.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-19T08:06:42,981Z [main] internal.Verifier. - Error validating transaction A39EF53436FD0BDDCA9B800FDA48D0E0AFA5C8BED2A1DA0A4677A76349C7E8F0. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:30) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:96) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-19T08:06:42,984Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-19T08:06:42,985Z [main] internal.Verifier. - Error validating transaction A39EF53436FD0BDDCA9B800FDA48D0E0AFA5C8BED2A1DA0A4677A76349C7E8F0. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:30) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:96) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:06:43,573Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:06:43,574Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar {}
[INFO ] 2019-08-19T08:06:43,597Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:06:44,171Z [main] internal.Verifier. - Error validating transaction D5B54CB77B380C1C07F59D815C708FDB3FB0D2ED05456786039F844024BD3E70. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:154) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:150) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:44,174Z [main] internal.Verifier. - Error validating transaction D5B54CB77B380C1C07F59D815C708FDB3FB0D2ED05456786039F844024BD3E70. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:154) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:150) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:06:44,983Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:06:44,983Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar {}
[INFO ] 2019-08-19T08:06:45,006Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:06:45,552Z [main] internal.Verifier. - Error validating transaction 771DC25A4E916C9FEDF8CFD884C6C1252EA7DDDE1DF530FF7E6B0A1622C28B02. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:77) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:72) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:45,556Z [main] internal.Verifier. - Error validating transaction 771DC25A4E916C9FEDF8CFD884C6C1252EA7DDDE1DF530FF7E6B0A1622C28B02. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:77) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:72) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:06:46,211Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:06:46,211Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar {}
[INFO ] 2019-08-19T08:06:46,234Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:06:46,831Z [main] internal.Verifier. - Error validating transaction 55DBD34B6FF4B45250C2CF32387F60925EF9345737518D3DA6C7B06572A5A83D. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:34) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount$8(ContractTests.java:119) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount(ContractTests.java:115) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:46,834Z [main] internal.Verifier. - Error validating transaction 55DBD34B6FF4B45250C2CF32387F60925EF9345737518D3DA6C7B06572A5A83D. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:34) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount$8(ContractTests.java:119) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount(ContractTests.java:115) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:47,400Z [main] internal.Verifier. - Error validating transaction 78BC4371A6DFAA0AC7768C4A3E490AD08829C22AF53AEF921416DB6AD86E4466. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:34) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount$9(ContractTests.java:127) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount(ContractTests.java:123) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:47,403Z [main] internal.Verifier. - Error validating transaction 78BC4371A6DFAA0AC7768C4A3E490AD08829C22AF53AEF921416DB6AD86E4466. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:34) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount$9(ContractTests.java:127) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount(ContractTests.java:123) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:06:48,586Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:06:48,587Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-080632.687/custom-cordapp_1_4_556e9a45-0c48-4500-b84b-d4d97297557d.jar {}
[INFO ] 2019-08-19T08:06:48,608Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:06:48,650Z [main] contracts.AttachmentConstraint. - Found state bootcamp.contracts.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2019-08-19T08:06:49,425Z [main] internal.Verifier. - Error validating transaction 00E57739BCCDB61FBDE85D41E6280AA31D4C61029A12F6B947E7679DAF519357. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:34) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:32) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:49,441Z [main] internal.Verifier. - Error validating transaction 61029D194D21F2A80D3E0B211B0E8C670232994358E8B950DB9AC6DE1615E23F. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:28) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:37) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:32) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:06:49,446Z [main] internal.Verifier. - Error validating transaction 61029D194D21F2A80D3E0B211B0E8C670232994358E8B950DB9AC6DE1615E23F. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:28) ~[main/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:37) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:32) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:07:17,500Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-java ... {}
[INFO ] 2019-08-19T08:07:19,936Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java ... {}
[INFO ] 2019-08-19T08:07:21,202Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080707.495/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:07:21,207Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:21,237Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:21,310Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:21,313Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:21,338Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:07:21,342Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:07:22,017Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:22,112Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:22,114Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:22,273Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:07.442Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:26,659Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:26,663Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080707.495/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:26,663Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:26,664Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:26,719Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:26,723Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:28,693Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:29,296Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:29,350Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:29,373Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:29,373Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:29,670Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:29,680Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:29,680Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202049680) {}
[INFO ] 2019-08-19T08:07:29,685Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:29,853Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202049680) {}
[INFO ] 2019-08-19T08:07:29,917Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:29,936Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202049680) {}
[INFO ] 2019-08-19T08:07:29,986Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:30,024Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:30,026Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:07:30,029Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:07:30,360Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202049680) {}
[INFO ] 2019-08-19T08:07:30,375Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202049680) {}
[INFO ] 2019-08-19T08:07:30,376Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:30,376Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202049680) {}
[INFO ] 2019-08-19T08:07:30,376Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:30,381Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080707.495/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:07:30,382Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:30,382Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:30,405Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:30,405Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:30,427Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:30,434Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:30,473Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:30,473Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:30,477Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:07.442Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:30,959Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:30,963Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080707.495/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:30,963Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:30,964Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:30,966Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:30,966Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:31,068Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:31,078Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:31,080Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:31,080Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:31,103Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:31,103Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:31,250Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:31,256Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:31,256Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202051256) {}
[INFO ] 2019-08-19T08:07:31,258Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:31,266Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202051256) {}
[INFO ] 2019-08-19T08:07:31,274Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:31,279Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202051256) {}
[INFO ] 2019-08-19T08:07:31,285Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:31,324Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:31,334Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202051256) {}
[INFO ] 2019-08-19T08:07:31,338Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202049680) {}
[INFO ] 2019-08-19T08:07:31,339Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:31,350Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202051256) {}
[INFO ] 2019-08-19T08:07:31,351Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:31,362Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202051256) {}
[INFO ] 2019-08-19T08:07:31,362Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:31,362Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202051256) {}
[INFO ] 2019-08-19T08:07:31,362Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:31,367Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080707.495/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:07:31,367Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:31,368Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:31,391Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:31,392Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080707.495/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:31,412Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:31,420Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:31,445Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:31,445Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:31,449Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:07.442Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:31,855Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:31,857Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080707.495/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:31,857Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:31,858Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:31,861Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:31,861Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:31,968Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:31,979Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:31,981Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:31,981Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:31,998Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:31,998Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:32,133Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:32,143Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:32,143Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202052143) {}
[INFO ] 2019-08-19T08:07:32,145Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:32,155Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202052143) {}
[INFO ] 2019-08-19T08:07:32,165Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:32,169Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202052143) {}
[INFO ] 2019-08-19T08:07:32,177Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:32,210Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:32,220Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202052143) {}
[INFO ] 2019-08-19T08:07:32,224Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202049680) {}
[INFO ] 2019-08-19T08:07:32,225Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:32,236Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202052143) {}
[INFO ] 2019-08-19T08:07:32,237Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:32,248Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202051256) {}
[INFO ] 2019-08-19T08:07:32,249Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:32,258Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202052143) {}
[INFO ] 2019-08-19T08:07:32,260Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:32,270Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202052143) {}
[INFO ] 2019-08-19T08:07:32,270Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:32,270Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202052143) {}
[INFO ] 2019-08-19T08:07:32,270Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:07:32,533Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b148320f-eba5-4916-9078-69f331e11fa1, invocation_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, invocation_timestamp=2019-08-19T08:07:32.299Z, origin=Only For Testing, session_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, session_timestamp=2019-08-19T08:07:32.299Z, thread-id=201}
[WARN ] 2019-08-19T08:07:32,533Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b148320f-eba5-4916-9078-69f331e11fa1, invocation_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, invocation_timestamp=2019-08-19T08:07:32.299Z, origin=Only For Testing, session_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, session_timestamp=2019-08-19T08:07:32.299Z, thread-id=201}
[WARN ] 2019-08-19T08:07:33,831Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b148320f-eba5-4916-9078-69f331e11fa1, invocation_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, invocation_timestamp=2019-08-19T08:07:32.299Z, origin=Only For Testing, session_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, session_timestamp=2019-08-19T08:07:32.299Z, thread-id=201}
[INFO ] 2019-08-19T08:07:34,031Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[WARN ] 2019-08-19T08:07:34,043Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,073Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[WARN ] 2019-08-19T08:07:34,124Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,151Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b148320f-eba5-4916-9078-69f331e11fa1, invocation_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, invocation_timestamp=2019-08-19T08:07:32.299Z, origin=Only For Testing, session_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, session_timestamp=2019-08-19T08:07:32.299Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,151Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b148320f-eba5-4916-9078-69f331e11fa1, invocation_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, invocation_timestamp=2019-08-19T08:07:32.299Z, origin=Only For Testing, session_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, session_timestamp=2019-08-19T08:07:32.299Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,179Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b148320f-eba5-4916-9078-69f331e11fa1, invocation_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, invocation_timestamp=2019-08-19T08:07:32.299Z, origin=Only For Testing, session_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, session_timestamp=2019-08-19T08:07:32.299Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,197Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[WARN ] 2019-08-19T08:07:34,197Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,203Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,208Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,212Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=c9321b14-8e7d-4845-9750-a7ca921b7ba5, invocation_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, invocation_timestamp=2019-08-19T08:07:33.969Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa9ee0f6-89a5-40c1-be2b-63130f73a3e2, session_timestamp=2019-08-19T08:07:33.969Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,242Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b148320f-eba5-4916-9078-69f331e11fa1, invocation_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, invocation_timestamp=2019-08-19T08:07:32.299Z, origin=Only For Testing, session_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, session_timestamp=2019-08-19T08:07:32.299Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,242Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b148320f-eba5-4916-9078-69f331e11fa1, invocation_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, invocation_timestamp=2019-08-19T08:07:32.299Z, origin=Only For Testing, session_id=aec9cb84-8ac4-4ef2-a1f6-0361ba1961d5, session_timestamp=2019-08-19T08:07:32.299Z, thread-id=201, tx_id=4A23ED81A234F63779D777565145ABE0088D4148008828BD71626EF1C61F7E9D}
[INFO ] 2019-08-19T08:07:34,354Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080734.270/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:07:34,355Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:34,355Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:34,380Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:34,381Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:34,404Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:34,409Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:34,413Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:34,413Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:34,420Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:34.270Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:34,800Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:34,802Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080734.270/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:34,802Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:34,803Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:34,805Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:34,805Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:34,894Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:34,908Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:34,938Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:34,945Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:34,945Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:35,071Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:35,077Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:35,077Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202055077) {}
[INFO ] 2019-08-19T08:07:35,079Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:35,099Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202055077) {}
[INFO ] 2019-08-19T08:07:35,111Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:35,115Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202055077) {}
[INFO ] 2019-08-19T08:07:35,124Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:35,156Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:35,158Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:07:35,158Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:07:35,163Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202055077) {}
[INFO ] 2019-08-19T08:07:35,165Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202055077) {}
[INFO ] 2019-08-19T08:07:35,165Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:35,165Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202055077) {}
[INFO ] 2019-08-19T08:07:35,165Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:35,169Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080734.270/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:07:35,169Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:35,169Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:35,190Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:35,191Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:35,215Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:35,220Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:35,254Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:35,254Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:35,325Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:34.270Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:35,670Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:35,672Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080734.270/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:35,672Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:35,672Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:35,674Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:35,674Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:35,745Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:35,754Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:35,756Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:35,758Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:35,779Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:35,780Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:35,898Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:35,903Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:35,903Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202055903) {}
[INFO ] 2019-08-19T08:07:35,905Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:35,910Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202055903) {}
[INFO ] 2019-08-19T08:07:35,917Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:35,921Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202055903) {}
[INFO ] 2019-08-19T08:07:35,925Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:35,960Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:35,966Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202055903) {}
[INFO ] 2019-08-19T08:07:35,969Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202055077) {}
[INFO ] 2019-08-19T08:07:35,972Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:35,984Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202055903) {}
[INFO ] 2019-08-19T08:07:35,987Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:35,996Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202055903) {}
[INFO ] 2019-08-19T08:07:35,996Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:35,996Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202055903) {}
[INFO ] 2019-08-19T08:07:35,996Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:36,000Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080734.270/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:07:36,000Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:36,000Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:36,028Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:36,029Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080734.270/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:36,050Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:36,059Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:36,084Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:36,084Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:36,088Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:34.270Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:36,392Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:36,393Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080734.270/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:36,393Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:36,393Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:36,395Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:36,395Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:36,460Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:36,469Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:36,474Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:36,475Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:36,494Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:36,494Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:36,607Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:36,610Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:36,610Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202056610) {}
[INFO ] 2019-08-19T08:07:36,611Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:36,616Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202056610) {}
[INFO ] 2019-08-19T08:07:36,621Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:36,624Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202056610) {}
[INFO ] 2019-08-19T08:07:36,628Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:36,660Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:36,665Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202056610) {}
[INFO ] 2019-08-19T08:07:36,667Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202055077) {}
[INFO ] 2019-08-19T08:07:36,668Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:36,675Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202056610) {}
[INFO ] 2019-08-19T08:07:36,676Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:36,683Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202055903) {}
[INFO ] 2019-08-19T08:07:36,684Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:36,692Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202056610) {}
[INFO ] 2019-08-19T08:07:36,693Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:36,700Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202056610) {}
[INFO ] 2019-08-19T08:07:36,701Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:36,701Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202056610) {}
[INFO ] 2019-08-19T08:07:36,701Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:07:37,592Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a8cf3ba9-ea2a-4490-bdf7-6f2991021c18, invocation_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, invocation_timestamp=2019-08-19T08:07:36.702Z, origin=Only For Testing, session_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, session_timestamp=2019-08-19T08:07:36.702Z, thread-id=378}
[INFO ] 2019-08-19T08:07:37,632Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[WARN ] 2019-08-19T08:07:37,632Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,640Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[WARN ] 2019-08-19T08:07:37,671Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,683Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a8cf3ba9-ea2a-4490-bdf7-6f2991021c18, invocation_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, invocation_timestamp=2019-08-19T08:07:36.702Z, origin=Only For Testing, session_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, session_timestamp=2019-08-19T08:07:36.702Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,683Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a8cf3ba9-ea2a-4490-bdf7-6f2991021c18, invocation_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, invocation_timestamp=2019-08-19T08:07:36.702Z, origin=Only For Testing, session_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, session_timestamp=2019-08-19T08:07:36.702Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,695Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a8cf3ba9-ea2a-4490-bdf7-6f2991021c18, invocation_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, invocation_timestamp=2019-08-19T08:07:36.702Z, origin=Only For Testing, session_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, session_timestamp=2019-08-19T08:07:36.702Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,705Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[WARN ] 2019-08-19T08:07:37,705Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,709Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,715Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,721Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=81ee5e69-7ce3-4514-95f3-785811cfcf04, invocation_id=d1292d97-2d40-48d9-9979-74c8b65f0824, invocation_timestamp=2019-08-19T08:07:37.614Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d1292d97-2d40-48d9-9979-74c8b65f0824, session_timestamp=2019-08-19T08:07:37.614Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,730Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a8cf3ba9-ea2a-4490-bdf7-6f2991021c18, invocation_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, invocation_timestamp=2019-08-19T08:07:36.702Z, origin=Only For Testing, session_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, session_timestamp=2019-08-19T08:07:36.702Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,730Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a8cf3ba9-ea2a-4490-bdf7-6f2991021c18, invocation_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, invocation_timestamp=2019-08-19T08:07:36.702Z, origin=Only For Testing, session_id=6cb84db5-698d-4a41-9f2a-1151a0544ac5, session_timestamp=2019-08-19T08:07:36.702Z, thread-id=378, tx_id=CF2A6BFCE6C5D3AAC97236D79FC50ECEB7742F609E5BD224AD55F31E09C2BD46}
[INFO ] 2019-08-19T08:07:37,803Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080737.744/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:07:37,803Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:37,803Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:37,825Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:37,826Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:37,846Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:37,850Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:37,856Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:37,856Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:37,861Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:37.744Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:38,209Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:38,210Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080737.744/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:38,210Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:38,211Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:38,213Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,213Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,277Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,283Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:38,300Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:38,307Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,307Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,431Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,434Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:38,434Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202058434) {}
[INFO ] 2019-08-19T08:07:38,436Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:38,451Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202058434) {}
[INFO ] 2019-08-19T08:07:38,459Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:38,463Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202058434) {}
[INFO ] 2019-08-19T08:07:38,466Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:38,502Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:38,505Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:07:38,505Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:07:38,511Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202058434) {}
[INFO ] 2019-08-19T08:07:38,514Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202058434) {}
[INFO ] 2019-08-19T08:07:38,514Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:38,514Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202058434) {}
[INFO ] 2019-08-19T08:07:38,514Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:38,519Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080737.744/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:07:38,519Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:38,519Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:38,543Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:38,543Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:38,564Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:38,572Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:38,592Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:38,593Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:38,595Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:37.744Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:38,890Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:38,892Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080737.744/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:38,892Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:38,893Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:38,896Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,896Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,957Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:38,964Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:38,965Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:38,966Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:38,985Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:38,985Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:39,100Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:39,104Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:39,104Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202059104) {}
[INFO ] 2019-08-19T08:07:39,105Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:39,111Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202059104) {}
[INFO ] 2019-08-19T08:07:39,118Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:39,120Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202059104) {}
[INFO ] 2019-08-19T08:07:39,124Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:39,154Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:39,160Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202059104) {}
[INFO ] 2019-08-19T08:07:39,162Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202058434) {}
[INFO ] 2019-08-19T08:07:39,162Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:39,176Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202059104) {}
[INFO ] 2019-08-19T08:07:39,177Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:39,187Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202059104) {}
[INFO ] 2019-08-19T08:07:39,187Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:39,187Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202059104) {}
[INFO ] 2019-08-19T08:07:39,187Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:39,192Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080737.744/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:07:39,193Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:39,193Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:39,216Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:39,216Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080737.744/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:39,239Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:39,246Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:39,274Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:39,274Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:39,276Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:37.744Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:39,570Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:39,573Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080737.744/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:39,573Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:39,574Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:39,576Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:39,576Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:39,635Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:39,641Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:39,642Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:39,642Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:39,658Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:39,658Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:39,765Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:39,769Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:39,769Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202059769) {}
[INFO ] 2019-08-19T08:07:39,773Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:39,778Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202059769) {}
[INFO ] 2019-08-19T08:07:39,783Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:39,785Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202059769) {}
[INFO ] 2019-08-19T08:07:39,788Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:39,822Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:39,830Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202059769) {}
[INFO ] 2019-08-19T08:07:39,832Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202058434) {}
[INFO ] 2019-08-19T08:07:39,833Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:39,842Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202059769) {}
[INFO ] 2019-08-19T08:07:39,843Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:39,851Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202059104) {}
[INFO ] 2019-08-19T08:07:39,853Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:39,861Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202059769) {}
[INFO ] 2019-08-19T08:07:39,862Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:39,870Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202059769) {}
[INFO ] 2019-08-19T08:07:39,870Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:39,870Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202059769) {}
[INFO ] 2019-08-19T08:07:39,870Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:07:41,151Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=459b6ba4-5567-473c-a599-7e0acd431a77, invocation_id=0f603e92-1257-4d0e-9129-8faee4a18743, invocation_timestamp=2019-08-19T08:07:39.871Z, origin=Only For Testing, session_id=0f603e92-1257-4d0e-9129-8faee4a18743, session_timestamp=2019-08-19T08:07:39.871Z, thread-id=551}
[INFO ] 2019-08-19T08:07:41,188Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[WARN ] 2019-08-19T08:07:41,188Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,194Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[WARN ] 2019-08-19T08:07:41,222Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,236Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=459b6ba4-5567-473c-a599-7e0acd431a77, invocation_id=0f603e92-1257-4d0e-9129-8faee4a18743, invocation_timestamp=2019-08-19T08:07:39.871Z, origin=Only For Testing, session_id=0f603e92-1257-4d0e-9129-8faee4a18743, session_timestamp=2019-08-19T08:07:39.871Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,236Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=459b6ba4-5567-473c-a599-7e0acd431a77, invocation_id=0f603e92-1257-4d0e-9129-8faee4a18743, invocation_timestamp=2019-08-19T08:07:39.871Z, origin=Only For Testing, session_id=0f603e92-1257-4d0e-9129-8faee4a18743, session_timestamp=2019-08-19T08:07:39.871Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,250Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=459b6ba4-5567-473c-a599-7e0acd431a77, invocation_id=0f603e92-1257-4d0e-9129-8faee4a18743, invocation_timestamp=2019-08-19T08:07:39.871Z, origin=Only For Testing, session_id=0f603e92-1257-4d0e-9129-8faee4a18743, session_timestamp=2019-08-19T08:07:39.871Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,262Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[WARN ] 2019-08-19T08:07:41,262Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,267Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,275Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,279Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=a49dae7f-b65e-4358-83e1-10b1f25b5a0f, invocation_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, invocation_timestamp=2019-08-19T08:07:41.175Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d5a3d6fc-2b6e-49c9-8320-761051fa2bbd, session_timestamp=2019-08-19T08:07:41.175Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,289Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=459b6ba4-5567-473c-a599-7e0acd431a77, invocation_id=0f603e92-1257-4d0e-9129-8faee4a18743, invocation_timestamp=2019-08-19T08:07:39.871Z, origin=Only For Testing, session_id=0f603e92-1257-4d0e-9129-8faee4a18743, session_timestamp=2019-08-19T08:07:39.871Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,289Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=459b6ba4-5567-473c-a599-7e0acd431a77, invocation_id=0f603e92-1257-4d0e-9129-8faee4a18743, invocation_timestamp=2019-08-19T08:07:39.871Z, origin=Only For Testing, session_id=0f603e92-1257-4d0e-9129-8faee4a18743, session_timestamp=2019-08-19T08:07:39.871Z, thread-id=551, tx_id=299BC03AA4C4A964E9070A61B5CDB506524E90473FF7F8CD0E773AA9E25E7D71}
[INFO ] 2019-08-19T08:07:41,365Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080741.302/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:07:41,365Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:41,366Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:41,390Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:41,391Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:41,410Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:41,415Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:41,417Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:41,417Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:41,421Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:41.302Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:41,728Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:41,730Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080741.302/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:41,730Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:41,731Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:41,732Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:41,732Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:41,797Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:41,806Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:41,827Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:41,835Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:41,835Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:41,937Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:41,941Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:41,941Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202061941) {}
[INFO ] 2019-08-19T08:07:41,943Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:41,957Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202061941) {}
[INFO ] 2019-08-19T08:07:41,965Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:41,968Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202061941) {}
[INFO ] 2019-08-19T08:07:41,971Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:42,003Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:42,004Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:07:42,004Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:07:42,009Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202061941) {}
[INFO ] 2019-08-19T08:07:42,012Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202061941) {}
[INFO ] 2019-08-19T08:07:42,012Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:42,012Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202061941) {}
[INFO ] 2019-08-19T08:07:42,012Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:42,016Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080741.302/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:07:42,016Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:42,016Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:42,041Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:42,041Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:42,064Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:42,071Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:42,093Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:42,093Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:42,096Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:41.302Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:42,384Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:42,386Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080741.302/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:42,386Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:42,387Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:42,388Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:42,388Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:42,452Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:42,462Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:42,465Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:42,465Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:42,483Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:42,483Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:42,587Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:42,591Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:42,591Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202062591) {}
[INFO ] 2019-08-19T08:07:42,592Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:42,596Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202062591) {}
[INFO ] 2019-08-19T08:07:42,601Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:42,604Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202062591) {}
[INFO ] 2019-08-19T08:07:42,606Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:42,634Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:42,638Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202062591) {}
[INFO ] 2019-08-19T08:07:42,640Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202061941) {}
[INFO ] 2019-08-19T08:07:42,641Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:42,648Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202062591) {}
[INFO ] 2019-08-19T08:07:42,648Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:42,653Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202062591) {}
[INFO ] 2019-08-19T08:07:42,653Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:42,653Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202062591) {}
[INFO ] 2019-08-19T08:07:42,653Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:42,657Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080741.302/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:07:42,657Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:42,657Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:42,682Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:42,682Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080741.302/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:42,704Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:42,710Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:42,732Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:42,733Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:42,736Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:41.302Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:43,043Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:43,044Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080741.302/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:43,044Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:43,044Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:43,046Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:43,046Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:43,099Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:43,107Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:43,109Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:43,109Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:43,126Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:43,126Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:43,230Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:43,234Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:43,234Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202063234) {}
[INFO ] 2019-08-19T08:07:43,235Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:43,239Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202063234) {}
[INFO ] 2019-08-19T08:07:43,244Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:43,247Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202063234) {}
[INFO ] 2019-08-19T08:07:43,250Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:43,282Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:43,290Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202063234) {}
[INFO ] 2019-08-19T08:07:43,293Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202061941) {}
[INFO ] 2019-08-19T08:07:43,294Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:43,300Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202063234) {}
[INFO ] 2019-08-19T08:07:43,301Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:43,310Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202062591) {}
[INFO ] 2019-08-19T08:07:43,311Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:43,318Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202063234) {}
[INFO ] 2019-08-19T08:07:43,319Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:43,327Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202063234) {}
[INFO ] 2019-08-19T08:07:43,327Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:43,327Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202063234) {}
[INFO ] 2019-08-19T08:07:43,327Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:07:44,010Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e6c4a067-737a-48a8-937c-b3e996bb1549, invocation_id=99570f58-88ab-4995-b38b-e81789fc97ab, invocation_timestamp=2019-08-19T08:07:43.328Z, origin=Only For Testing, session_id=99570f58-88ab-4995-b38b-e81789fc97ab, session_timestamp=2019-08-19T08:07:43.328Z, thread-id=724}
[INFO ] 2019-08-19T08:07:44,037Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[WARN ] 2019-08-19T08:07:44,037Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,047Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[WARN ] 2019-08-19T08:07:44,074Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,085Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e6c4a067-737a-48a8-937c-b3e996bb1549, invocation_id=99570f58-88ab-4995-b38b-e81789fc97ab, invocation_timestamp=2019-08-19T08:07:43.328Z, origin=Only For Testing, session_id=99570f58-88ab-4995-b38b-e81789fc97ab, session_timestamp=2019-08-19T08:07:43.328Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,085Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e6c4a067-737a-48a8-937c-b3e996bb1549, invocation_id=99570f58-88ab-4995-b38b-e81789fc97ab, invocation_timestamp=2019-08-19T08:07:43.328Z, origin=Only For Testing, session_id=99570f58-88ab-4995-b38b-e81789fc97ab, session_timestamp=2019-08-19T08:07:43.328Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,097Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e6c4a067-737a-48a8-937c-b3e996bb1549, invocation_id=99570f58-88ab-4995-b38b-e81789fc97ab, invocation_timestamp=2019-08-19T08:07:43.328Z, origin=Only For Testing, session_id=99570f58-88ab-4995-b38b-e81789fc97ab, session_timestamp=2019-08-19T08:07:43.328Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,104Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[WARN ] 2019-08-19T08:07:44,105Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,108Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,113Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,116Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=9f1964ff-5c59-4ea2-90ae-dc7e0453f342, invocation_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, invocation_timestamp=2019-08-19T08:07:44.026Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f61c09cc-b702-4e36-abd3-388392fb6cf8, session_timestamp=2019-08-19T08:07:44.026Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,122Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e6c4a067-737a-48a8-937c-b3e996bb1549, invocation_id=99570f58-88ab-4995-b38b-e81789fc97ab, invocation_timestamp=2019-08-19T08:07:43.328Z, origin=Only For Testing, session_id=99570f58-88ab-4995-b38b-e81789fc97ab, session_timestamp=2019-08-19T08:07:43.328Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,122Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e6c4a067-737a-48a8-937c-b3e996bb1549, invocation_id=99570f58-88ab-4995-b38b-e81789fc97ab, invocation_timestamp=2019-08-19T08:07:43.328Z, origin=Only For Testing, session_id=99570f58-88ab-4995-b38b-e81789fc97ab, session_timestamp=2019-08-19T08:07:43.328Z, thread-id=724, tx_id=553148AE13F304D98C05E2DB6A9D0BAC2185782D88C62F591B4639FF566D3D93}
[INFO ] 2019-08-19T08:07:44,174Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080744.130/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:07:44,174Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:44,174Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:44,197Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:44,198Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:44,220Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:44,226Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:44,228Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:44,228Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:44,234Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:44.130Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:44,539Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:44,541Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080744.130/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:44,541Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:44,542Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:44,543Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:44,543Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:44,595Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:44,601Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:44,621Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:44,629Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:44,629Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:44,742Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:44,746Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:44,746Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202064746) {}
[INFO ] 2019-08-19T08:07:44,747Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:44,758Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202064746) {}
[INFO ] 2019-08-19T08:07:44,766Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:44,768Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202064746) {}
[INFO ] 2019-08-19T08:07:44,771Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:44,801Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:44,803Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:07:44,803Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:07:44,808Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202064746) {}
[INFO ] 2019-08-19T08:07:44,809Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202064746) {}
[INFO ] 2019-08-19T08:07:44,809Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:44,809Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202064746) {}
[INFO ] 2019-08-19T08:07:44,809Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:44,812Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080744.130/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:07:44,812Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:44,812Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:44,834Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:44,834Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:44,848Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:44,856Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:44,874Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:44,874Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:44,877Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:44.130Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:45,155Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:45,156Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080744.130/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:45,156Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:45,157Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:45,158Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:45,158Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:45,216Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:45,223Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:45,224Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:45,224Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:45,240Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:45,240Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:45,347Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:45,351Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:45,351Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202065351) {}
[INFO ] 2019-08-19T08:07:45,353Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:45,357Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202065351) {}
[INFO ] 2019-08-19T08:07:45,363Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:45,365Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202065351) {}
[INFO ] 2019-08-19T08:07:45,368Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:45,398Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:45,402Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202065351) {}
[INFO ] 2019-08-19T08:07:45,406Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202064746) {}
[INFO ] 2019-08-19T08:07:45,407Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:45,412Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202065351) {}
[INFO ] 2019-08-19T08:07:45,413Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:45,419Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202065351) {}
[INFO ] 2019-08-19T08:07:45,419Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:45,419Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202065351) {}
[INFO ] 2019-08-19T08:07:45,419Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:45,423Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080744.130/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:07:45,423Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:45,423Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:45,445Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:45,445Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080744.130/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:45,466Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:45,472Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:45,491Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:45,491Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:45,494Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:44.130Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:45,778Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:45,780Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080744.130/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:45,780Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:45,780Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:45,783Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:45,783Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:45,848Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:45,855Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:45,857Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:45,858Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:45,875Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:45,875Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:45,964Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:45,969Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:45,969Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202065969) {}
[INFO ] 2019-08-19T08:07:45,970Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:45,974Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202065969) {}
[INFO ] 2019-08-19T08:07:45,978Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:45,981Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202065969) {}
[INFO ] 2019-08-19T08:07:45,983Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:46,012Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:46,017Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202065969) {}
[INFO ] 2019-08-19T08:07:46,018Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202064746) {}
[INFO ] 2019-08-19T08:07:46,019Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:46,024Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202065969) {}
[INFO ] 2019-08-19T08:07:46,025Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:46,029Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202065351) {}
[INFO ] 2019-08-19T08:07:46,029Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:46,033Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202065969) {}
[INFO ] 2019-08-19T08:07:46,034Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:46,038Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202065969) {}
[INFO ] 2019-08-19T08:07:46,038Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:46,038Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202065969) {}
[INFO ] 2019-08-19T08:07:46,038Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:07:46,667Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8aa34096-7730-4f88-9450-e44bf846bc19, invocation_id=b7e706c0-e410-4472-b941-069e640cf306, invocation_timestamp=2019-08-19T08:07:46.038Z, origin=Only For Testing, session_id=b7e706c0-e410-4472-b941-069e640cf306, session_timestamp=2019-08-19T08:07:46.038Z, thread-id=897}
[INFO ] 2019-08-19T08:07:46,692Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[WARN ] 2019-08-19T08:07:46,692Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,697Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[WARN ] 2019-08-19T08:07:46,720Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,728Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8aa34096-7730-4f88-9450-e44bf846bc19, invocation_id=b7e706c0-e410-4472-b941-069e640cf306, invocation_timestamp=2019-08-19T08:07:46.038Z, origin=Only For Testing, session_id=b7e706c0-e410-4472-b941-069e640cf306, session_timestamp=2019-08-19T08:07:46.038Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,728Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8aa34096-7730-4f88-9450-e44bf846bc19, invocation_id=b7e706c0-e410-4472-b941-069e640cf306, invocation_timestamp=2019-08-19T08:07:46.038Z, origin=Only For Testing, session_id=b7e706c0-e410-4472-b941-069e640cf306, session_timestamp=2019-08-19T08:07:46.038Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,738Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8aa34096-7730-4f88-9450-e44bf846bc19, invocation_id=b7e706c0-e410-4472-b941-069e640cf306, invocation_timestamp=2019-08-19T08:07:46.038Z, origin=Only For Testing, session_id=b7e706c0-e410-4472-b941-069e640cf306, session_timestamp=2019-08-19T08:07:46.038Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,747Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[WARN ] 2019-08-19T08:07:46,747Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,750Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,755Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,758Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=65b823b4-3ad8-473e-8ea6-d3addf4f6370, invocation_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, invocation_timestamp=2019-08-19T08:07:46.681Z, origin=O=Mock Company 1, L=London, C=GB, session_id=745ddf32-dc79-45a6-a71d-964a5d6aa712, session_timestamp=2019-08-19T08:07:46.681Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,763Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8aa34096-7730-4f88-9450-e44bf846bc19, invocation_id=b7e706c0-e410-4472-b941-069e640cf306, invocation_timestamp=2019-08-19T08:07:46.038Z, origin=Only For Testing, session_id=b7e706c0-e410-4472-b941-069e640cf306, session_timestamp=2019-08-19T08:07:46.038Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,763Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8aa34096-7730-4f88-9450-e44bf846bc19, invocation_id=b7e706c0-e410-4472-b941-069e640cf306, invocation_timestamp=2019-08-19T08:07:46.038Z, origin=Only For Testing, session_id=b7e706c0-e410-4472-b941-069e640cf306, session_timestamp=2019-08-19T08:07:46.038Z, thread-id=897, tx_id=A6303085C420A8E3D38176A19583AC72F8068A69B471184A971354D40927A361}
[INFO ] 2019-08-19T08:07:46,817Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080746.772/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:07:46,817Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:46,817Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:46,840Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:46,840Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:46,861Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:46,866Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:46,869Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:46,869Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:46,873Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:46.772Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:47,161Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:47,162Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080746.772/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:47,162Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:47,163Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:47,165Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,165Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,217Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,222Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:47,238Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:47,244Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,244Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,330Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,333Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:47,333Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202067333) {}
[INFO ] 2019-08-19T08:07:47,335Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:47,347Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202067333) {}
[INFO ] 2019-08-19T08:07:47,353Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:47,358Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202067333) {}
[INFO ] 2019-08-19T08:07:47,360Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:47,390Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:47,391Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:07:47,391Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:07:47,394Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202067333) {}
[INFO ] 2019-08-19T08:07:47,396Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202067333) {}
[INFO ] 2019-08-19T08:07:47,396Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:47,396Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202067333) {}
[INFO ] 2019-08-19T08:07:47,396Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:47,398Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080746.772/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:07:47,399Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:47,399Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:47,422Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:47,422Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:47,447Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:47,451Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:47,466Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:47,466Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:47,469Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:46.772Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:47,716Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:47,719Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080746.772/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:47,719Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:47,719Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:47,722Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,722Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,783Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:47,788Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:47,790Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:47,790Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:47,806Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:47,806Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:47,879Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:47,883Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:47,883Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202067883) {}
[INFO ] 2019-08-19T08:07:47,884Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:47,890Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202067883) {}
[INFO ] 2019-08-19T08:07:47,894Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:47,898Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202067883) {}
[INFO ] 2019-08-19T08:07:47,900Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:47,929Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:47,934Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202067883) {}
[INFO ] 2019-08-19T08:07:47,937Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202067333) {}
[INFO ] 2019-08-19T08:07:47,938Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:47,946Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202067883) {}
[INFO ] 2019-08-19T08:07:47,946Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:47,950Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202067883) {}
[INFO ] 2019-08-19T08:07:47,950Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:47,950Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202067883) {}
[INFO ] 2019-08-19T08:07:47,950Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:47,952Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080746.772/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:07:47,952Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:07:47,953Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:07:47,974Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:47,974Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-080746.772/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:07:47,996Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:07:48,001Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:07:48,013Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:48,013Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:07:48,015Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:07:46.772Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:07:48,246Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:07:48,247Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080746.772/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:07:48,247Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:07:48,248Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:07:48,249Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:48,249Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:48,294Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:07:48,301Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:07:48,302Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:07:48,302Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:07:48,315Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:48,315Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:48,398Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:07:48,403Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:07:48,403Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202068403) {}
[INFO ] 2019-08-19T08:07:48,406Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:48,411Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202068403) {}
[INFO ] 2019-08-19T08:07:48,415Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:07:48,419Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202068403) {}
[INFO ] 2019-08-19T08:07:48,425Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:48,455Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:07:48,459Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202068403) {}
[INFO ] 2019-08-19T08:07:48,461Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202067333) {}
[INFO ] 2019-08-19T08:07:48,461Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:48,468Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202068403) {}
[INFO ] 2019-08-19T08:07:48,469Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:48,476Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202067883) {}
[INFO ] 2019-08-19T08:07:48,476Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:48,481Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202068403) {}
[INFO ] 2019-08-19T08:07:48,481Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:07:48,485Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202068403) {}
[INFO ] 2019-08-19T08:07:48,485Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:07:48,485Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202068403) {}
[INFO ] 2019-08-19T08:07:48,485Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:07:49,118Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=848330d4-81d2-4aa6-b5d5-0ed577661d0b, invocation_id=4ce9612e-2046-424b-93a6-45186951b4eb, invocation_timestamp=2019-08-19T08:07:48.485Z, origin=Only For Testing, session_id=4ce9612e-2046-424b-93a6-45186951b4eb, session_timestamp=2019-08-19T08:07:48.485Z, thread-id=1070}
[INFO ] 2019-08-19T08:07:49,141Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[WARN ] 2019-08-19T08:07:49,141Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,147Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[WARN ] 2019-08-19T08:07:49,170Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,178Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=848330d4-81d2-4aa6-b5d5-0ed577661d0b, invocation_id=4ce9612e-2046-424b-93a6-45186951b4eb, invocation_timestamp=2019-08-19T08:07:48.485Z, origin=Only For Testing, session_id=4ce9612e-2046-424b-93a6-45186951b4eb, session_timestamp=2019-08-19T08:07:48.485Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,178Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=848330d4-81d2-4aa6-b5d5-0ed577661d0b, invocation_id=4ce9612e-2046-424b-93a6-45186951b4eb, invocation_timestamp=2019-08-19T08:07:48.485Z, origin=Only For Testing, session_id=4ce9612e-2046-424b-93a6-45186951b4eb, session_timestamp=2019-08-19T08:07:48.485Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,188Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=848330d4-81d2-4aa6-b5d5-0ed577661d0b, invocation_id=4ce9612e-2046-424b-93a6-45186951b4eb, invocation_timestamp=2019-08-19T08:07:48.485Z, origin=Only For Testing, session_id=4ce9612e-2046-424b-93a6-45186951b4eb, session_timestamp=2019-08-19T08:07:48.485Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,195Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[WARN ] 2019-08-19T08:07:49,195Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,198Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,202Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,205Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=60608568-4045-439f-9e7b-6b231543d216, invocation_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, invocation_timestamp=2019-08-19T08:07:49.131Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dad0968-b0f1-4ab1-8b6c-d3cfc64d2cce, session_timestamp=2019-08-19T08:07:49.131Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,210Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=848330d4-81d2-4aa6-b5d5-0ed577661d0b, invocation_id=4ce9612e-2046-424b-93a6-45186951b4eb, invocation_timestamp=2019-08-19T08:07:48.485Z, origin=Only For Testing, session_id=4ce9612e-2046-424b-93a6-45186951b4eb, session_timestamp=2019-08-19T08:07:48.485Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:07:49,210Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=848330d4-81d2-4aa6-b5d5-0ed577661d0b, invocation_id=4ce9612e-2046-424b-93a6-45186951b4eb, invocation_timestamp=2019-08-19T08:07:48.485Z, origin=Only For Testing, session_id=4ce9612e-2046-424b-93a6-45186951b4eb, session_timestamp=2019-08-19T08:07:48.485Z, thread-id=1070, tx_id=C0517E761FE85B120268686DCB640654CDAE619C4920EF114F3623E2174626F4}
[INFO ] 2019-08-19T08:13:07,979Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-java ... {}
[INFO ] 2019-08-19T08:13:09,414Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java ... {}
[INFO ] 2019-08-19T08:13:10,873Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081256.827/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:13:10,876Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:10,897Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:10,967Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:10,969Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:10,994Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:13:10,997Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:13:11,552Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:11,623Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:11,625Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:11,789Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:12:56.759Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:15,938Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:15,941Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081256.827/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:15,941Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:15,942Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:16,003Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:16,008Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:18,137Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:18,894Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:18,956Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:18,976Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:18,976Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:19,337Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:19,350Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:19,350Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202399350) {}
[INFO ] 2019-08-19T08:13:19,357Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:19,530Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202399350) {}
[INFO ] 2019-08-19T08:13:19,599Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:19,649Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202399350) {}
[INFO ] 2019-08-19T08:13:19,675Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:19,712Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:19,716Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:13:19,719Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:13:20,077Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202399350) {}
[INFO ] 2019-08-19T08:13:20,093Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202399350) {}
[INFO ] 2019-08-19T08:13:20,094Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:20,094Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202399350) {}
[INFO ] 2019-08-19T08:13:20,094Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:20,100Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081256.827/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:13:20,101Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:20,101Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:20,124Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:20,124Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:20,147Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:20,154Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:20,189Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:20,189Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:20,193Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:12:56.759Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:20,684Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:20,687Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081256.827/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:20,687Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:20,688Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:20,690Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:20,690Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:20,794Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:20,806Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:20,807Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:20,808Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:20,830Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:20,830Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:20,977Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:20,983Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:20,983Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202400983) {}
[INFO ] 2019-08-19T08:13:20,985Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:20,993Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202400983) {}
[INFO ] 2019-08-19T08:13:21,003Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:21,007Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202400983) {}
[INFO ] 2019-08-19T08:13:21,012Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:21,052Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:21,061Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202400983) {}
[INFO ] 2019-08-19T08:13:21,064Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202399350) {}
[INFO ] 2019-08-19T08:13:21,065Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:21,075Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202400983) {}
[INFO ] 2019-08-19T08:13:21,078Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:21,094Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202400983) {}
[INFO ] 2019-08-19T08:13:21,094Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:21,095Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202400983) {}
[INFO ] 2019-08-19T08:13:21,095Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:21,100Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081256.827/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:13:21,100Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:21,100Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:21,122Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:21,122Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081256.827/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:21,145Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:21,151Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:21,175Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:21,175Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:21,180Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:12:56.759Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:21,582Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:21,585Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081256.827/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:21,585Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:21,585Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:21,587Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:21,587Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:21,688Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:21,701Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:21,704Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:21,704Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:21,725Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:21,725Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:21,864Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:21,870Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:21,870Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202401870) {}
[INFO ] 2019-08-19T08:13:21,872Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:21,884Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202401870) {}
[INFO ] 2019-08-19T08:13:21,892Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:21,896Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202401870) {}
[INFO ] 2019-08-19T08:13:21,903Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:21,943Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:21,956Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202401870) {}
[INFO ] 2019-08-19T08:13:21,959Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202399350) {}
[INFO ] 2019-08-19T08:13:21,961Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:21,973Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202401870) {}
[INFO ] 2019-08-19T08:13:21,975Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:21,989Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202400983) {}
[INFO ] 2019-08-19T08:13:21,990Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:22,000Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202401870) {}
[INFO ] 2019-08-19T08:13:22,001Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:22,011Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202401870) {}
[INFO ] 2019-08-19T08:13:22,011Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:22,011Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202401870) {}
[INFO ] 2019-08-19T08:13:22,011Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:13:22,345Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=900b4c64-6ce9-425d-ba30-88f720d7492c, invocation_id=7c53552d-7406-49f5-9856-440fad94820c, invocation_timestamp=2019-08-19T08:13:22.058Z, origin=Only For Testing, session_id=7c53552d-7406-49f5-9856-440fad94820c, session_timestamp=2019-08-19T08:13:22.058Z, thread-id=202}
[WARN ] 2019-08-19T08:13:22,345Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=900b4c64-6ce9-425d-ba30-88f720d7492c, invocation_id=7c53552d-7406-49f5-9856-440fad94820c, invocation_timestamp=2019-08-19T08:13:22.058Z, origin=Only For Testing, session_id=7c53552d-7406-49f5-9856-440fad94820c, session_timestamp=2019-08-19T08:13:22.058Z, thread-id=202}
[WARN ] 2019-08-19T08:13:23,827Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=900b4c64-6ce9-425d-ba30-88f720d7492c, invocation_id=7c53552d-7406-49f5-9856-440fad94820c, invocation_timestamp=2019-08-19T08:13:22.058Z, origin=Only For Testing, session_id=7c53552d-7406-49f5-9856-440fad94820c, session_timestamp=2019-08-19T08:13:22.058Z, thread-id=202}
[INFO ] 2019-08-19T08:13:24,015Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[WARN ] 2019-08-19T08:13:24,026Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,057Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[WARN ] 2019-08-19T08:13:24,108Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,132Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=900b4c64-6ce9-425d-ba30-88f720d7492c, invocation_id=7c53552d-7406-49f5-9856-440fad94820c, invocation_timestamp=2019-08-19T08:13:22.058Z, origin=Only For Testing, session_id=7c53552d-7406-49f5-9856-440fad94820c, session_timestamp=2019-08-19T08:13:22.058Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,132Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=900b4c64-6ce9-425d-ba30-88f720d7492c, invocation_id=7c53552d-7406-49f5-9856-440fad94820c, invocation_timestamp=2019-08-19T08:13:22.058Z, origin=Only For Testing, session_id=7c53552d-7406-49f5-9856-440fad94820c, session_timestamp=2019-08-19T08:13:22.058Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,163Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=900b4c64-6ce9-425d-ba30-88f720d7492c, invocation_id=7c53552d-7406-49f5-9856-440fad94820c, invocation_timestamp=2019-08-19T08:13:22.058Z, origin=Only For Testing, session_id=7c53552d-7406-49f5-9856-440fad94820c, session_timestamp=2019-08-19T08:13:22.058Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,184Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[WARN ] 2019-08-19T08:13:24,185Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,189Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,195Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,199Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=2ebdd1c0-c2a3-49d5-87ac-2347408ee674, invocation_id=5156dafd-304c-4157-8aaf-81edc69ccba1, invocation_timestamp=2019-08-19T08:13:23.943Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5156dafd-304c-4157-8aaf-81edc69ccba1, session_timestamp=2019-08-19T08:13:23.943Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,225Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=900b4c64-6ce9-425d-ba30-88f720d7492c, invocation_id=7c53552d-7406-49f5-9856-440fad94820c, invocation_timestamp=2019-08-19T08:13:22.058Z, origin=Only For Testing, session_id=7c53552d-7406-49f5-9856-440fad94820c, session_timestamp=2019-08-19T08:13:22.058Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,225Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=900b4c64-6ce9-425d-ba30-88f720d7492c, invocation_id=7c53552d-7406-49f5-9856-440fad94820c, invocation_timestamp=2019-08-19T08:13:22.058Z, origin=Only For Testing, session_id=7c53552d-7406-49f5-9856-440fad94820c, session_timestamp=2019-08-19T08:13:22.058Z, thread-id=202, tx_id=619AB7076ADBB7F7E2D0C9A0C83F347F75EEAFC84C6E4BB43E9ED2190E189D98}
[INFO ] 2019-08-19T08:13:24,339Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081324.251/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:13:24,339Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:24,339Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:24,364Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:24,365Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:24,386Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:24,393Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:24,397Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:24,397Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:24,402Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:24.251Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:24,797Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:24,799Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081324.251/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:24,799Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:24,800Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:24,803Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:24,803Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:24,896Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:24,907Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:24,936Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:24,946Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:24,946Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:25,068Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:25,073Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:25,073Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202405073) {}
[INFO ] 2019-08-19T08:13:25,075Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:25,098Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202405073) {}
[INFO ] 2019-08-19T08:13:25,112Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:25,119Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202405073) {}
[INFO ] 2019-08-19T08:13:25,125Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:25,160Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:25,163Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:13:25,163Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:13:25,170Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202405073) {}
[INFO ] 2019-08-19T08:13:25,173Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202405073) {}
[INFO ] 2019-08-19T08:13:25,173Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:25,173Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202405073) {}
[INFO ] 2019-08-19T08:13:25,173Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:25,177Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081324.251/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:13:25,177Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:25,177Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:25,197Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:25,197Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:25,220Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:25,228Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:25,257Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:25,257Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:25,260Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:24.251Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:25,677Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:25,681Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081324.251/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:25,681Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:25,682Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:25,684Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:25,684Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:25,773Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:25,784Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:25,785Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:25,786Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:25,804Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:25,804Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:25,924Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:25,931Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:25,931Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202405931) {}
[INFO ] 2019-08-19T08:13:25,933Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:25,941Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202405931) {}
[INFO ] 2019-08-19T08:13:25,955Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:25,958Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202405931) {}
[INFO ] 2019-08-19T08:13:25,964Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:25,998Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:26,004Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202405931) {}
[INFO ] 2019-08-19T08:13:26,006Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202405073) {}
[INFO ] 2019-08-19T08:13:26,007Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:26,014Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202405931) {}
[INFO ] 2019-08-19T08:13:26,015Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:26,023Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202405931) {}
[INFO ] 2019-08-19T08:13:26,023Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:26,023Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202405931) {}
[INFO ] 2019-08-19T08:13:26,023Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:26,028Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081324.251/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:13:26,028Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:26,028Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:26,050Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:26,051Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081324.251/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:26,073Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:26,080Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:26,104Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:26,104Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:26,108Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:24.251Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:26,453Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:26,455Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081324.251/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:26,455Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:26,456Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:26,458Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:26,458Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:26,538Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:26,551Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:26,553Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:26,554Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:26,574Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:26,574Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:26,687Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:26,691Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:26,691Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202406691) {}
[INFO ] 2019-08-19T08:13:26,692Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:26,697Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202406691) {}
[INFO ] 2019-08-19T08:13:26,702Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:26,705Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202406691) {}
[INFO ] 2019-08-19T08:13:26,711Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:26,749Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:26,756Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202406691) {}
[INFO ] 2019-08-19T08:13:26,758Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202405073) {}
[INFO ] 2019-08-19T08:13:26,760Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:26,771Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202406691) {}
[INFO ] 2019-08-19T08:13:26,772Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:26,784Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202405931) {}
[INFO ] 2019-08-19T08:13:26,785Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:26,793Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202406691) {}
[INFO ] 2019-08-19T08:13:26,794Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:26,804Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202406691) {}
[INFO ] 2019-08-19T08:13:26,804Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:26,804Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202406691) {}
[INFO ] 2019-08-19T08:13:26,804Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:13:27,666Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=af57160f-365b-47ae-b0fa-b594de8003ec, invocation_id=fd275ead-cca3-4371-8e15-e1972a10ba69, invocation_timestamp=2019-08-19T08:13:26.805Z, origin=Only For Testing, session_id=fd275ead-cca3-4371-8e15-e1972a10ba69, session_timestamp=2019-08-19T08:13:26.805Z, thread-id=378}
[INFO ] 2019-08-19T08:13:27,709Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[WARN ] 2019-08-19T08:13:27,709Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,718Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[WARN ] 2019-08-19T08:13:27,750Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,763Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=af57160f-365b-47ae-b0fa-b594de8003ec, invocation_id=fd275ead-cca3-4371-8e15-e1972a10ba69, invocation_timestamp=2019-08-19T08:13:26.805Z, origin=Only For Testing, session_id=fd275ead-cca3-4371-8e15-e1972a10ba69, session_timestamp=2019-08-19T08:13:26.805Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,763Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=af57160f-365b-47ae-b0fa-b594de8003ec, invocation_id=fd275ead-cca3-4371-8e15-e1972a10ba69, invocation_timestamp=2019-08-19T08:13:26.805Z, origin=Only For Testing, session_id=fd275ead-cca3-4371-8e15-e1972a10ba69, session_timestamp=2019-08-19T08:13:26.805Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,777Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=af57160f-365b-47ae-b0fa-b594de8003ec, invocation_id=fd275ead-cca3-4371-8e15-e1972a10ba69, invocation_timestamp=2019-08-19T08:13:26.805Z, origin=Only For Testing, session_id=fd275ead-cca3-4371-8e15-e1972a10ba69, session_timestamp=2019-08-19T08:13:26.805Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,786Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[WARN ] 2019-08-19T08:13:27,786Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,790Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,795Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,799Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=4cdcbd06-2977-488f-a1ba-187c991de5d6, invocation_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, invocation_timestamp=2019-08-19T08:13:27.692Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b91508aa-ae72-4d6e-869b-3f09ac5d390e, session_timestamp=2019-08-19T08:13:27.692Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,806Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=af57160f-365b-47ae-b0fa-b594de8003ec, invocation_id=fd275ead-cca3-4371-8e15-e1972a10ba69, invocation_timestamp=2019-08-19T08:13:26.805Z, origin=Only For Testing, session_id=fd275ead-cca3-4371-8e15-e1972a10ba69, session_timestamp=2019-08-19T08:13:26.805Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,806Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=af57160f-365b-47ae-b0fa-b594de8003ec, invocation_id=fd275ead-cca3-4371-8e15-e1972a10ba69, invocation_timestamp=2019-08-19T08:13:26.805Z, origin=Only For Testing, session_id=fd275ead-cca3-4371-8e15-e1972a10ba69, session_timestamp=2019-08-19T08:13:26.805Z, thread-id=378, tx_id=67DB8EE15532DA8DD134979C33C4EB4B636B2C6A1166AA5AFEA1FE62339ACB44}
[INFO ] 2019-08-19T08:13:27,888Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081327.825/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:13:27,888Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:27,889Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:27,914Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:27,915Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:27,948Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:27,955Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:27,959Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:27,959Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:27,964Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:27.824Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:28,374Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:28,376Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081327.825/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:28,376Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:28,376Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:28,378Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:28,378Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:28,460Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:28,471Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:28,499Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:28,505Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:28,505Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:28,619Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:28,624Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:28,624Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202408624) {}
[INFO ] 2019-08-19T08:13:28,626Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:28,643Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202408624) {}
[INFO ] 2019-08-19T08:13:28,655Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:28,658Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202408624) {}
[INFO ] 2019-08-19T08:13:28,665Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:28,702Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:28,703Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:13:28,703Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:13:28,709Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202408624) {}
[INFO ] 2019-08-19T08:13:28,711Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202408624) {}
[INFO ] 2019-08-19T08:13:28,711Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:28,711Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202408624) {}
[INFO ] 2019-08-19T08:13:28,711Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:28,714Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081327.825/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:13:28,715Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:28,715Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:28,737Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:28,738Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:28,758Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:28,764Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:28,781Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:28,781Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:28,783Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:27.824Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:29,078Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:29,079Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081327.825/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:29,079Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:29,080Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:29,081Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:29,081Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:29,144Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:29,151Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:29,152Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:29,153Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:29,168Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:29,168Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:29,279Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:29,283Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:29,283Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202409283) {}
[INFO ] 2019-08-19T08:13:29,284Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:29,290Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202409283) {}
[INFO ] 2019-08-19T08:13:29,296Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:29,298Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202409283) {}
[INFO ] 2019-08-19T08:13:29,303Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:29,333Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:29,338Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202409283) {}
[INFO ] 2019-08-19T08:13:29,341Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202408624) {}
[INFO ] 2019-08-19T08:13:29,342Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:29,349Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202409283) {}
[INFO ] 2019-08-19T08:13:29,349Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:29,358Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202409283) {}
[INFO ] 2019-08-19T08:13:29,358Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:29,358Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202409283) {}
[INFO ] 2019-08-19T08:13:29,358Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:29,363Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081327.825/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:13:29,363Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:29,364Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:29,386Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:29,387Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081327.825/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:29,409Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:29,418Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:29,444Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:29,444Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:29,450Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:27.824Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:29,748Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:29,749Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081327.825/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:29,749Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:29,750Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:29,752Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:29,752Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:29,822Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:29,830Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:29,833Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:29,833Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:29,851Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:29,851Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:29,960Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:29,963Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:29,963Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202409963) {}
[INFO ] 2019-08-19T08:13:29,964Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:29,969Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202409963) {}
[INFO ] 2019-08-19T08:13:29,975Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:29,978Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202409963) {}
[INFO ] 2019-08-19T08:13:29,981Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:30,013Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:30,017Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202409963) {}
[INFO ] 2019-08-19T08:13:30,019Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202408624) {}
[INFO ] 2019-08-19T08:13:30,020Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:30,028Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202409963) {}
[INFO ] 2019-08-19T08:13:30,028Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:30,036Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202409283) {}
[INFO ] 2019-08-19T08:13:30,038Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:30,046Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202409963) {}
[INFO ] 2019-08-19T08:13:30,048Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:30,056Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202409963) {}
[INFO ] 2019-08-19T08:13:30,056Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:30,056Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202409963) {}
[INFO ] 2019-08-19T08:13:30,056Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:13:30,830Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ca5beacd-9c26-4908-b1d9-db21c5fcb66b, invocation_id=7669d0de-9a5b-4d62-8d53-9c249738c510, invocation_timestamp=2019-08-19T08:13:30.057Z, origin=Only For Testing, session_id=7669d0de-9a5b-4d62-8d53-9c249738c510, session_timestamp=2019-08-19T08:13:30.057Z, thread-id=551}
[INFO ] 2019-08-19T08:13:30,865Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[WARN ] 2019-08-19T08:13:30,865Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,871Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[WARN ] 2019-08-19T08:13:30,898Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,908Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ca5beacd-9c26-4908-b1d9-db21c5fcb66b, invocation_id=7669d0de-9a5b-4d62-8d53-9c249738c510, invocation_timestamp=2019-08-19T08:13:30.057Z, origin=Only For Testing, session_id=7669d0de-9a5b-4d62-8d53-9c249738c510, session_timestamp=2019-08-19T08:13:30.057Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,908Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ca5beacd-9c26-4908-b1d9-db21c5fcb66b, invocation_id=7669d0de-9a5b-4d62-8d53-9c249738c510, invocation_timestamp=2019-08-19T08:13:30.057Z, origin=Only For Testing, session_id=7669d0de-9a5b-4d62-8d53-9c249738c510, session_timestamp=2019-08-19T08:13:30.057Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,920Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ca5beacd-9c26-4908-b1d9-db21c5fcb66b, invocation_id=7669d0de-9a5b-4d62-8d53-9c249738c510, invocation_timestamp=2019-08-19T08:13:30.057Z, origin=Only For Testing, session_id=7669d0de-9a5b-4d62-8d53-9c249738c510, session_timestamp=2019-08-19T08:13:30.057Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,928Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[WARN ] 2019-08-19T08:13:30,928Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,933Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,937Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,941Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=670042e3-f6a9-40e0-be04-7793a3837330, invocation_id=d14334ac-8c4b-437f-82d7-b26395bee735, invocation_timestamp=2019-08-19T08:13:30.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d14334ac-8c4b-437f-82d7-b26395bee735, session_timestamp=2019-08-19T08:13:30.854Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,947Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ca5beacd-9c26-4908-b1d9-db21c5fcb66b, invocation_id=7669d0de-9a5b-4d62-8d53-9c249738c510, invocation_timestamp=2019-08-19T08:13:30.057Z, origin=Only For Testing, session_id=7669d0de-9a5b-4d62-8d53-9c249738c510, session_timestamp=2019-08-19T08:13:30.057Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:30,947Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=ca5beacd-9c26-4908-b1d9-db21c5fcb66b, invocation_id=7669d0de-9a5b-4d62-8d53-9c249738c510, invocation_timestamp=2019-08-19T08:13:30.057Z, origin=Only For Testing, session_id=7669d0de-9a5b-4d62-8d53-9c249738c510, session_timestamp=2019-08-19T08:13:30.057Z, thread-id=551, tx_id=B1C2D7065C5A53E5D32E8183BC2E85B343E17C238108C76508869979E3266D0F}
[INFO ] 2019-08-19T08:13:31,011Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081330.956/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:13:31,012Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:31,012Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:31,033Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:31,033Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:31,053Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:31,058Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:31,060Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:31,061Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:31,065Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:30.956Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:31,385Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:31,386Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081330.956/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:31,386Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:31,387Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:31,388Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:31,388Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:31,444Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:31,451Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:31,472Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:31,478Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:31,478Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:31,584Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:31,588Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:31,588Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202411588) {}
[INFO ] 2019-08-19T08:13:31,589Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:31,599Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202411588) {}
[INFO ] 2019-08-19T08:13:31,606Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:31,609Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202411588) {}
[INFO ] 2019-08-19T08:13:31,612Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:31,643Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:31,644Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:13:31,644Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:13:31,649Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202411588) {}
[INFO ] 2019-08-19T08:13:31,651Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202411588) {}
[INFO ] 2019-08-19T08:13:31,652Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:31,652Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202411588) {}
[INFO ] 2019-08-19T08:13:31,652Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:31,655Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081330.956/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:13:31,656Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:31,656Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:31,678Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:31,678Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:31,701Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:31,707Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:31,724Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:31,724Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:31,726Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:30.956Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:32,024Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:32,025Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081330.956/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:32,025Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:32,026Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:32,030Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:32,030Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:32,094Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:32,104Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:32,105Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:32,105Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:32,124Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:32,124Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:32,237Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:32,242Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:32,242Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202412242) {}
[INFO ] 2019-08-19T08:13:32,243Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:32,248Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202412242) {}
[INFO ] 2019-08-19T08:13:32,252Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:32,255Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202412242) {}
[INFO ] 2019-08-19T08:13:32,258Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:32,289Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:32,296Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202412242) {}
[INFO ] 2019-08-19T08:13:32,299Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202411588) {}
[INFO ] 2019-08-19T08:13:32,300Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:32,309Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202412242) {}
[INFO ] 2019-08-19T08:13:32,310Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:32,319Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202412242) {}
[INFO ] 2019-08-19T08:13:32,319Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:32,319Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202412242) {}
[INFO ] 2019-08-19T08:13:32,319Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:32,324Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081330.956/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:13:32,325Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:32,325Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:32,348Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:32,348Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081330.956/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:32,371Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:32,376Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:32,395Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:32,395Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:32,399Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:30.956Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:32,676Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:32,677Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081330.956/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:32,677Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:32,679Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:32,680Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:32,680Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:32,742Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:32,749Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:32,750Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:32,750Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:32,766Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:32,766Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:32,870Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:32,874Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:32,874Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202412874) {}
[INFO ] 2019-08-19T08:13:32,875Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:32,879Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202412874) {}
[INFO ] 2019-08-19T08:13:32,884Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:32,886Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202412874) {}
[INFO ] 2019-08-19T08:13:32,889Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:32,919Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:32,925Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202412874) {}
[INFO ] 2019-08-19T08:13:32,927Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202411588) {}
[INFO ] 2019-08-19T08:13:32,928Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:32,934Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202412874) {}
[INFO ] 2019-08-19T08:13:32,935Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:32,941Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202412242) {}
[INFO ] 2019-08-19T08:13:32,942Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:32,950Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202412874) {}
[INFO ] 2019-08-19T08:13:32,950Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:32,957Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202412874) {}
[INFO ] 2019-08-19T08:13:32,957Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:32,957Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202412874) {}
[INFO ] 2019-08-19T08:13:32,957Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:13:34,007Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=31d1b36f-1bd5-4723-b8c9-5b2bbec8f1b3, invocation_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, invocation_timestamp=2019-08-19T08:13:32.958Z, origin=Only For Testing, session_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, session_timestamp=2019-08-19T08:13:32.958Z, thread-id=724}
[INFO ] 2019-08-19T08:13:34,036Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[WARN ] 2019-08-19T08:13:34,036Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,042Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[WARN ] 2019-08-19T08:13:34,069Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,078Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=31d1b36f-1bd5-4723-b8c9-5b2bbec8f1b3, invocation_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, invocation_timestamp=2019-08-19T08:13:32.958Z, origin=Only For Testing, session_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, session_timestamp=2019-08-19T08:13:32.958Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,078Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=31d1b36f-1bd5-4723-b8c9-5b2bbec8f1b3, invocation_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, invocation_timestamp=2019-08-19T08:13:32.958Z, origin=Only For Testing, session_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, session_timestamp=2019-08-19T08:13:32.958Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,088Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=31d1b36f-1bd5-4723-b8c9-5b2bbec8f1b3, invocation_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, invocation_timestamp=2019-08-19T08:13:32.958Z, origin=Only For Testing, session_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, session_timestamp=2019-08-19T08:13:32.958Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,097Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[WARN ] 2019-08-19T08:13:34,097Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,100Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,107Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,111Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=83462689-4951-4a5e-9d80-d575002e6f4c, invocation_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, invocation_timestamp=2019-08-19T08:13:34.027Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9ae8af20-3e9b-4fc8-9599-96f0bd6b7076, session_timestamp=2019-08-19T08:13:34.027Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,118Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=31d1b36f-1bd5-4723-b8c9-5b2bbec8f1b3, invocation_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, invocation_timestamp=2019-08-19T08:13:32.958Z, origin=Only For Testing, session_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, session_timestamp=2019-08-19T08:13:32.958Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,118Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=31d1b36f-1bd5-4723-b8c9-5b2bbec8f1b3, invocation_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, invocation_timestamp=2019-08-19T08:13:32.958Z, origin=Only For Testing, session_id=83eba6bc-9ef0-4f07-a83a-ae6d2794c575, session_timestamp=2019-08-19T08:13:32.958Z, thread-id=724, tx_id=E83D62E5D3556A3D340EA3E21ED525BDE466D7A30287B12A19D1F3F734AA5AA9}
[INFO ] 2019-08-19T08:13:34,172Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081334.127/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:13:34,172Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:34,172Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:34,196Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:34,196Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:34,217Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:34,222Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:34,225Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:34,226Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:34,231Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:34.127Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:34,563Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:34,564Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081334.127/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:34,564Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:34,565Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:34,566Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:34,566Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:34,616Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:34,621Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:34,640Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:34,646Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:34,646Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:34,752Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:34,756Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:34,756Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202414756) {}
[INFO ] 2019-08-19T08:13:34,757Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:34,769Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202414756) {}
[INFO ] 2019-08-19T08:13:34,776Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:34,779Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202414756) {}
[INFO ] 2019-08-19T08:13:34,782Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:34,812Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:34,813Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:13:34,813Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:13:34,818Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202414756) {}
[INFO ] 2019-08-19T08:13:34,820Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202414756) {}
[INFO ] 2019-08-19T08:13:34,820Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:34,820Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202414756) {}
[INFO ] 2019-08-19T08:13:34,820Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:34,824Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081334.127/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:13:34,824Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:34,824Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:34,846Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:34,846Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:34,868Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:34,874Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:34,895Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:34,895Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:34,900Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:34.127Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:35,177Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:35,179Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081334.127/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:35,179Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:35,179Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:35,181Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:35,181Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:35,239Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:35,246Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:35,248Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:35,248Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:35,269Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:35,269Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:35,364Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:35,368Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:35,368Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202415368) {}
[INFO ] 2019-08-19T08:13:35,369Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:35,373Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202415368) {}
[INFO ] 2019-08-19T08:13:35,377Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:35,379Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202415368) {}
[INFO ] 2019-08-19T08:13:35,384Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:35,414Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:35,418Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202415368) {}
[INFO ] 2019-08-19T08:13:35,420Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202414756) {}
[INFO ] 2019-08-19T08:13:35,421Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:35,427Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202415368) {}
[INFO ] 2019-08-19T08:13:35,427Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:35,433Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202415368) {}
[INFO ] 2019-08-19T08:13:35,433Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:35,433Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202415368) {}
[INFO ] 2019-08-19T08:13:35,433Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:35,436Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081334.127/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:13:35,436Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:35,436Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:35,457Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:35,457Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081334.127/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:35,477Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:35,482Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:35,496Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:35,496Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:35,499Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:34.127Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:35,794Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:35,796Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081334.127/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:35,796Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:35,798Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:35,800Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:35,801Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:35,856Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:35,864Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:35,866Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:35,866Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:35,882Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:35,882Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:35,962Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:35,967Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:35,967Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202415967) {}
[INFO ] 2019-08-19T08:13:35,968Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:35,972Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202415967) {}
[INFO ] 2019-08-19T08:13:35,976Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:35,978Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202415967) {}
[INFO ] 2019-08-19T08:13:35,983Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:36,011Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:36,017Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202415967) {}
[INFO ] 2019-08-19T08:13:36,019Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202414756) {}
[INFO ] 2019-08-19T08:13:36,020Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:36,025Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202415967) {}
[INFO ] 2019-08-19T08:13:36,025Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:36,029Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202415368) {}
[INFO ] 2019-08-19T08:13:36,029Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:36,035Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202415967) {}
[INFO ] 2019-08-19T08:13:36,036Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:36,041Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202415967) {}
[INFO ] 2019-08-19T08:13:36,041Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:36,041Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202415967) {}
[INFO ] 2019-08-19T08:13:36,041Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:13:36,624Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e446b6cd-ae6a-4f10-8351-a98c48cba50c, invocation_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, invocation_timestamp=2019-08-19T08:13:36.042Z, origin=Only For Testing, session_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, session_timestamp=2019-08-19T08:13:36.042Z, thread-id=897}
[INFO ] 2019-08-19T08:13:36,656Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[WARN ] 2019-08-19T08:13:36,656Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,661Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[WARN ] 2019-08-19T08:13:36,683Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,693Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e446b6cd-ae6a-4f10-8351-a98c48cba50c, invocation_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, invocation_timestamp=2019-08-19T08:13:36.042Z, origin=Only For Testing, session_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, session_timestamp=2019-08-19T08:13:36.042Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,693Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e446b6cd-ae6a-4f10-8351-a98c48cba50c, invocation_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, invocation_timestamp=2019-08-19T08:13:36.042Z, origin=Only For Testing, session_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, session_timestamp=2019-08-19T08:13:36.042Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,705Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e446b6cd-ae6a-4f10-8351-a98c48cba50c, invocation_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, invocation_timestamp=2019-08-19T08:13:36.042Z, origin=Only For Testing, session_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, session_timestamp=2019-08-19T08:13:36.042Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,715Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[WARN ] 2019-08-19T08:13:36,715Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,718Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,723Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,726Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=cf154566-bf96-4b1a-8126-a8772afb80c1, invocation_id=f8970c76-481c-42ad-a502-c83a10d41b44, invocation_timestamp=2019-08-19T08:13:36.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8970c76-481c-42ad-a502-c83a10d41b44, session_timestamp=2019-08-19T08:13:36.644Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,731Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e446b6cd-ae6a-4f10-8351-a98c48cba50c, invocation_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, invocation_timestamp=2019-08-19T08:13:36.042Z, origin=Only For Testing, session_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, session_timestamp=2019-08-19T08:13:36.042Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,731Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e446b6cd-ae6a-4f10-8351-a98c48cba50c, invocation_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, invocation_timestamp=2019-08-19T08:13:36.042Z, origin=Only For Testing, session_id=22f42289-0747-48b1-8abd-d47d7bb2eb35, session_timestamp=2019-08-19T08:13:36.042Z, thread-id=897, tx_id=43CA47A4FD8616F76386B4D6BDC45D362BCA6671A32D548F7BF8B0A8437BBA5A}
[INFO ] 2019-08-19T08:13:36,793Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081336.741/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:13:36,793Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:36,794Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:36,817Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:36,817Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:36,836Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:36,843Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:36,845Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:36,845Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:36,850Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:36.741Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:37,145Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:37,147Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081336.741/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:37,147Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:37,148Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:37,149Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,149Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,203Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,210Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:37,231Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:37,238Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,238Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,327Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,333Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:37,333Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202417333) {}
[INFO ] 2019-08-19T08:13:37,334Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:37,344Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202417333) {}
[INFO ] 2019-08-19T08:13:37,350Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:37,354Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202417333) {}
[INFO ] 2019-08-19T08:13:37,356Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:37,384Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:37,385Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:13:37,385Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:13:37,389Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202417333) {}
[INFO ] 2019-08-19T08:13:37,392Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202417333) {}
[INFO ] 2019-08-19T08:13:37,392Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:37,392Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202417333) {}
[INFO ] 2019-08-19T08:13:37,392Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:37,395Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081336.741/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:13:37,395Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:37,395Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:37,417Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:37,417Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:37,438Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:37,442Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:37,460Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:37,460Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:37,462Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:36.741Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:37,696Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:37,698Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081336.741/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:37,698Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:37,700Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:37,702Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,702Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,759Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:37,765Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:37,766Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:37,767Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:37,781Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:37,781Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:37,861Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:37,868Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:37,868Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202417868) {}
[INFO ] 2019-08-19T08:13:37,869Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:37,874Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202417868) {}
[INFO ] 2019-08-19T08:13:37,879Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:37,884Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202417868) {}
[INFO ] 2019-08-19T08:13:37,887Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:37,911Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:37,918Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202417868) {}
[INFO ] 2019-08-19T08:13:37,920Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202417333) {}
[INFO ] 2019-08-19T08:13:37,921Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:37,926Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202417868) {}
[INFO ] 2019-08-19T08:13:37,927Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:37,932Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202417868) {}
[INFO ] 2019-08-19T08:13:37,932Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:37,932Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202417868) {}
[INFO ] 2019-08-19T08:13:37,932Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:37,935Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081336.741/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:13:37,935Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:13:37,935Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:13:37,957Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:37,957Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-081336.741/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:13:37,972Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:13:37,978Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:13:37,994Z [main] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:37,994Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:13:37,996Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:13:36.741Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:13:38,243Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:13:38,244Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081336.741/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:13:38,244Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:13:38,245Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:13:38,246Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:38,246Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:38,296Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:13:38,303Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:13:38,304Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:13:38,304Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:13:38,322Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:38,322Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:38,419Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:13:38,423Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:13:38,423Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202418423) {}
[INFO ] 2019-08-19T08:13:38,424Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:38,429Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202418423) {}
[INFO ] 2019-08-19T08:13:38,436Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:13:38,439Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202418423) {}
[INFO ] 2019-08-19T08:13:38,442Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:38,471Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=13E42A5C5D94AE916779D5EBFA48B6B376465717270ABA3E54AFD764E532CAD4 uploader=app filename=null {}
[INFO ] 2019-08-19T08:13:38,476Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202418423) {}
[INFO ] 2019-08-19T08:13:38,477Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202417333) {}
[INFO ] 2019-08-19T08:13:38,478Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:38,483Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202418423) {}
[INFO ] 2019-08-19T08:13:38,484Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:38,489Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202417868) {}
[INFO ] 2019-08-19T08:13:38,489Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:38,494Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202418423) {}
[INFO ] 2019-08-19T08:13:38,494Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:13:38,500Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202418423) {}
[INFO ] 2019-08-19T08:13:38,500Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:13:38,500Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202418423) {}
[INFO ] 2019-08-19T08:13:38,500Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:13:39,100Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=407b66ba-31b6-4b2a-afb4-c5832ec25185, invocation_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, invocation_timestamp=2019-08-19T08:13:38.500Z, origin=Only For Testing, session_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, session_timestamp=2019-08-19T08:13:38.500Z, thread-id=1070}
[INFO ] 2019-08-19T08:13:39,125Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[WARN ] 2019-08-19T08:13:39,125Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,130Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[WARN ] 2019-08-19T08:13:39,153Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,162Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=407b66ba-31b6-4b2a-afb4-c5832ec25185, invocation_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, invocation_timestamp=2019-08-19T08:13:38.500Z, origin=Only For Testing, session_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, session_timestamp=2019-08-19T08:13:38.500Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,162Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=407b66ba-31b6-4b2a-afb4-c5832ec25185, invocation_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, invocation_timestamp=2019-08-19T08:13:38.500Z, origin=Only For Testing, session_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, session_timestamp=2019-08-19T08:13:38.500Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,173Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=407b66ba-31b6-4b2a-afb4-c5832ec25185, invocation_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, invocation_timestamp=2019-08-19T08:13:38.500Z, origin=Only For Testing, session_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, session_timestamp=2019-08-19T08:13:38.500Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,181Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[WARN ] 2019-08-19T08:13:39,181Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,186Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,191Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,194Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=145620f6-74f3-4b9c-b376-37b19c739551, invocation_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, invocation_timestamp=2019-08-19T08:13:39.115Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7aa63db9-8f22-49d6-9068-7df3d1ae0ad6, session_timestamp=2019-08-19T08:13:39.115Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,199Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=407b66ba-31b6-4b2a-afb4-c5832ec25185, invocation_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, invocation_timestamp=2019-08-19T08:13:38.500Z, origin=Only For Testing, session_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, session_timestamp=2019-08-19T08:13:38.500Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:13:39,199Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=407b66ba-31b6-4b2a-afb4-c5832ec25185, invocation_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, invocation_timestamp=2019-08-19T08:13:38.500Z, origin=Only For Testing, session_id=845fe23e-79a5-46d2-b265-8c19904ec4a3, session_timestamp=2019-08-19T08:13:38.500Z, thread-id=1070, tx_id=77437DD48A1D796EA7C7462689689FA1E8B3338BE66CF0A7DBFCC1EA24BB046B}
[INFO ] 2019-08-19T08:21:55,881Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:21:56,018Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar {}
[INFO ] 2019-08-19T08:21:56,155Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:21:59,276Z [Test worker] internal.Verifier. - Error validating transaction 62FD7EE5149CE1ADD6CEE96D46A9B2750E53188337361FA0204ACC3B5316D147. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:29) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:57) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:21:59,285Z [Test worker] internal.Verifier. - Error validating transaction 62FD7EE5149CE1ADD6CEE96D46A9B2750E53188337361FA0204ACC3B5316D147. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:29) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresOneOutputInTheTransaction$2(ContractTests.java:57) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresOneOutputInTheTransaction(ContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:22:00,204Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:00,204Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar {}
[INFO ] 2019-08-19T08:22:00,227Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:22:01,084Z [Test worker] internal.Verifier. - Error validating transaction 37D7EBB9EC3507191155E8CE347C7E74B8418F6D76D9875E02981AA1350B0993. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required singer.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:32) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:175) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:171) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:01,088Z [Test worker] internal.Verifier. - Error validating transaction 37D7EBB9EC3507191155E8CE347C7E74B8418F6D76D9875E02981AA1350B0993. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required singer.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:32) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$14(ContractTests.java:175) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:171) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:02,267Z [Test worker] internal.Verifier. - Error validating transaction 7F53C11ED5D5E0781ABAA278B63447148CC86C760B5E6A426F935C2605B6F61E. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required singer.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:32) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:183) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:179) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:02,270Z [Test worker] internal.Verifier. - Error validating transaction 7F53C11ED5D5E0781ABAA278B63447148CC86C760B5E6A426F935C2605B6F61E. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required singer.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:32) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction$15(ContractTests.java:183) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheIssuerToBeARequiredSignerInTheTransaction(ContractTests.java:179) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:22:03,657Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:03,657Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar {}
[INFO ] 2019-08-19T08:22:03,681Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:03,715Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:03,715Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar {}
[INFO ] 2019-08-19T08:22:03,736Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:22:03,782Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:22:03,789Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:22:04,414Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:22:04,415Z [Test worker] internal.Verifier. - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.contracts.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-19T08:22:04,415Z [Test worker] internal.Verifier. - Error validating transaction 8CF3CBA8578F7F4E1CF589A1138E0D0A362F1086CE7AFF36CEB8B2E46FCB2BEA. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:30) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:96) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[WARN ] 2019-08-19T08:22:04,418Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-19T08:22:04,419Z [Test worker] internal.Verifier. - Error validating transaction 8CF3CBA8578F7F4E1CF589A1138E0D0A362F1086CE7AFF36CEB8B2E46FCB2BEA. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:30) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToBeATokenState$6(ContractTests.java:96) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToBeATokenState(ContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:22:04,983Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:04,983Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar {}
[INFO ] 2019-08-19T08:22:05,006Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:22:05,585Z [Test worker] internal.Verifier. - Error validating transaction 579C43886A38D923E1B7437494072FF6F0BA6416E8C9DB8CB7F399BA0B8ED194. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:154) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:150) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:05,588Z [Test worker] internal.Verifier. - Error validating transaction 579C43886A38D923E1B7437494072FF6F0BA6416E8C9DB8CB7F399BA0B8ED194. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand$12(ContractTests.java:154) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsCommandToBeAnIssueCommand(ContractTests.java:150) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:22:06,289Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:06,289Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar {}
[INFO ] 2019-08-19T08:22:06,310Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:22:06,876Z [Test worker] internal.Verifier. - Error validating transaction A47D83824C08D13A47510CAF302C72D9BC606DC36B1582DABB662879F55A4D1E. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:77) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:72) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:06,880Z [Test worker] internal.Verifier. - Error validating transaction A47D83824C08D13A47510CAF302C72D9BC606DC36B1582DABB662879F55A4D1E. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresOneCommandInTheTransaction$4(ContractTests.java:77) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresOneCommandInTheTransaction(ContractTests.java:72) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:22:07,433Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:07,434Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar {}
[INFO ] 2019-08-19T08:22:07,454Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:22:07,987Z [Test worker] internal.Verifier. - Error validating transaction F3D353990C7B4C9D2935E8232769756953B5D3C87E0EC85EC606CE51C8E1A496. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:34) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount$8(ContractTests.java:119) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount(ContractTests.java:115) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:07,990Z [Test worker] internal.Verifier. - Error validating transaction F3D353990C7B4C9D2935E8232769756953B5D3C87E0EC85EC606CE51C8E1A496. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:34) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount$8(ContractTests.java:119) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount(ContractTests.java:115) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:08,530Z [Test worker] internal.Verifier. - Error validating transaction 1FBBD3F6C72DF193244F158CB146B325DD9DB278417C145B16F3FFF261FD120A. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:34) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount$9(ContractTests.java:127) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount(ContractTests.java:123) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:08,532Z [Test worker] internal.Verifier. - Error validating transaction 1FBBD3F6C72DF193244F158CB146B325DD9DB278417C145B16F3FFF261FD120A. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:34) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount$9(ContractTests.java:127) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresTheTransactionsOutputToHaveAPositiveAmount(ContractTests.java:123) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:22:09,775Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:09,775Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/generated-custom-cordapps/20190819-082155.426/custom-cordapp_1_4_4fa73d99-621f-40fb-8663-892fbfd868c0.jar {}
[INFO ] 2019-08-19T08:22:09,796Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:22:09,841Z [Test worker] contracts.AttachmentConstraint. - Found state bootcamp.contracts.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2019-08-19T08:22:10,343Z [Test worker] internal.Verifier. - Error validating transaction 0CFC3CBBE00FF0167DE888EF1B0A5B6FB845C07EB651C6A39B51974735132C25. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:21) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:34) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:32) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:10,359Z [Test worker] internal.Verifier. - Error validating transaction 224E9ECD6FC503099E57096F396BD5C1997E0B6B279C3D1F0CD87ACFF69A2AAF. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:28) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:37) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:32) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:22:10,364Z [Test worker] internal.Verifier. - Error validating transaction 224E9ECD6FC503099E57096F396BD5C1997E0B6B279C3D1F0CD87ACFF69A2AAF. [errorCode=p79h12, moreInformationAt=https://errors.corda.net/OS/4.0/p79h12] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.lambda$verify$0(TokenContract.java:28) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.java:27) ~[bootcamp-contracts-java.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests.lambda$tokenContractRequiresZeroInputsInTheTransaction$0(ContractTests.java:37) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt:54) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$transaction$1.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt:53) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction$default(NodeTestUtils.kt:51) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.transaction(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.tokenContractRequiresZeroInputsInTheTransaction(ContractTests.java:32) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:22:17,937Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java ... {}
[INFO ] 2019-08-19T08:22:24,510Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082210.937/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:22:24,513Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:24,519Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:24,548Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:24,548Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:24,569Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract. {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Commands$Issue. {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.states.TokenState. {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Commands. {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowInitiator. {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowResponder. {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[WARN ] 2019-08-19T08:22:24,570Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowResponder$1. {}
[INFO ] 2019-08-19T08:22:25,310Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:25,417Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:25,421Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:25,609Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:10.929Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:29,712Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:29,716Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082210.937/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:29,716Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:29,718Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:29,778Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:29,786Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:32,164Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:32,848Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:32,922Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:32,985Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:32,986Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:33,414Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:33,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:33,454Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202953453) {}
[INFO ] 2019-08-19T08:22:33,459Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:33,857Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202953453) {}
[INFO ] 2019-08-19T08:22:33,999Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:34,031Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202953453) {}
[INFO ] 2019-08-19T08:22:34,071Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:34,167Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:34,175Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:22:34,190Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:22:35,008Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202953453) {}
[INFO ] 2019-08-19T08:22:35,064Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202953453) {}
[INFO ] 2019-08-19T08:22:35,065Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:35,065Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202953453) {}
[INFO ] 2019-08-19T08:22:35,065Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:35,084Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082210.937/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:22:35,085Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:35,089Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:35,119Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:35,120Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:35,144Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:35,168Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:35,231Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:35,231Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:35,258Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:10.929Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:36,404Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:36,406Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082210.937/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:36,406Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:36,408Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:36,410Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:36,410Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:36,526Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:36,541Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:36,544Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:36,544Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:36,572Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:36,572Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:36,715Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:36,721Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:36,721Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202956721) {}
[INFO ] 2019-08-19T08:22:36,723Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:36,732Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202956721) {}
[INFO ] 2019-08-19T08:22:36,740Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:36,744Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202956721) {}
[INFO ] 2019-08-19T08:22:36,749Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:36,789Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:36,798Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202956721) {}
[INFO ] 2019-08-19T08:22:36,802Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202953453) {}
[INFO ] 2019-08-19T08:22:36,803Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:36,812Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202956721) {}
[INFO ] 2019-08-19T08:22:36,813Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:36,825Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202956721) {}
[INFO ] 2019-08-19T08:22:36,825Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:36,825Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202956721) {}
[INFO ] 2019-08-19T08:22:36,825Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:36,830Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082210.937/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:22:36,831Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:36,831Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:36,854Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:36,854Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082210.937/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:36,875Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:36,882Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:36,914Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:36,914Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:36,918Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:10.929Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:37,370Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:37,372Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082210.937/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:37,372Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:37,374Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:37,376Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:37,376Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:37,492Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:37,503Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:37,505Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:37,506Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:37,528Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:37,528Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:37,676Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:37,682Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:37,682Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202957682) {}
[INFO ] 2019-08-19T08:22:37,684Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:37,692Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202957682) {}
[INFO ] 2019-08-19T08:22:37,701Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:37,703Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202957682) {}
[INFO ] 2019-08-19T08:22:37,708Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:37,746Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:37,756Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202957682) {}
[INFO ] 2019-08-19T08:22:37,759Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202953453) {}
[INFO ] 2019-08-19T08:22:37,760Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:37,771Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202957682) {}
[INFO ] 2019-08-19T08:22:37,772Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:37,783Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202956721) {}
[INFO ] 2019-08-19T08:22:37,785Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:37,795Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202957682) {}
[INFO ] 2019-08-19T08:22:37,797Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:37,806Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202957682) {}
[INFO ] 2019-08-19T08:22:37,806Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:37,806Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202957682) {}
[INFO ] 2019-08-19T08:22:37,806Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:22:38,065Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=70afe14f-1c6c-4b1c-82d7-531eb8800ab6, invocation_id=3b156089-1af9-46ba-ac9d-5940c4efe904, invocation_timestamp=2019-08-19T08:22:37.839Z, origin=Only For Testing, session_id=3b156089-1af9-46ba-ac9d-5940c4efe904, session_timestamp=2019-08-19T08:22:37.839Z, thread-id=694}
[WARN ] 2019-08-19T08:22:38,065Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=70afe14f-1c6c-4b1c-82d7-531eb8800ab6, invocation_id=3b156089-1af9-46ba-ac9d-5940c4efe904, invocation_timestamp=2019-08-19T08:22:37.839Z, origin=Only For Testing, session_id=3b156089-1af9-46ba-ac9d-5940c4efe904, session_timestamp=2019-08-19T08:22:37.839Z, thread-id=694}
[WARN ] 2019-08-19T08:22:39,270Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=70afe14f-1c6c-4b1c-82d7-531eb8800ab6, invocation_id=3b156089-1af9-46ba-ac9d-5940c4efe904, invocation_timestamp=2019-08-19T08:22:37.839Z, origin=Only For Testing, session_id=3b156089-1af9-46ba-ac9d-5940c4efe904, session_timestamp=2019-08-19T08:22:37.839Z, thread-id=694}
[INFO ] 2019-08-19T08:22:39,519Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[WARN ] 2019-08-19T08:22:39,534Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,577Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[WARN ] 2019-08-19T08:22:39,655Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,687Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=70afe14f-1c6c-4b1c-82d7-531eb8800ab6, invocation_id=3b156089-1af9-46ba-ac9d-5940c4efe904, invocation_timestamp=2019-08-19T08:22:37.839Z, origin=Only For Testing, session_id=3b156089-1af9-46ba-ac9d-5940c4efe904, session_timestamp=2019-08-19T08:22:37.839Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,687Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=70afe14f-1c6c-4b1c-82d7-531eb8800ab6, invocation_id=3b156089-1af9-46ba-ac9d-5940c4efe904, invocation_timestamp=2019-08-19T08:22:37.839Z, origin=Only For Testing, session_id=3b156089-1af9-46ba-ac9d-5940c4efe904, session_timestamp=2019-08-19T08:22:37.839Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,717Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=70afe14f-1c6c-4b1c-82d7-531eb8800ab6, invocation_id=3b156089-1af9-46ba-ac9d-5940c4efe904, invocation_timestamp=2019-08-19T08:22:37.839Z, origin=Only For Testing, session_id=3b156089-1af9-46ba-ac9d-5940c4efe904, session_timestamp=2019-08-19T08:22:37.839Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,742Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[WARN ] 2019-08-19T08:22:39,742Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,753Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,759Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,764Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=aaa5b9c5-b79e-41db-ab78-7135083c90d2, invocation_id=466cce2c-4885-440a-8b87-3af2a212bdab, invocation_timestamp=2019-08-19T08:22:39.450Z, origin=O=Mock Company 1, L=London, C=GB, session_id=466cce2c-4885-440a-8b87-3af2a212bdab, session_timestamp=2019-08-19T08:22:39.450Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,800Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=70afe14f-1c6c-4b1c-82d7-531eb8800ab6, invocation_id=3b156089-1af9-46ba-ac9d-5940c4efe904, invocation_timestamp=2019-08-19T08:22:37.839Z, origin=Only For Testing, session_id=3b156089-1af9-46ba-ac9d-5940c4efe904, session_timestamp=2019-08-19T08:22:37.839Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,800Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=70afe14f-1c6c-4b1c-82d7-531eb8800ab6, invocation_id=3b156089-1af9-46ba-ac9d-5940c4efe904, invocation_timestamp=2019-08-19T08:22:37.839Z, origin=Only For Testing, session_id=3b156089-1af9-46ba-ac9d-5940c4efe904, session_timestamp=2019-08-19T08:22:37.839Z, thread-id=694, tx_id=0839C488DF4EA32053B71B74B5AC552C57B227AA5DFC725A05375F02D237D480}
[INFO ] 2019-08-19T08:22:39,899Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082239.828/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:22:39,900Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:39,900Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:39,916Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:39,917Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:39,939Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:39,946Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:39,950Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:39,950Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:39,956Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:39.828Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:40,371Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:40,373Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082239.828/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:40,373Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:40,375Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:40,377Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:40,377Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:40,468Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:40,477Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:40,502Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:40,511Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:40,511Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:40,636Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:40,640Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:40,641Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202960641) {}
[INFO ] 2019-08-19T08:22:40,643Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:40,654Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202960641) {}
[INFO ] 2019-08-19T08:22:40,662Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:40,665Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202960641) {}
[INFO ] 2019-08-19T08:22:40,669Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:40,705Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:40,707Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:22:40,707Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:22:40,714Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202960641) {}
[INFO ] 2019-08-19T08:22:40,717Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202960641) {}
[INFO ] 2019-08-19T08:22:40,717Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:40,717Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202960641) {}
[INFO ] 2019-08-19T08:22:40,717Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:40,721Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082239.828/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:22:40,721Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:40,721Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:40,742Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:40,743Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:40,765Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:40,770Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:40,798Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:40,798Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:40,801Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:39.828Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:41,192Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:41,194Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082239.828/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:41,194Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:41,195Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:41,196Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:41,196Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:41,278Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:41,286Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:41,287Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:41,288Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:41,363Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:41,363Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:41,476Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:41,481Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:41,481Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202961481) {}
[INFO ] 2019-08-19T08:22:41,484Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:41,491Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202961481) {}
[INFO ] 2019-08-19T08:22:41,497Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:41,500Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202961481) {}
[INFO ] 2019-08-19T08:22:41,504Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:41,539Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:41,547Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202961481) {}
[INFO ] 2019-08-19T08:22:41,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202960641) {}
[INFO ] 2019-08-19T08:22:41,550Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:41,558Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202961481) {}
[INFO ] 2019-08-19T08:22:41,560Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:41,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202961481) {}
[INFO ] 2019-08-19T08:22:41,568Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:41,568Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202961481) {}
[INFO ] 2019-08-19T08:22:41,568Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:41,572Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082239.828/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:22:41,572Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:41,572Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:41,595Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:41,595Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082239.828/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:41,617Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:41,623Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:41,651Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:41,651Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:41,655Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:39.828Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:42,029Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:42,031Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082239.828/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:42,031Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:42,032Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:42,034Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:42,034Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:42,119Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:42,128Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:42,130Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:42,130Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:42,150Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:42,150Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:42,254Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:42,258Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:42,258Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202962258) {}
[INFO ] 2019-08-19T08:22:42,260Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:42,265Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202962258) {}
[INFO ] 2019-08-19T08:22:42,271Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:42,273Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202962258) {}
[INFO ] 2019-08-19T08:22:42,278Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:42,312Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:42,318Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202962258) {}
[INFO ] 2019-08-19T08:22:42,321Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202960641) {}
[INFO ] 2019-08-19T08:22:42,322Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:42,330Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202962258) {}
[INFO ] 2019-08-19T08:22:42,331Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:42,338Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202961481) {}
[INFO ] 2019-08-19T08:22:42,339Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:42,345Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202962258) {}
[INFO ] 2019-08-19T08:22:42,346Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:42,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202962258) {}
[INFO ] 2019-08-19T08:22:42,352Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:42,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202962258) {}
[INFO ] 2019-08-19T08:22:42,352Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:22:43,073Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e672041f-e4b9-4668-bc6d-0a01d9a5590a, invocation_id=bc892c0b-b63c-4525-abc1-da619381899d, invocation_timestamp=2019-08-19T08:22:42.353Z, origin=Only For Testing, session_id=bc892c0b-b63c-4525-abc1-da619381899d, session_timestamp=2019-08-19T08:22:42.353Z, thread-id=869}
[INFO ] 2019-08-19T08:22:43,114Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[WARN ] 2019-08-19T08:22:43,114Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,121Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[WARN ] 2019-08-19T08:22:43,155Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,168Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e672041f-e4b9-4668-bc6d-0a01d9a5590a, invocation_id=bc892c0b-b63c-4525-abc1-da619381899d, invocation_timestamp=2019-08-19T08:22:42.353Z, origin=Only For Testing, session_id=bc892c0b-b63c-4525-abc1-da619381899d, session_timestamp=2019-08-19T08:22:42.353Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,168Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e672041f-e4b9-4668-bc6d-0a01d9a5590a, invocation_id=bc892c0b-b63c-4525-abc1-da619381899d, invocation_timestamp=2019-08-19T08:22:42.353Z, origin=Only For Testing, session_id=bc892c0b-b63c-4525-abc1-da619381899d, session_timestamp=2019-08-19T08:22:42.353Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,177Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e672041f-e4b9-4668-bc6d-0a01d9a5590a, invocation_id=bc892c0b-b63c-4525-abc1-da619381899d, invocation_timestamp=2019-08-19T08:22:42.353Z, origin=Only For Testing, session_id=bc892c0b-b63c-4525-abc1-da619381899d, session_timestamp=2019-08-19T08:22:42.353Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,191Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[WARN ] 2019-08-19T08:22:43,191Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,197Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,202Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,206Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=4a0d2c1c-c707-4368-a8bc-566ab0c553a5, invocation_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, invocation_timestamp=2019-08-19T08:22:43.098Z, origin=O=Mock Company 1, L=London, C=GB, session_id=15f4b6c9-982f-4539-b2bb-0b39f6e3d7b5, session_timestamp=2019-08-19T08:22:43.098Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,213Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e672041f-e4b9-4668-bc6d-0a01d9a5590a, invocation_id=bc892c0b-b63c-4525-abc1-da619381899d, invocation_timestamp=2019-08-19T08:22:42.353Z, origin=Only For Testing, session_id=bc892c0b-b63c-4525-abc1-da619381899d, session_timestamp=2019-08-19T08:22:42.353Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,213Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e672041f-e4b9-4668-bc6d-0a01d9a5590a, invocation_id=bc892c0b-b63c-4525-abc1-da619381899d, invocation_timestamp=2019-08-19T08:22:42.353Z, origin=Only For Testing, session_id=bc892c0b-b63c-4525-abc1-da619381899d, session_timestamp=2019-08-19T08:22:42.353Z, thread-id=869, tx_id=A8ED5C012491D22AF2598E274EBFDCE05D71CBA452367BA2143C636EFB7147D3}
[INFO ] 2019-08-19T08:22:43,276Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082243.232/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:22:43,276Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:43,276Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:43,298Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:43,298Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:43,319Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:43,324Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:43,327Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:43,327Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:43,332Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:43.232Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:43,674Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:43,676Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082243.232/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:43,676Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:43,676Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:43,678Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:43,678Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:43,742Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:43,748Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:43,765Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:43,772Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:43,772Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:43,871Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:43,875Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:43,875Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202963875) {}
[INFO ] 2019-08-19T08:22:43,876Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:43,886Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202963875) {}
[INFO ] 2019-08-19T08:22:43,892Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:43,895Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202963875) {}
[INFO ] 2019-08-19T08:22:43,900Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:43,935Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:43,936Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:22:43,936Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:22:43,941Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202963875) {}
[INFO ] 2019-08-19T08:22:43,943Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202963875) {}
[INFO ] 2019-08-19T08:22:43,943Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:43,943Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202963875) {}
[INFO ] 2019-08-19T08:22:43,943Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:43,947Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082243.232/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:22:43,947Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:43,947Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:43,968Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:43,969Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:43,990Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:43,996Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:44,018Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:44,018Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:44,020Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:43.232Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:44,326Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:44,327Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082243.232/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:44,327Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:44,328Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:44,329Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:44,329Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:44,393Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:44,399Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:44,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:44,401Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:44,416Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:44,416Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:44,505Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:44,509Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:44,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202964509) {}
[INFO ] 2019-08-19T08:22:44,511Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:44,515Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202964509) {}
[INFO ] 2019-08-19T08:22:44,519Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:44,522Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202964509) {}
[INFO ] 2019-08-19T08:22:44,526Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:44,560Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:44,564Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202964509) {}
[INFO ] 2019-08-19T08:22:44,566Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202963875) {}
[INFO ] 2019-08-19T08:22:44,567Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:44,574Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202964509) {}
[INFO ] 2019-08-19T08:22:44,575Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:44,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202964509) {}
[INFO ] 2019-08-19T08:22:44,581Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:44,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202964509) {}
[INFO ] 2019-08-19T08:22:44,581Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:44,585Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082243.232/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:22:44,585Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:44,585Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:44,608Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:44,608Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082243.232/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:44,629Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:44,635Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:44,652Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:44,652Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:44,655Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:43.232Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:44,956Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:44,958Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082243.232/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:44,958Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:44,959Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:44,960Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:44,960Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:45,032Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:45,041Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:45,043Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:45,044Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:45,064Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:45,064Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:45,156Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:45,159Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:45,160Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202965159) {}
[INFO ] 2019-08-19T08:22:45,161Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:45,166Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202965159) {}
[INFO ] 2019-08-19T08:22:45,170Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:45,173Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202965159) {}
[INFO ] 2019-08-19T08:22:45,176Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:45,206Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:45,211Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202965159) {}
[INFO ] 2019-08-19T08:22:45,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202963875) {}
[INFO ] 2019-08-19T08:22:45,213Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:45,222Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202965159) {}
[INFO ] 2019-08-19T08:22:45,222Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:45,230Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202964509) {}
[INFO ] 2019-08-19T08:22:45,231Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:45,238Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202965159) {}
[INFO ] 2019-08-19T08:22:45,238Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:45,245Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202965159) {}
[INFO ] 2019-08-19T08:22:45,245Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:45,245Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202965159) {}
[INFO ] 2019-08-19T08:22:45,245Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:22:45,912Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=86c251ee-3f23-4cc3-bd5f-a4d3ec612956, invocation_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, invocation_timestamp=2019-08-19T08:22:45.245Z, origin=Only For Testing, session_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, session_timestamp=2019-08-19T08:22:45.245Z, thread-id=1043}
[INFO ] 2019-08-19T08:22:45,945Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[WARN ] 2019-08-19T08:22:45,945Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:45,952Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[WARN ] 2019-08-19T08:22:45,988Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:45,998Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=86c251ee-3f23-4cc3-bd5f-a4d3ec612956, invocation_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, invocation_timestamp=2019-08-19T08:22:45.245Z, origin=Only For Testing, session_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, session_timestamp=2019-08-19T08:22:45.245Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:45,998Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=86c251ee-3f23-4cc3-bd5f-a4d3ec612956, invocation_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, invocation_timestamp=2019-08-19T08:22:45.245Z, origin=Only For Testing, session_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, session_timestamp=2019-08-19T08:22:45.245Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:46,007Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=86c251ee-3f23-4cc3-bd5f-a4d3ec612956, invocation_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, invocation_timestamp=2019-08-19T08:22:45.245Z, origin=Only For Testing, session_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, session_timestamp=2019-08-19T08:22:45.245Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:46,017Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[WARN ] 2019-08-19T08:22:46,017Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:46,023Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:46,027Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:46,030Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=7fdb2f68-bfd2-4734-aec4-65b6d5c982d7, invocation_id=35809e9c-8c6c-4a07-a649-fc794da821df, invocation_timestamp=2019-08-19T08:22:45.934Z, origin=O=Mock Company 1, L=London, C=GB, session_id=35809e9c-8c6c-4a07-a649-fc794da821df, session_timestamp=2019-08-19T08:22:45.934Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:46,037Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=86c251ee-3f23-4cc3-bd5f-a4d3ec612956, invocation_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, invocation_timestamp=2019-08-19T08:22:45.245Z, origin=Only For Testing, session_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, session_timestamp=2019-08-19T08:22:45.245Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:46,037Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=86c251ee-3f23-4cc3-bd5f-a4d3ec612956, invocation_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, invocation_timestamp=2019-08-19T08:22:45.245Z, origin=Only For Testing, session_id=f8528a9b-d72c-4a5b-9fb0-362655516a15, session_timestamp=2019-08-19T08:22:45.245Z, thread-id=1043, tx_id=89DCCE6F39968EA77B18FB3E33E1F6E32578F78C7A2EEFF149B44D861DEDC811}
[INFO ] 2019-08-19T08:22:46,087Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082246.047/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:22:46,087Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:46,088Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:46,111Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:46,111Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:46,132Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:46,137Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:46,139Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:46,139Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:46,143Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:46.047Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:46,431Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:46,432Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082246.047/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:46,432Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:46,433Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:46,434Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:46,434Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:46,488Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:46,494Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:46,509Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:46,517Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:46,517Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:46,600Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:46,604Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:46,604Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202966604) {}
[INFO ] 2019-08-19T08:22:46,606Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:46,615Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202966604) {}
[INFO ] 2019-08-19T08:22:46,620Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:46,624Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202966604) {}
[INFO ] 2019-08-19T08:22:46,626Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:46,656Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:46,657Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:22:46,657Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:22:46,661Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202966604) {}
[INFO ] 2019-08-19T08:22:46,663Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202966604) {}
[INFO ] 2019-08-19T08:22:46,663Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:46,663Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202966604) {}
[INFO ] 2019-08-19T08:22:46,663Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:46,667Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082246.047/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:22:46,667Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:46,667Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:46,689Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:46,689Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:46,710Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:46,715Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:46,730Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:46,731Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:46,733Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:46.047Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:47,013Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:47,015Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082246.047/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:47,015Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:47,015Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:47,017Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:47,017Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:47,082Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:47,088Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:47,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:47,089Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:47,101Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:47,101Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:47,186Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:47,189Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:47,189Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202967189) {}
[INFO ] 2019-08-19T08:22:47,191Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:47,195Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202967189) {}
[INFO ] 2019-08-19T08:22:47,199Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:47,201Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202967189) {}
[INFO ] 2019-08-19T08:22:47,204Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:47,237Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:47,242Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202967189) {}
[INFO ] 2019-08-19T08:22:47,244Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202966604) {}
[INFO ] 2019-08-19T08:22:47,245Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:47,251Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202967189) {}
[INFO ] 2019-08-19T08:22:47,252Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:47,257Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202967189) {}
[INFO ] 2019-08-19T08:22:47,258Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:47,258Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202967189) {}
[INFO ] 2019-08-19T08:22:47,258Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:47,261Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082246.047/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:22:47,261Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:47,261Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:47,283Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:47,283Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082246.047/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:47,304Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:47,309Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:47,328Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:47,328Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:47,330Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:46.047Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:47,681Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:47,683Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082246.047/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:47,683Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:47,686Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:47,688Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:47,688Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:47,776Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:47,785Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:47,787Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:47,787Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:47,801Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:47,801Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:47,887Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:47,891Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:47,891Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202967891) {}
[INFO ] 2019-08-19T08:22:47,893Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:47,898Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202967891) {}
[INFO ] 2019-08-19T08:22:47,903Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:47,905Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202967891) {}
[INFO ] 2019-08-19T08:22:47,908Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:47,938Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:47,943Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202967891) {}
[INFO ] 2019-08-19T08:22:47,945Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202966604) {}
[INFO ] 2019-08-19T08:22:47,946Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:47,952Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202967891) {}
[INFO ] 2019-08-19T08:22:47,952Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:47,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202967189) {}
[INFO ] 2019-08-19T08:22:47,958Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:47,963Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202967891) {}
[INFO ] 2019-08-19T08:22:47,964Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:47,969Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202967891) {}
[INFO ] 2019-08-19T08:22:47,969Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:47,969Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202967891) {}
[INFO ] 2019-08-19T08:22:47,969Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:22:48,571Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8a86eaea-69be-44a1-ba43-49b4ee63ea25, invocation_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, invocation_timestamp=2019-08-19T08:22:47.970Z, origin=Only For Testing, session_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, session_timestamp=2019-08-19T08:22:47.970Z, thread-id=1216}
[INFO ] 2019-08-19T08:22:48,597Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[WARN ] 2019-08-19T08:22:48,597Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,604Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[WARN ] 2019-08-19T08:22:48,638Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,653Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8a86eaea-69be-44a1-ba43-49b4ee63ea25, invocation_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, invocation_timestamp=2019-08-19T08:22:47.970Z, origin=Only For Testing, session_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, session_timestamp=2019-08-19T08:22:47.970Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,653Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8a86eaea-69be-44a1-ba43-49b4ee63ea25, invocation_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, invocation_timestamp=2019-08-19T08:22:47.970Z, origin=Only For Testing, session_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, session_timestamp=2019-08-19T08:22:47.970Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,665Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8a86eaea-69be-44a1-ba43-49b4ee63ea25, invocation_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, invocation_timestamp=2019-08-19T08:22:47.970Z, origin=Only For Testing, session_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, session_timestamp=2019-08-19T08:22:47.970Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,676Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[WARN ] 2019-08-19T08:22:48,676Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,682Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,688Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,691Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=cac96b0a-b552-4ca5-b67d-c57d6d5f1ad4, invocation_id=6225346d-6ce9-4a97-9379-f91f050f24c9, invocation_timestamp=2019-08-19T08:22:48.587Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6225346d-6ce9-4a97-9379-f91f050f24c9, session_timestamp=2019-08-19T08:22:48.587Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,697Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8a86eaea-69be-44a1-ba43-49b4ee63ea25, invocation_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, invocation_timestamp=2019-08-19T08:22:47.970Z, origin=Only For Testing, session_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, session_timestamp=2019-08-19T08:22:47.970Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,697Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=8a86eaea-69be-44a1-ba43-49b4ee63ea25, invocation_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, invocation_timestamp=2019-08-19T08:22:47.970Z, origin=Only For Testing, session_id=e56cb55d-0ede-4efe-b194-4d4cdc2b694c, session_timestamp=2019-08-19T08:22:47.970Z, thread-id=1216, tx_id=ACF9F8DCF5D536D4513DFA04EE0A17A9EF70278353ED369470A97772071DFDED}
[INFO ] 2019-08-19T08:22:48,752Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082248.708/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:22:48,752Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:48,752Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:48,774Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:48,774Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:48,794Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:48,799Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:48,801Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:48,801Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:48,806Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:48.708Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:49,102Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:49,103Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082248.708/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:49,103Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:49,104Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:49,105Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,105Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,161Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,166Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:49,183Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:49,189Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,190Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,280Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,284Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:49,284Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202969284) {}
[INFO ] 2019-08-19T08:22:49,285Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:49,293Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202969284) {}
[INFO ] 2019-08-19T08:22:49,299Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:49,301Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202969284) {}
[INFO ] 2019-08-19T08:22:49,304Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:49,335Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:49,337Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:22:49,337Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:22:49,341Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202969284) {}
[INFO ] 2019-08-19T08:22:49,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202969284) {}
[INFO ] 2019-08-19T08:22:49,344Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:49,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202969284) {}
[INFO ] 2019-08-19T08:22:49,344Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:49,347Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082248.708/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:22:49,347Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:49,347Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:49,368Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:49,368Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:49,389Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:49,394Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:49,414Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:49,414Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:49,418Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:48.708Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:49,703Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:49,705Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082248.708/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:49,705Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:49,705Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:49,707Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,707Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,778Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:49,787Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:49,788Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:49,789Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:49,800Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:49,800Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:49,893Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:49,896Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:49,896Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202969896) {}
[INFO ] 2019-08-19T08:22:49,898Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:49,920Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202969896) {}
[INFO ] 2019-08-19T08:22:49,923Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:49,926Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202969896) {}
[INFO ] 2019-08-19T08:22:49,929Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:49,963Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:49,969Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202969896) {}
[INFO ] 2019-08-19T08:22:49,971Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202969284) {}
[INFO ] 2019-08-19T08:22:49,972Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:49,981Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202969896) {}
[INFO ] 2019-08-19T08:22:49,982Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:49,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202969896) {}
[INFO ] 2019-08-19T08:22:49,988Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:49,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202969896) {}
[INFO ] 2019-08-19T08:22:49,988Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:49,992Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082248.708/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:22:49,992Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:49,992Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:50,014Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:50,014Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082248.708/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:50,037Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:50,042Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:50,058Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:50,058Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:50,060Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:48.708Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:50,323Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:50,325Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082248.708/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:50,325Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:50,326Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:50,327Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:50,327Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:50,387Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:50,392Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:50,393Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:50,394Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:50,405Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:50,405Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:50,497Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:50,501Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:50,501Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202970501) {}
[INFO ] 2019-08-19T08:22:50,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:50,507Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202970501) {}
[INFO ] 2019-08-19T08:22:50,512Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:50,514Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202970501) {}
[INFO ] 2019-08-19T08:22:50,518Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:50,552Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:50,559Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202970501) {}
[INFO ] 2019-08-19T08:22:50,562Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202969284) {}
[INFO ] 2019-08-19T08:22:50,563Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:50,571Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202970501) {}
[INFO ] 2019-08-19T08:22:50,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:50,580Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202969896) {}
[INFO ] 2019-08-19T08:22:50,581Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:50,587Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202970501) {}
[INFO ] 2019-08-19T08:22:50,587Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:50,596Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202970501) {}
[INFO ] 2019-08-19T08:22:50,596Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:50,596Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202970501) {}
[INFO ] 2019-08-19T08:22:50,596Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:22:51,253Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e93e82c3-bddd-4704-81a1-fe0247a69c6d, invocation_id=504fa284-f6f8-4dfa-b851-8956945e1965, invocation_timestamp=2019-08-19T08:22:50.600Z, origin=Only For Testing, session_id=504fa284-f6f8-4dfa-b851-8956945e1965, session_timestamp=2019-08-19T08:22:50.600Z, thread-id=1389}
[INFO ] 2019-08-19T08:22:51,284Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[WARN ] 2019-08-19T08:22:51,285Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,294Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[WARN ] 2019-08-19T08:22:51,330Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,343Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e93e82c3-bddd-4704-81a1-fe0247a69c6d, invocation_id=504fa284-f6f8-4dfa-b851-8956945e1965, invocation_timestamp=2019-08-19T08:22:50.600Z, origin=Only For Testing, session_id=504fa284-f6f8-4dfa-b851-8956945e1965, session_timestamp=2019-08-19T08:22:50.600Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,343Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e93e82c3-bddd-4704-81a1-fe0247a69c6d, invocation_id=504fa284-f6f8-4dfa-b851-8956945e1965, invocation_timestamp=2019-08-19T08:22:50.600Z, origin=Only For Testing, session_id=504fa284-f6f8-4dfa-b851-8956945e1965, session_timestamp=2019-08-19T08:22:50.600Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,353Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e93e82c3-bddd-4704-81a1-fe0247a69c6d, invocation_id=504fa284-f6f8-4dfa-b851-8956945e1965, invocation_timestamp=2019-08-19T08:22:50.600Z, origin=Only For Testing, session_id=504fa284-f6f8-4dfa-b851-8956945e1965, session_timestamp=2019-08-19T08:22:50.600Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,362Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[WARN ] 2019-08-19T08:22:51,362Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,365Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,369Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,371Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=8040a080-68bf-4d22-b83d-5fcdcdd007f9, invocation_id=08f93945-4210-42a9-a5fb-bdae9288bc09, invocation_timestamp=2019-08-19T08:22:51.271Z, origin=O=Mock Company 1, L=London, C=GB, session_id=08f93945-4210-42a9-a5fb-bdae9288bc09, session_timestamp=2019-08-19T08:22:51.271Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,376Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e93e82c3-bddd-4704-81a1-fe0247a69c6d, invocation_id=504fa284-f6f8-4dfa-b851-8956945e1965, invocation_timestamp=2019-08-19T08:22:50.600Z, origin=Only For Testing, session_id=504fa284-f6f8-4dfa-b851-8956945e1965, session_timestamp=2019-08-19T08:22:50.600Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,376Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e93e82c3-bddd-4704-81a1-fe0247a69c6d, invocation_id=504fa284-f6f8-4dfa-b851-8956945e1965, invocation_timestamp=2019-08-19T08:22:50.600Z, origin=Only For Testing, session_id=504fa284-f6f8-4dfa-b851-8956945e1965, session_timestamp=2019-08-19T08:22:50.600Z, thread-id=1389, tx_id=C2E30574C99283D2B04D020BBE5519FB75280B15C7529B705611781FE5DDFC1C}
[INFO ] 2019-08-19T08:22:51,429Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082251.387/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:22:51,429Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/0/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/0/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:51,429Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/0/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:51,450Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:51,450Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/0/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:51,469Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:51,475Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:51,477Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:51,477Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:51,482Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:51.386Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:51,735Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:51,737Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082251.387/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:51,737Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:51,738Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:51,739Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:51,739Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:51,803Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:51,810Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:51,830Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:51,838Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:51,838Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:51,919Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:22:51,923Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:51,923Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202971923) {}
[INFO ] 2019-08-19T08:22:51,924Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:51,936Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202971923) {}
[INFO ] 2019-08-19T08:22:51,943Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:51,947Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202971923) {}
[INFO ] 2019-08-19T08:22:51,951Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:51,986Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:51,988Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:22:51,988Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:22:51,993Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202971923) {}
[INFO ] 2019-08-19T08:22:51,996Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202971923) {}
[INFO ] 2019-08-19T08:22:51,996Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:51,996Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202971923) {}
[INFO ] 2019-08-19T08:22:51,996Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:52,000Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082251.387/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:22:52,000Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/1/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/1/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:52,000Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/1/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:52,024Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:52,024Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/1/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:52,038Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:52,043Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:52,059Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:52,059Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:52,061Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:51.386Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:52,379Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:52,381Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082251.387/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:52,381Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:52,382Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:52,383Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:52,383Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:52,441Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:52,447Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:52,448Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:52,449Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:52,461Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:52,461Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:52,539Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:52,543Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:52,543Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202972543) {}
[INFO ] 2019-08-19T08:22:52,545Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:52,548Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202972543) {}
[INFO ] 2019-08-19T08:22:52,553Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:52,555Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202972543) {}
[INFO ] 2019-08-19T08:22:52,558Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:52,586Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:52,589Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202972543) {}
[INFO ] 2019-08-19T08:22:52,590Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202971923) {}
[INFO ] 2019-08-19T08:22:52,591Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:52,596Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202972543) {}
[INFO ] 2019-08-19T08:22:52,596Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:52,602Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202972543) {}
[INFO ] 2019-08-19T08:22:52,602Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:52,602Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202972543) {}
[INFO ] 2019-08-19T08:22:52,602Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:52,605Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082251.387/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:22:52,605Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/2/cordapps/bootcamp-contracts-java.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/2/cordapps/bootcamp.workflows-java.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:22:52,605Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/2/cordapps/bootcamp-contracts-java.jar {}
[INFO ] 2019-08-19T08:22:52,626Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:52,626Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-java/build/mock-network/20190819-082251.387/nodes/2/cordapps/bootcamp.workflows-java.jar {}
[INFO ] 2019-08-19T08:22:52,646Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:22:52,650Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:22:52,664Z [Test worker] internal.NodeFlowManager. - Registered examples.ArtTransferFlowInitiator to initiate examples.ArtTransferFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:52,664Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:22:52,666Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:22:51.386Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:22:52,945Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:22:52,947Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082251.387/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:22:52,947Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:22:52,947Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:22:52,949Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:52,949Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:53,041Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:22:53,057Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:22:53,059Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:22:53,059Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:22:53,087Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:53,087Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:53,208Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:22:53,216Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:22:53,216Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202973216) {}
[INFO ] 2019-08-19T08:22:53,219Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:53,235Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202973216) {}
[INFO ] 2019-08-19T08:22:53,241Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:22:53,245Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202973216) {}
[INFO ] 2019-08-19T08:22:53,248Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:53,285Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=ACEBD1B360355E0B2913C9F498D6F6BD797A21E8175C34CC08D7BF87E8DA4F33 uploader=app filename=null {}
[INFO ] 2019-08-19T08:22:53,289Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202973216) {}
[INFO ] 2019-08-19T08:22:53,292Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202971923) {}
[INFO ] 2019-08-19T08:22:53,293Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:53,299Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202973216) {}
[INFO ] 2019-08-19T08:22:53,300Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:53,305Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202972543) {}
[INFO ] 2019-08-19T08:22:53,306Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:53,311Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202973216) {}
[INFO ] 2019-08-19T08:22:53,312Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:22:53,317Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202973216) {}
[INFO ] 2019-08-19T08:22:53,317Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:22:53,317Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202973216) {}
[INFO ] 2019-08-19T08:22:53,317Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:22:53,879Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=82c5f82c-f8b0-4d90-ac7e-bc13d6f0113a, invocation_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, invocation_timestamp=2019-08-19T08:22:53.318Z, origin=Only For Testing, session_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, session_timestamp=2019-08-19T08:22:53.318Z, thread-id=1562}
[INFO ] 2019-08-19T08:22:53,901Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[WARN ] 2019-08-19T08:22:53,901Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,906Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[WARN ] 2019-08-19T08:22:53,933Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,945Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=82c5f82c-f8b0-4d90-ac7e-bc13d6f0113a, invocation_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, invocation_timestamp=2019-08-19T08:22:53.318Z, origin=Only For Testing, session_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, session_timestamp=2019-08-19T08:22:53.318Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,945Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=82c5f82c-f8b0-4d90-ac7e-bc13d6f0113a, invocation_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, invocation_timestamp=2019-08-19T08:22:53.318Z, origin=Only For Testing, session_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, session_timestamp=2019-08-19T08:22:53.318Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,952Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=82c5f82c-f8b0-4d90-ac7e-bc13d6f0113a, invocation_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, invocation_timestamp=2019-08-19T08:22:53.318Z, origin=Only For Testing, session_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, session_timestamp=2019-08-19T08:22:53.318Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,959Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[WARN ] 2019-08-19T08:22:53,959Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,963Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,966Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,968Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=ece4f548-e86a-4c78-90b8-6f5752b79368, invocation_id=c2980c53-0167-4b0e-8796-a9ea83774963, invocation_timestamp=2019-08-19T08:22:53.893Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c2980c53-0167-4b0e-8796-a9ea83774963, session_timestamp=2019-08-19T08:22:53.893Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,973Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=82c5f82c-f8b0-4d90-ac7e-bc13d6f0113a, invocation_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, invocation_timestamp=2019-08-19T08:22:53.318Z, origin=Only For Testing, session_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, session_timestamp=2019-08-19T08:22:53.318Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
[INFO ] 2019-08-19T08:22:53,973Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=82c5f82c-f8b0-4d90-ac7e-bc13d6f0113a, invocation_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, invocation_timestamp=2019-08-19T08:22:53.318Z, origin=Only For Testing, session_id=65d00103-1d5a-409e-8b0e-e9a7d07e4798, session_timestamp=2019-08-19T08:22:53.318Z, thread-id=1562, tx_id=361D8040CEA503E6004F16582A87E5D41900F35EC8D66BA340AA1B8D1624DD07}
