[INFO ] 2019-08-17T17:44:16,458Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-17T17:44:23,193Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-17T17:44:26,583Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174414.076/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:44:26,586Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174414.076/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174414.076/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:44:26,599Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174414.076/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:44:26,643Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:26,644Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174414.076/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:44:26,670Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T17:44:26,672Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-17T17:44:26,907Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:44:26,946Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:44:27,069Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:44:14.054Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:44:30,038Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:44:30,042Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174414.076/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:44:30,042Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:44:30,043Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:44:30,078Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:30,080Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:31,150Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:31,441Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:44:31,498Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:44:31,514Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:31,515Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:31,807Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:31,816Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:44:31,816Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063871816) {}
[INFO ] 2019-08-17T17:44:31,819Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:44:31,937Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063871816) {}
[INFO ] 2019-08-17T17:44:31,990Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:44:32,008Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063871816) {}
[INFO ] 2019-08-17T17:44:32,030Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:44:32,064Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:44:32,068Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:44:32,070Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:44:32,352Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174432.243/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:44:32,353Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174432.243/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174432.243/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:44:32,353Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174432.243/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:44:32,376Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:32,377Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174432.243/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:44:32,400Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:32,407Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:44:32,410Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:44:32,415Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:44:32.243Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:44:32,942Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:44:32,944Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174432.243/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:44:32,944Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:44:32,945Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:44:32,946Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:32,946Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,032Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,044Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:44:33,065Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:44:33,072Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,072Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,196Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,201Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:44:33,201Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063873201) {}
[INFO ] 2019-08-17T17:44:33,203Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:44:33,220Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063873201) {}
[INFO ] 2019-08-17T17:44:33,232Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:44:33,236Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063873201) {}
[INFO ] 2019-08-17T17:44:33,242Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:44:33,271Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:44:33,274Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:44:33,274Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:44:33,360Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174433.282/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:44:33,361Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174433.282/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174433.282/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:44:33,361Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174433.282/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:44:33,382Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:33,383Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174433.282/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:44:33,408Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:33,413Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:44:33,416Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:44:33,421Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:44:33.281Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:44:33,843Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:44:33,845Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174433.282/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:44:33,845Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:44:33,846Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:44:33,848Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,848Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,924Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,932Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:44:33,954Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:44:33,961Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:33,961Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:34,085Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:34,089Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:44:34,089Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063874089) {}
[INFO ] 2019-08-17T17:44:34,092Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:44:34,106Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063874089) {}
[INFO ] 2019-08-17T17:44:34,117Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:44:34,120Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063874089) {}
[INFO ] 2019-08-17T17:44:34,124Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:44:34,157Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:44:34,159Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:44:34,159Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:44:34,233Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174434.167/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:44:34,234Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174434.167/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174434.167/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:44:34,234Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174434.167/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:44:34,257Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:34,258Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174434.167/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:44:34,280Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:34,287Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:44:34,291Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:44:34,299Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:44:34.167Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:44:34,695Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:44:34,697Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174434.167/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:44:34,697Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:44:34,697Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:44:34,700Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:34,700Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:34,774Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:34,781Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:44:34,802Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:44:34,810Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:34,810Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:34,921Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:34,926Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:44:34,926Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063874926) {}
[INFO ] 2019-08-17T17:44:34,928Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:44:34,946Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063874926) {}
[INFO ] 2019-08-17T17:44:34,957Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:44:34,961Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063874926) {}
[INFO ] 2019-08-17T17:44:34,967Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:44:35,004Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:44:35,006Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:44:35,006Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:44:35,090Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174435.013/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:44:35,090Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174435.013/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174435.013/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:44:35,091Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174435.013/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:44:35,111Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:35,112Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174435.013/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:44:35,133Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:35,142Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:44:35,147Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:44:35,155Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:44:35.013Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:44:35,502Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:44:35,505Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174435.013/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:44:35,505Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:44:35,506Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:44:35,509Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:35,509Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:35,581Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:35,588Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:44:35,625Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:44:35,631Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:35,631Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:35,741Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:35,746Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:44:35,746Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063875746) {}
[INFO ] 2019-08-17T17:44:35,747Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:44:35,765Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063875746) {}
[INFO ] 2019-08-17T17:44:35,777Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:44:35,780Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063875746) {}
[INFO ] 2019-08-17T17:44:35,785Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:44:35,820Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:44:35,822Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:44:35,822Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:44:35,894Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174435.829/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:44:35,895Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174435.829/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174435.829/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:44:35,895Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174435.829/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:44:35,916Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:35,917Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174435.829/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:44:35,938Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:44:35,945Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:44:35,949Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:44:35,954Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:44:35.829Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:44:36,260Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:44:36,262Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174435.829/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:44:36,262Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:44:36,263Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:44:36,265Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:36,265Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:36,338Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:44:36,346Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:44:36,365Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:44:36,371Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:36,371Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:36,481Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:44:36,488Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:44:36,488Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063876488) {}
[INFO ] 2019-08-17T17:44:36,490Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:44:36,503Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063876488) {}
[INFO ] 2019-08-17T17:44:36,512Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:44:36,514Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063876488) {}
[INFO ] 2019-08-17T17:44:36,520Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:44:36,552Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:44:36,553Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:44:36,553Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:45:24,815Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-17T17:45:26,308Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-17T17:45:27,773Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174518.961/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:45:27,778Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:27,804Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:27,863Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:27,864Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:27,895Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T17:45:27,899Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-17T17:45:28,706Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:28,772Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:28,923Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:18.729Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:33,604Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:33,608Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174518.961/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:33,608Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:33,610Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:33,686Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:33,692Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:35,891Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:36,585Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:36,667Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:36,687Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:36,687Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:37,034Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:37,046Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:37,047Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063937046) {}
[INFO ] 2019-08-17T17:45:37,053Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:37,218Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063937046) {}
[INFO ] 2019-08-17T17:45:37,290Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:37,314Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063937046) {}
[INFO ] 2019-08-17T17:45:37,346Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:37,386Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:37,390Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:45:37,393Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:45:37,818Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063937046) {}
[INFO ] 2019-08-17T17:45:37,840Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063937046) {}
[INFO ] 2019-08-17T17:45:37,841Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:37,841Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063937046) {}
[INFO ] 2019-08-17T17:45:37,841Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:37,849Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174518.961/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:45:37,850Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:37,850Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:37,871Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:37,872Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:37,893Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:37,902Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:37,948Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:37,954Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:18.729Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:38,470Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:38,474Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174518.961/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:38,474Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:38,475Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:38,479Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:38,479Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:38,606Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:38,621Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:38,624Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:38,625Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:38,655Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:38,656Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:38,823Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:38,829Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:38,829Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063938829) {}
[INFO ] 2019-08-17T17:45:38,831Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:38,842Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063938829) {}
[INFO ] 2019-08-17T17:45:38,855Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:38,861Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063938829) {}
[INFO ] 2019-08-17T17:45:38,868Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:38,906Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:38,920Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063938829) {}
[INFO ] 2019-08-17T17:45:38,923Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063937046) {}
[INFO ] 2019-08-17T17:45:38,925Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:38,937Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063938829) {}
[INFO ] 2019-08-17T17:45:38,938Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:38,948Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063938829) {}
[INFO ] 2019-08-17T17:45:38,948Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:38,948Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063938829) {}
[INFO ] 2019-08-17T17:45:38,948Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:38,952Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174518.961/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:45:38,952Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:38,952Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:38,974Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:38,974Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174518.961/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:38,998Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:39,005Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:39,041Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:39,046Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:18.729Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:39,566Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:39,569Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174518.961/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:39,569Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:39,570Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:39,572Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:39,572Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:39,686Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:39,698Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:39,700Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:39,700Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:39,721Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:39,721Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:39,872Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:39,877Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:39,877Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063939877) {}
[INFO ] 2019-08-17T17:45:39,879Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:39,893Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063939877) {}
[INFO ] 2019-08-17T17:45:39,901Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:39,905Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063939877) {}
[INFO ] 2019-08-17T17:45:39,910Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:39,950Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:39,964Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063939877) {}
[INFO ] 2019-08-17T17:45:39,967Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063937046) {}
[INFO ] 2019-08-17T17:45:39,969Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:39,984Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063939877) {}
[INFO ] 2019-08-17T17:45:39,986Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:40,003Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063938829) {}
[INFO ] 2019-08-17T17:45:40,004Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:40,018Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063939877) {}
[INFO ] 2019-08-17T17:45:40,019Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:40,034Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063939877) {}
[INFO ] 2019-08-17T17:45:40,034Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:40,034Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063939877) {}
[INFO ] 2019-08-17T17:45:40,034Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:45:40,036Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:40,036Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:40,041Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:40,041Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:40,325Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d9de9be-07dd-4900-837c-0154566754c4, invocation_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, invocation_timestamp=2019-08-17T17:45:40.074Z, origin=Only For Testing, session_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, session_timestamp=2019-08-17T17:45:40.074Z, thread-id=201}
[WARN ] 2019-08-17T17:45:40,325Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d9de9be-07dd-4900-837c-0154566754c4, invocation_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, invocation_timestamp=2019-08-17T17:45:40.074Z, origin=Only For Testing, session_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, session_timestamp=2019-08-17T17:45:40.074Z, thread-id=201}
[WARN ] 2019-08-17T17:45:41,792Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d9de9be-07dd-4900-837c-0154566754c4, invocation_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, invocation_timestamp=2019-08-17T17:45:40.074Z, origin=Only For Testing, session_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, session_timestamp=2019-08-17T17:45:40.074Z, thread-id=201}
[INFO ] 2019-08-17T17:45:42,134Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[WARN ] 2019-08-17T17:45:42,146Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,181Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[WARN ] 2019-08-17T17:45:42,257Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,290Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d9de9be-07dd-4900-837c-0154566754c4, invocation_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, invocation_timestamp=2019-08-17T17:45:40.074Z, origin=Only For Testing, session_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, session_timestamp=2019-08-17T17:45:40.074Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,290Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d9de9be-07dd-4900-837c-0154566754c4, invocation_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, invocation_timestamp=2019-08-17T17:45:40.074Z, origin=Only For Testing, session_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, session_timestamp=2019-08-17T17:45:40.074Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,334Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d9de9be-07dd-4900-837c-0154566754c4, invocation_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, invocation_timestamp=2019-08-17T17:45:40.074Z, origin=Only For Testing, session_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, session_timestamp=2019-08-17T17:45:40.074Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,358Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[WARN ] 2019-08-17T17:45:42,358Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,367Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,374Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,381Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=ef3e1e75-d5a6-402c-bb1a-ae83440e83a8, invocation_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, invocation_timestamp=2019-08-17T17:45:42.003Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4de5e39b-d91b-4baa-bd84-3fb3813b4160, session_timestamp=2019-08-17T17:45:42.003Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,415Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d9de9be-07dd-4900-837c-0154566754c4, invocation_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, invocation_timestamp=2019-08-17T17:45:40.074Z, origin=Only For Testing, session_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, session_timestamp=2019-08-17T17:45:40.074Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,415Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4d9de9be-07dd-4900-837c-0154566754c4, invocation_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, invocation_timestamp=2019-08-17T17:45:40.074Z, origin=Only For Testing, session_id=3b7f375c-2a63-4f47-b8e1-f1cefa6402db, session_timestamp=2019-08-17T17:45:40.074Z, thread-id=201, tx_id=C65F91C5E34100A2D0E11C9AEDC473F33007EAE7C628179E430D009EBA5B6674}
[INFO ] 2019-08-17T17:45:42,553Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174542.450/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:45:42,553Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:42,553Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:42,579Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:42,579Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:42,601Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:42,607Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:42,612Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:42,617Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:42.450Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:42,983Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:42,985Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174542.450/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:42,985Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:42,986Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:42,988Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:42,988Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:43,066Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:43,074Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:43,097Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:43,104Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:43,104Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:43,218Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:43,222Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:43,222Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063943222) {}
[INFO ] 2019-08-17T17:45:43,224Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:43,239Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063943222) {}
[INFO ] 2019-08-17T17:45:43,249Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:43,252Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063943222) {}
[INFO ] 2019-08-17T17:45:43,257Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:43,286Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:43,287Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:45:43,287Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:45:43,294Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063943222) {}
[INFO ] 2019-08-17T17:45:43,296Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063943222) {}
[INFO ] 2019-08-17T17:45:43,296Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:43,296Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063943222) {}
[INFO ] 2019-08-17T17:45:43,296Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:43,300Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174542.450/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:45:43,301Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:43,301Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:43,323Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:43,323Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:43,345Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:43,351Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:43,377Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:43,380Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:42.450Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:43,717Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:43,719Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174542.450/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:43,719Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:43,720Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:43,722Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:43,722Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:43,796Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:43,804Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:43,806Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:43,806Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:43,825Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:43,825Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:43,926Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:43,929Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:43,929Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063943929) {}
[INFO ] 2019-08-17T17:45:43,931Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:43,939Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063943929) {}
[INFO ] 2019-08-17T17:45:43,950Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:43,953Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063943929) {}
[INFO ] 2019-08-17T17:45:43,958Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:43,990Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:43,996Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063943929) {}
[INFO ] 2019-08-17T17:45:43,998Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063943222) {}
[INFO ] 2019-08-17T17:45:43,999Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:44,006Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063943929) {}
[INFO ] 2019-08-17T17:45:44,007Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:44,013Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063943929) {}
[INFO ] 2019-08-17T17:45:44,013Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:44,013Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063943929) {}
[INFO ] 2019-08-17T17:45:44,013Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:44,017Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174542.450/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:45:44,017Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:44,017Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:44,039Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:44,039Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174542.450/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:44,061Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:44,066Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:44,088Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:44,090Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:42.450Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:44,373Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:44,375Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174542.450/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:44,375Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:44,375Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:44,378Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:44,378Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:44,446Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:44,452Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:44,453Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:44,454Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:44,472Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:44,472Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:44,576Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:44,581Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:44,581Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063944581) {}
[INFO ] 2019-08-17T17:45:44,582Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:44,588Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063944581) {}
[INFO ] 2019-08-17T17:45:44,594Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:44,596Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063944581) {}
[INFO ] 2019-08-17T17:45:44,602Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:44,632Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:44,638Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063944581) {}
[INFO ] 2019-08-17T17:45:44,640Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063943222) {}
[INFO ] 2019-08-17T17:45:44,641Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:44,648Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063944581) {}
[INFO ] 2019-08-17T17:45:44,650Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:44,657Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063943929) {}
[INFO ] 2019-08-17T17:45:44,658Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:44,665Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063944581) {}
[INFO ] 2019-08-17T17:45:44,666Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:44,674Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063944581) {}
[INFO ] 2019-08-17T17:45:44,675Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:44,675Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063944581) {}
[INFO ] 2019-08-17T17:45:44,675Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:45:44,675Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:44,675Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:44,675Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:44,675Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:45,623Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=304f0af4-107e-45fb-9645-aad4eccae642, invocation_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, invocation_timestamp=2019-08-17T17:45:44.676Z, origin=Only For Testing, session_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, session_timestamp=2019-08-17T17:45:44.676Z, thread-id=377}
[INFO ] 2019-08-17T17:45:45,660Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[WARN ] 2019-08-17T17:45:45,660Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,667Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[WARN ] 2019-08-17T17:45:45,701Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,716Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=304f0af4-107e-45fb-9645-aad4eccae642, invocation_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, invocation_timestamp=2019-08-17T17:45:44.676Z, origin=Only For Testing, session_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, session_timestamp=2019-08-17T17:45:44.676Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,716Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=304f0af4-107e-45fb-9645-aad4eccae642, invocation_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, invocation_timestamp=2019-08-17T17:45:44.676Z, origin=Only For Testing, session_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, session_timestamp=2019-08-17T17:45:44.676Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,729Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=304f0af4-107e-45fb-9645-aad4eccae642, invocation_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, invocation_timestamp=2019-08-17T17:45:44.676Z, origin=Only For Testing, session_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, session_timestamp=2019-08-17T17:45:44.676Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,738Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[WARN ] 2019-08-17T17:45:45,738Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,744Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,750Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,754Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=266c3862-5d54-4ad4-8c16-dd6c8c741a98, invocation_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, invocation_timestamp=2019-08-17T17:45:45.645Z, origin=O=Mock Company 1, L=London, C=GB, session_id=19a48a28-aba9-4b3c-8767-492cb6a1d5e9, session_timestamp=2019-08-17T17:45:45.645Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,763Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=304f0af4-107e-45fb-9645-aad4eccae642, invocation_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, invocation_timestamp=2019-08-17T17:45:44.676Z, origin=Only For Testing, session_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, session_timestamp=2019-08-17T17:45:44.676Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,763Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=304f0af4-107e-45fb-9645-aad4eccae642, invocation_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, invocation_timestamp=2019-08-17T17:45:44.676Z, origin=Only For Testing, session_id=4c878eb4-74e9-477e-b72e-74e2ae8e561d, session_timestamp=2019-08-17T17:45:44.676Z, thread-id=377, tx_id=96DEF97674800C2174ED9C3CEF306B83144260FE6A846DBEA01B27DC4374025B}
[INFO ] 2019-08-17T17:45:45,851Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174545.781/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:45:45,852Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:45,852Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:45,876Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:45,877Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:45,900Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:45,906Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:45,911Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:45,917Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:45.781Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:46,206Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:46,207Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174545.781/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:46,207Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:46,208Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:46,209Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,209Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,272Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,279Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:46,296Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:46,304Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,304Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,413Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,418Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:46,418Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063946418) {}
[INFO ] 2019-08-17T17:45:46,419Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:46,433Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063946418) {}
[INFO ] 2019-08-17T17:45:46,447Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:46,450Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063946418) {}
[INFO ] 2019-08-17T17:45:46,455Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:46,490Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:46,491Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:45:46,491Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:45:46,497Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063946418) {}
[INFO ] 2019-08-17T17:45:46,498Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063946418) {}
[INFO ] 2019-08-17T17:45:46,498Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:46,498Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063946418) {}
[INFO ] 2019-08-17T17:45:46,498Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:46,502Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174545.781/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:45:46,503Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:46,503Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:46,519Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:46,519Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:46,541Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:46,546Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:46,564Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:46,566Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:45.781Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:46,847Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:46,849Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174545.781/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:46,849Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:46,850Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:46,851Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,852Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,918Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:46,926Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:46,927Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:46,927Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:46,944Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:46,944Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:47,115Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:47,120Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:47,120Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063947120) {}
[INFO ] 2019-08-17T17:45:47,122Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:47,127Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063947120) {}
[INFO ] 2019-08-17T17:45:47,133Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:47,136Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063947120) {}
[INFO ] 2019-08-17T17:45:47,139Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:47,170Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:47,176Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063947120) {}
[INFO ] 2019-08-17T17:45:47,177Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063946418) {}
[INFO ] 2019-08-17T17:45:47,179Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:47,184Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063947120) {}
[INFO ] 2019-08-17T17:45:47,185Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:47,192Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063947120) {}
[INFO ] 2019-08-17T17:45:47,192Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:47,192Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063947120) {}
[INFO ] 2019-08-17T17:45:47,192Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:47,196Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174545.781/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:45:47,196Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:47,196Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:47,217Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:47,217Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174545.781/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:47,238Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:47,245Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:47,262Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:47,264Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:45.781Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:47,523Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:47,524Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174545.781/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:47,524Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:47,525Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:47,527Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:47,527Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:47,586Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:47,592Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:47,594Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:47,594Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:47,615Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:47,615Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:47,702Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:47,705Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:47,705Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063947705) {}
[INFO ] 2019-08-17T17:45:47,706Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:47,710Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063947705) {}
[INFO ] 2019-08-17T17:45:47,716Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:47,720Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063947705) {}
[INFO ] 2019-08-17T17:45:47,724Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:47,754Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:47,759Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063947705) {}
[INFO ] 2019-08-17T17:45:47,760Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063946418) {}
[INFO ] 2019-08-17T17:45:47,761Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:47,767Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063947705) {}
[INFO ] 2019-08-17T17:45:47,768Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:47,774Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063947120) {}
[INFO ] 2019-08-17T17:45:47,775Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:47,781Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063947705) {}
[INFO ] 2019-08-17T17:45:47,782Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:47,788Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063947705) {}
[INFO ] 2019-08-17T17:45:47,788Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:47,788Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063947705) {}
[INFO ] 2019-08-17T17:45:47,788Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:45:47,789Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:47,789Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:47,789Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:47,789Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:48,620Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=bb3275ac-1335-456b-9a3b-9dd344a6e3ea, invocation_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, invocation_timestamp=2019-08-17T17:45:47.789Z, origin=Only For Testing, session_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, session_timestamp=2019-08-17T17:45:47.789Z, thread-id=550}
[INFO ] 2019-08-17T17:45:48,655Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[WARN ] 2019-08-17T17:45:48,655Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,662Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[WARN ] 2019-08-17T17:45:48,695Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,710Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=bb3275ac-1335-456b-9a3b-9dd344a6e3ea, invocation_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, invocation_timestamp=2019-08-17T17:45:47.789Z, origin=Only For Testing, session_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, session_timestamp=2019-08-17T17:45:47.789Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,710Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=bb3275ac-1335-456b-9a3b-9dd344a6e3ea, invocation_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, invocation_timestamp=2019-08-17T17:45:47.789Z, origin=Only For Testing, session_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, session_timestamp=2019-08-17T17:45:47.789Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,722Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=bb3275ac-1335-456b-9a3b-9dd344a6e3ea, invocation_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, invocation_timestamp=2019-08-17T17:45:47.789Z, origin=Only For Testing, session_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, session_timestamp=2019-08-17T17:45:47.789Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,734Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[WARN ] 2019-08-17T17:45:48,734Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,738Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,743Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,746Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=3f0ffeab-d2d7-4489-bf70-b45abd849abf, invocation_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, invocation_timestamp=2019-08-17T17:45:48.642Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cddd85e5-af0f-4c12-86f8-58496a3a6b41, session_timestamp=2019-08-17T17:45:48.642Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,752Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=bb3275ac-1335-456b-9a3b-9dd344a6e3ea, invocation_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, invocation_timestamp=2019-08-17T17:45:47.789Z, origin=Only For Testing, session_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, session_timestamp=2019-08-17T17:45:47.789Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,752Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=bb3275ac-1335-456b-9a3b-9dd344a6e3ea, invocation_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, invocation_timestamp=2019-08-17T17:45:47.789Z, origin=Only For Testing, session_id=f28c9ee3-fc9e-4d0d-9334-dbc45c25a673, session_timestamp=2019-08-17T17:45:47.789Z, thread-id=550, tx_id=81E86CD72DCD28FD52C1A4671832244BC2BD9E9B2627677D62CC39454E8D0076}
[INFO ] 2019-08-17T17:45:48,825Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174548.773/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:45:48,825Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:48,825Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:48,848Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:48,848Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:48,869Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:48,874Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:48,877Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:48,883Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:48.773Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:49,465Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:49,467Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174548.773/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:49,467Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:49,468Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:49,469Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:49,469Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:49,527Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:49,534Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:49,551Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:49,559Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:49,559Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:49,654Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:49,658Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:49,658Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063949658) {}
[INFO ] 2019-08-17T17:45:49,659Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:49,672Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063949658) {}
[INFO ] 2019-08-17T17:45:49,680Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:49,683Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063949658) {}
[INFO ] 2019-08-17T17:45:49,688Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:49,719Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:49,720Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:45:49,720Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:45:49,726Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063949658) {}
[INFO ] 2019-08-17T17:45:49,730Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063949658) {}
[INFO ] 2019-08-17T17:45:49,730Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:49,730Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063949658) {}
[INFO ] 2019-08-17T17:45:49,730Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:49,734Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174548.773/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:45:49,734Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:49,734Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:49,756Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:49,757Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:49,778Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:49,784Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:49,799Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:49,802Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:48.773Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:50,104Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:50,105Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174548.773/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:50,105Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:50,106Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:50,107Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:50,107Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:50,165Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:50,170Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:50,172Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:50,172Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:50,185Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:50,185Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:50,273Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:50,277Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:50,277Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063950277) {}
[INFO ] 2019-08-17T17:45:50,279Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:50,284Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063950277) {}
[INFO ] 2019-08-17T17:45:50,289Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:50,291Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063950277) {}
[INFO ] 2019-08-17T17:45:50,295Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:50,325Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:50,329Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063950277) {}
[INFO ] 2019-08-17T17:45:50,331Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063949658) {}
[INFO ] 2019-08-17T17:45:50,331Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:50,339Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063950277) {}
[INFO ] 2019-08-17T17:45:50,339Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:50,345Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063950277) {}
[INFO ] 2019-08-17T17:45:50,345Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:50,345Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063950277) {}
[INFO ] 2019-08-17T17:45:50,345Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:50,350Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174548.773/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:45:50,351Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:50,351Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:50,373Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:50,373Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174548.773/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:50,394Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:50,399Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:50,414Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:50,416Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:48.773Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:50,641Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:50,642Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174548.773/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:50,642Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:50,642Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:50,643Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:50,643Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:50,691Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:50,697Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:50,698Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:50,698Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:50,713Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:50,713Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:50,794Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:50,797Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:50,797Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063950797) {}
[INFO ] 2019-08-17T17:45:50,798Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:50,803Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063950797) {}
[INFO ] 2019-08-17T17:45:50,807Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:50,810Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063950797) {}
[INFO ] 2019-08-17T17:45:50,814Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:50,841Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:50,846Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063950797) {}
[INFO ] 2019-08-17T17:45:50,848Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063949658) {}
[INFO ] 2019-08-17T17:45:50,848Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:50,853Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063950797) {}
[INFO ] 2019-08-17T17:45:50,854Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:50,859Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063950277) {}
[INFO ] 2019-08-17T17:45:50,860Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:50,864Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063950797) {}
[INFO ] 2019-08-17T17:45:50,865Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:50,870Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063950797) {}
[INFO ] 2019-08-17T17:45:50,870Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:50,870Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063950797) {}
[INFO ] 2019-08-17T17:45:50,870Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:45:50,870Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:50,870Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:50,870Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:50,870Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:51,543Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=f823d726-1db6-4030-b2e8-2514d50b3366, invocation_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, invocation_timestamp=2019-08-17T17:45:50.871Z, origin=Only For Testing, session_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, session_timestamp=2019-08-17T17:45:50.871Z, thread-id=723}
[INFO ] 2019-08-17T17:45:51,572Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[WARN ] 2019-08-17T17:45:51,572Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,578Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[WARN ] 2019-08-17T17:45:51,602Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,614Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=f823d726-1db6-4030-b2e8-2514d50b3366, invocation_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, invocation_timestamp=2019-08-17T17:45:50.871Z, origin=Only For Testing, session_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, session_timestamp=2019-08-17T17:45:50.871Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,614Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=f823d726-1db6-4030-b2e8-2514d50b3366, invocation_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, invocation_timestamp=2019-08-17T17:45:50.871Z, origin=Only For Testing, session_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, session_timestamp=2019-08-17T17:45:50.871Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,626Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=f823d726-1db6-4030-b2e8-2514d50b3366, invocation_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, invocation_timestamp=2019-08-17T17:45:50.871Z, origin=Only For Testing, session_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, session_timestamp=2019-08-17T17:45:50.871Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,634Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[WARN ] 2019-08-17T17:45:51,634Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,638Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,641Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,645Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=1fd048f4-d3a7-46bf-8567-933216369265, invocation_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, invocation_timestamp=2019-08-17T17:45:51.562Z, origin=O=Mock Company 1, L=London, C=GB, session_id=58d74e60-4cb9-4855-aa49-a919de3bbd52, session_timestamp=2019-08-17T17:45:51.562Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,650Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=f823d726-1db6-4030-b2e8-2514d50b3366, invocation_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, invocation_timestamp=2019-08-17T17:45:50.871Z, origin=Only For Testing, session_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, session_timestamp=2019-08-17T17:45:50.871Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,650Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=f823d726-1db6-4030-b2e8-2514d50b3366, invocation_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, invocation_timestamp=2019-08-17T17:45:50.871Z, origin=Only For Testing, session_id=1893e2c2-c01e-47d2-b95c-2bf61535d95d, session_timestamp=2019-08-17T17:45:50.871Z, thread-id=723, tx_id=3C4064CA0781EB8C46DEB3842B1F1A2CEDF4EEB14FF5C9418649DC37BC47C8BF}
[INFO ] 2019-08-17T17:45:51,713Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174551.660/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:45:51,713Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:51,713Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:51,734Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:51,735Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:51,756Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:51,761Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:51,764Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:51,768Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:51.660Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:52,001Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:52,002Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174551.660/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:52,002Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:52,003Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:52,004Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,004Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,060Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,065Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:52,080Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:52,086Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,086Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,162Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,165Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:52,165Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063952165) {}
[INFO ] 2019-08-17T17:45:52,167Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:52,178Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063952165) {}
[INFO ] 2019-08-17T17:45:52,185Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:52,188Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063952165) {}
[INFO ] 2019-08-17T17:45:52,191Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:52,220Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:52,221Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:45:52,221Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:45:52,225Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063952165) {}
[INFO ] 2019-08-17T17:45:52,227Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063952165) {}
[INFO ] 2019-08-17T17:45:52,227Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:52,227Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063952165) {}
[INFO ] 2019-08-17T17:45:52,227Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:52,229Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174551.660/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:45:52,230Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:52,230Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:52,252Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:52,252Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:52,273Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:52,277Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:52,291Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:52,293Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:51.660Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:52,506Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:52,507Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174551.660/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:52,507Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:52,508Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:52,509Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,510Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,563Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:52,568Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:52,569Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:52,570Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:52,582Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:52,582Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:52,662Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:52,665Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:52,665Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063952665) {}
[INFO ] 2019-08-17T17:45:52,666Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:52,671Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063952665) {}
[INFO ] 2019-08-17T17:45:52,677Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:52,680Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063952665) {}
[INFO ] 2019-08-17T17:45:52,683Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:52,712Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:52,715Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063952665) {}
[INFO ] 2019-08-17T17:45:52,717Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063952165) {}
[INFO ] 2019-08-17T17:45:52,718Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:52,723Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063952665) {}
[INFO ] 2019-08-17T17:45:52,723Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:52,729Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063952665) {}
[INFO ] 2019-08-17T17:45:52,729Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:52,729Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063952665) {}
[INFO ] 2019-08-17T17:45:52,729Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:52,733Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174551.660/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:45:52,734Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:52,734Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:52,755Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:52,755Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174551.660/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:52,776Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:52,781Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:52,796Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:52,798Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:51.660Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:53,048Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:53,049Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174551.660/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:53,049Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:53,050Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:53,051Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:53,051Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:53,099Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:53,103Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:53,104Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:53,104Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:53,115Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:53,115Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:53,181Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:53,185Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:53,185Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063953185) {}
[INFO ] 2019-08-17T17:45:53,186Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:53,190Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063953185) {}
[INFO ] 2019-08-17T17:45:53,193Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:53,195Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063953185) {}
[INFO ] 2019-08-17T17:45:53,198Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:53,225Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:53,230Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063953185) {}
[INFO ] 2019-08-17T17:45:53,231Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063952165) {}
[INFO ] 2019-08-17T17:45:53,232Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:53,238Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063953185) {}
[INFO ] 2019-08-17T17:45:53,238Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:53,243Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063952665) {}
[INFO ] 2019-08-17T17:45:53,244Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:53,249Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063953185) {}
[INFO ] 2019-08-17T17:45:53,250Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:53,254Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063953185) {}
[INFO ] 2019-08-17T17:45:53,254Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:53,254Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063953185) {}
[INFO ] 2019-08-17T17:45:53,254Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:45:53,255Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:53,255Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:53,255Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:53,255Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:53,880Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=4b2120cf-264e-49ed-b948-3b52943d39f6, invocation_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, invocation_timestamp=2019-08-17T17:45:53.255Z, origin=Only For Testing, session_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, session_timestamp=2019-08-17T17:45:53.255Z, thread-id=897}
[INFO ] 2019-08-17T17:45:53,904Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[WARN ] 2019-08-17T17:45:53,904Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,909Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[WARN ] 2019-08-17T17:45:53,933Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,941Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=4b2120cf-264e-49ed-b948-3b52943d39f6, invocation_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, invocation_timestamp=2019-08-17T17:45:53.255Z, origin=Only For Testing, session_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, session_timestamp=2019-08-17T17:45:53.255Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,941Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=4b2120cf-264e-49ed-b948-3b52943d39f6, invocation_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, invocation_timestamp=2019-08-17T17:45:53.255Z, origin=Only For Testing, session_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, session_timestamp=2019-08-17T17:45:53.255Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,953Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=4b2120cf-264e-49ed-b948-3b52943d39f6, invocation_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, invocation_timestamp=2019-08-17T17:45:53.255Z, origin=Only For Testing, session_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, session_timestamp=2019-08-17T17:45:53.255Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,960Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[WARN ] 2019-08-17T17:45:53,960Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,963Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,967Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,969Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=977f46ee-2776-48dc-b04c-1e8b2ea5a4cd, invocation_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, invocation_timestamp=2019-08-17T17:45:53.894Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f2096f8c-d4d7-4c11-b84c-1d6b1f4cfec2, session_timestamp=2019-08-17T17:45:53.894Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,974Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=4b2120cf-264e-49ed-b948-3b52943d39f6, invocation_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, invocation_timestamp=2019-08-17T17:45:53.255Z, origin=Only For Testing, session_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, session_timestamp=2019-08-17T17:45:53.255Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:53,974Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=4b2120cf-264e-49ed-b948-3b52943d39f6, invocation_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, invocation_timestamp=2019-08-17T17:45:53.255Z, origin=Only For Testing, session_id=dd59d354-f4d1-493b-a3a2-085c3c365b61, session_timestamp=2019-08-17T17:45:53.255Z, thread-id=897, tx_id=EEAB3B93CB4523F93BE4ED8D38A8EBEA52B1A37DC168E56736BA2C5B01C94B82}
[INFO ] 2019-08-17T17:45:54,020Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174553.983/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:45:54,020Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:54,020Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:54,042Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:54,042Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:54,063Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:54,068Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:54,070Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:54,074Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:53.983Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:54,337Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:54,338Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174553.983/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:54,338Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:54,338Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:54,339Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,339Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,384Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,389Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:54,399Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:54,405Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,405Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,468Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,471Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:54,471Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063954471) {}
[INFO ] 2019-08-17T17:45:54,472Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:54,480Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063954471) {}
[INFO ] 2019-08-17T17:45:54,486Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:54,490Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063954471) {}
[INFO ] 2019-08-17T17:45:54,492Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:54,519Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:54,521Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:45:54,521Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:45:54,525Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063954471) {}
[INFO ] 2019-08-17T17:45:54,526Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063954471) {}
[INFO ] 2019-08-17T17:45:54,526Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:54,526Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063954471) {}
[INFO ] 2019-08-17T17:45:54,526Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:54,529Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174553.983/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:45:54,530Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:54,530Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:54,551Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:54,551Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:54,572Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:54,577Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:54,591Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:54,594Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:53.983Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:54,803Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:54,804Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174553.983/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:54,804Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:54,804Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:54,806Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,806Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,854Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:54,859Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:54,861Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:54,862Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:54,876Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:54,876Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:54,958Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:54,961Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:54,961Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063954961) {}
[INFO ] 2019-08-17T17:45:54,962Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:54,965Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063954961) {}
[INFO ] 2019-08-17T17:45:54,969Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:54,971Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063954961) {}
[INFO ] 2019-08-17T17:45:54,974Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:55,003Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:55,006Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063954961) {}
[INFO ] 2019-08-17T17:45:55,008Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063954471) {}
[INFO ] 2019-08-17T17:45:55,008Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:55,013Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063954961) {}
[INFO ] 2019-08-17T17:45:55,014Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:55,018Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063954961) {}
[INFO ] 2019-08-17T17:45:55,018Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:55,018Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063954961) {}
[INFO ] 2019-08-17T17:45:55,018Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:55,023Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174553.983/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:45:55,023Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:45:55,023Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:45:55,044Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:55,044Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174553.983/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:45:55,067Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:45:55,072Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:45:55,086Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:45:55,087Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:45:53.983Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:45:55,320Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:45:55,321Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174553.983/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:45:55,321Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:45:55,321Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:45:55,322Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:55,323Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:55,372Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:45:55,376Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:45:55,378Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:45:55,379Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:45:55,390Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:55,390Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:55,457Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:45:55,461Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:45:55,461Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063955461) {}
[INFO ] 2019-08-17T17:45:55,462Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:55,466Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063955461) {}
[INFO ] 2019-08-17T17:45:55,469Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:45:55,471Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063955461) {}
[INFO ] 2019-08-17T17:45:55,473Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:55,503Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:45:55,506Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063955461) {}
[INFO ] 2019-08-17T17:45:55,507Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566063954471) {}
[INFO ] 2019-08-17T17:45:55,508Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:55,511Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063955461) {}
[INFO ] 2019-08-17T17:45:55,512Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:55,515Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566063954961) {}
[INFO ] 2019-08-17T17:45:55,516Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:55,519Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063955461) {}
[INFO ] 2019-08-17T17:45:55,520Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:45:55,523Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063955461) {}
[INFO ] 2019-08-17T17:45:55,523Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:45:55,523Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566063955461) {}
[INFO ] 2019-08-17T17:45:55,523Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:45:55,523Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:55,523Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:55,523Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:45:55,523Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:45:56,058Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=152e452f-861e-4836-bfd7-51052b4adb8c, invocation_id=563b7016-be47-4cc1-9fd4-679126be01b2, invocation_timestamp=2019-08-17T17:45:55.524Z, origin=Only For Testing, session_id=563b7016-be47-4cc1-9fd4-679126be01b2, session_timestamp=2019-08-17T17:45:55.524Z, thread-id=1070}
[INFO ] 2019-08-17T17:45:56,081Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[WARN ] 2019-08-17T17:45:56,081Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,086Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[WARN ] 2019-08-17T17:45:56,110Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,121Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=152e452f-861e-4836-bfd7-51052b4adb8c, invocation_id=563b7016-be47-4cc1-9fd4-679126be01b2, invocation_timestamp=2019-08-17T17:45:55.524Z, origin=Only For Testing, session_id=563b7016-be47-4cc1-9fd4-679126be01b2, session_timestamp=2019-08-17T17:45:55.524Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,121Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=152e452f-861e-4836-bfd7-51052b4adb8c, invocation_id=563b7016-be47-4cc1-9fd4-679126be01b2, invocation_timestamp=2019-08-17T17:45:55.524Z, origin=Only For Testing, session_id=563b7016-be47-4cc1-9fd4-679126be01b2, session_timestamp=2019-08-17T17:45:55.524Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,131Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=152e452f-861e-4836-bfd7-51052b4adb8c, invocation_id=563b7016-be47-4cc1-9fd4-679126be01b2, invocation_timestamp=2019-08-17T17:45:55.524Z, origin=Only For Testing, session_id=563b7016-be47-4cc1-9fd4-679126be01b2, session_timestamp=2019-08-17T17:45:55.524Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,141Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[WARN ] 2019-08-17T17:45:56,141Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,145Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,148Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,152Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=5c2f38a2-b05a-49b7-bad1-60a9a7b296bb, invocation_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, invocation_timestamp=2019-08-17T17:45:56.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=88ce84c4-cfd4-4aa7-a52a-1c4cec6f2440, session_timestamp=2019-08-17T17:45:56.072Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,157Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=152e452f-861e-4836-bfd7-51052b4adb8c, invocation_id=563b7016-be47-4cc1-9fd4-679126be01b2, invocation_timestamp=2019-08-17T17:45:55.524Z, origin=Only For Testing, session_id=563b7016-be47-4cc1-9fd4-679126be01b2, session_timestamp=2019-08-17T17:45:55.524Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:45:56,157Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=152e452f-861e-4836-bfd7-51052b4adb8c, invocation_id=563b7016-be47-4cc1-9fd4-679126be01b2, invocation_timestamp=2019-08-17T17:45:55.524Z, origin=Only For Testing, session_id=563b7016-be47-4cc1-9fd4-679126be01b2, session_timestamp=2019-08-17T17:45:55.524Z, thread-id=1070, tx_id=56CE9BF83F860744C9BC161579E163D2CEDDC6785B3E87C0D9F1589ED6A846AF}
[INFO ] 2019-08-17T17:46:56,698Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-17T17:46:58,124Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-17T17:46:59,597Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174651.635/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:46:59,602Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:46:59,632Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:46:59,689Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:46:59,691Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:46:59,718Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T17:46:59,722Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-17T17:47:00,395Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:00,469Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:00,638Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:46:51.426Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:04,771Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:04,775Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174651.635/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:04,775Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:04,777Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:04,830Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:04,835Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:06,782Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:07,421Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:07,474Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:07,490Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:07,490Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:07,797Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:07,807Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:07,807Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064027807) {}
[INFO ] 2019-08-17T17:47:07,814Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:07,959Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064027807) {}
[INFO ] 2019-08-17T17:47:08,026Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:08,048Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064027807) {}
[INFO ] 2019-08-17T17:47:08,079Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:08,118Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:08,122Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:47:08,126Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:47:08,484Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064027807) {}
[INFO ] 2019-08-17T17:47:08,502Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064027807) {}
[INFO ] 2019-08-17T17:47:08,504Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:08,504Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064027807) {}
[INFO ] 2019-08-17T17:47:08,504Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:08,512Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174651.635/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:47:08,513Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:08,513Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:08,536Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:08,536Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:08,559Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:08,568Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:08,601Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:08,606Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:46:51.426Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:09,094Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:09,099Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174651.635/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:09,099Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:09,100Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:09,102Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:09,102Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:09,211Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:09,225Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:09,227Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:09,228Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:09,250Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:09,250Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:09,403Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:09,407Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:09,407Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064029407) {}
[INFO ] 2019-08-17T17:47:09,409Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:09,417Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064029407) {}
[INFO ] 2019-08-17T17:47:09,429Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:09,434Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064029407) {}
[INFO ] 2019-08-17T17:47:09,439Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:09,474Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:09,486Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064029407) {}
[INFO ] 2019-08-17T17:47:09,489Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064027807) {}
[INFO ] 2019-08-17T17:47:09,490Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:09,505Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064029407) {}
[INFO ] 2019-08-17T17:47:09,506Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:09,520Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064029407) {}
[INFO ] 2019-08-17T17:47:09,520Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:09,520Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064029407) {}
[INFO ] 2019-08-17T17:47:09,520Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:09,525Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174651.635/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:47:09,525Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:09,525Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:09,548Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:09,548Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174651.635/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:09,601Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:09,607Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:09,636Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:09,640Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:46:51.426Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:10,044Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:10,046Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174651.635/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:10,046Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:10,047Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:10,050Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:10,050Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:10,153Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:10,163Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:10,165Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:10,166Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:10,188Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:10,188Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:10,361Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:10,367Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:10,367Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064030367) {}
[INFO ] 2019-08-17T17:47:10,369Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:10,376Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064030367) {}
[INFO ] 2019-08-17T17:47:10,384Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:10,388Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064030367) {}
[INFO ] 2019-08-17T17:47:10,393Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:10,425Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:10,433Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064030367) {}
[INFO ] 2019-08-17T17:47:10,436Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064027807) {}
[INFO ] 2019-08-17T17:47:10,437Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:10,447Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064030367) {}
[INFO ] 2019-08-17T17:47:10,448Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:10,457Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064029407) {}
[INFO ] 2019-08-17T17:47:10,458Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:10,467Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064030367) {}
[INFO ] 2019-08-17T17:47:10,469Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:10,480Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064030367) {}
[INFO ] 2019-08-17T17:47:10,480Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:10,480Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064030367) {}
[INFO ] 2019-08-17T17:47:10,480Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:47:10,482Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:10,482Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:10,486Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:10,486Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:10,739Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=16acb7ce-78a6-45ab-b659-e62e966103c3, invocation_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, invocation_timestamp=2019-08-17T17:47:10.515Z, origin=Only For Testing, session_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, session_timestamp=2019-08-17T17:47:10.515Z, thread-id=201}
[WARN ] 2019-08-17T17:47:10,739Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=16acb7ce-78a6-45ab-b659-e62e966103c3, invocation_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, invocation_timestamp=2019-08-17T17:47:10.515Z, origin=Only For Testing, session_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, session_timestamp=2019-08-17T17:47:10.515Z, thread-id=201}
[WARN ] 2019-08-17T17:47:12,012Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=16acb7ce-78a6-45ab-b659-e62e966103c3, invocation_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, invocation_timestamp=2019-08-17T17:47:10.515Z, origin=Only For Testing, session_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, session_timestamp=2019-08-17T17:47:10.515Z, thread-id=201}
[INFO ] 2019-08-17T17:47:12,229Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[WARN ] 2019-08-17T17:47:12,241Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,273Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[WARN ] 2019-08-17T17:47:12,326Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,355Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=16acb7ce-78a6-45ab-b659-e62e966103c3, invocation_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, invocation_timestamp=2019-08-17T17:47:10.515Z, origin=Only For Testing, session_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, session_timestamp=2019-08-17T17:47:10.515Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,355Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=16acb7ce-78a6-45ab-b659-e62e966103c3, invocation_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, invocation_timestamp=2019-08-17T17:47:10.515Z, origin=Only For Testing, session_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, session_timestamp=2019-08-17T17:47:10.515Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,389Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=16acb7ce-78a6-45ab-b659-e62e966103c3, invocation_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, invocation_timestamp=2019-08-17T17:47:10.515Z, origin=Only For Testing, session_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, session_timestamp=2019-08-17T17:47:10.515Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,412Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[WARN ] 2019-08-17T17:47:12,412Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,417Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,422Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,427Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=ff8f0b5e-63d5-42a7-8a7c-31b177a1c2ff, invocation_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, invocation_timestamp=2019-08-17T17:47:12.149Z, origin=O=Mock Company 1, L=London, C=GB, session_id=296a940e-6b0f-4f70-8db3-d4d4aa21caeb, session_timestamp=2019-08-17T17:47:12.149Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,458Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=16acb7ce-78a6-45ab-b659-e62e966103c3, invocation_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, invocation_timestamp=2019-08-17T17:47:10.515Z, origin=Only For Testing, session_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, session_timestamp=2019-08-17T17:47:10.515Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,458Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=16acb7ce-78a6-45ab-b659-e62e966103c3, invocation_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, invocation_timestamp=2019-08-17T17:47:10.515Z, origin=Only For Testing, session_id=8412b33a-348d-4201-89a1-3a8e2d4cde94, session_timestamp=2019-08-17T17:47:10.515Z, thread-id=201, tx_id=9C9CFF36A16B533A45F350EAF575D1C867153C7BEC7C43E4FDFCCD108153B18A}
[INFO ] 2019-08-17T17:47:12,566Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174712.494/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:47:12,567Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:12,567Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:12,590Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:12,590Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:12,612Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:12,621Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:12,624Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:12,629Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:12.494Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:12,995Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:12,997Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174712.494/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:12,997Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:12,999Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:13,002Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,002Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,075Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,082Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:13,103Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:13,110Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,111Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,223Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,227Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:13,227Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064033227) {}
[INFO ] 2019-08-17T17:47:13,229Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:13,243Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064033227) {}
[INFO ] 2019-08-17T17:47:13,253Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:13,257Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064033227) {}
[INFO ] 2019-08-17T17:47:13,263Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:13,295Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:13,296Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:47:13,296Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:47:13,302Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064033227) {}
[INFO ] 2019-08-17T17:47:13,304Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064033227) {}
[INFO ] 2019-08-17T17:47:13,304Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:13,304Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064033227) {}
[INFO ] 2019-08-17T17:47:13,304Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:13,306Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174712.494/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:47:13,307Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:13,307Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:13,330Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:13,330Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:13,352Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:13,357Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:13,376Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:13,378Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:12.494Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:13,701Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:13,702Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174712.494/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:13,702Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:13,703Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:13,704Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,704Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,777Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:13,785Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:13,787Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:13,787Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:13,809Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:13,809Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:13,925Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:13,931Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:13,931Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064033931) {}
[INFO ] 2019-08-17T17:47:13,933Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:13,939Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064033931) {}
[INFO ] 2019-08-17T17:47:13,946Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:13,949Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064033931) {}
[INFO ] 2019-08-17T17:47:13,954Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:13,986Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:13,992Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064033931) {}
[INFO ] 2019-08-17T17:47:13,994Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064033227) {}
[INFO ] 2019-08-17T17:47:13,995Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:14,003Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064033931) {}
[INFO ] 2019-08-17T17:47:14,004Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:14,011Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064033931) {}
[INFO ] 2019-08-17T17:47:14,011Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:14,011Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064033931) {}
[INFO ] 2019-08-17T17:47:14,011Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:14,014Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174712.494/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:47:14,014Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:14,014Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:14,036Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:14,036Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174712.494/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:14,058Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:14,063Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:14,084Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:14,088Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:12.494Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:14,436Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:14,438Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174712.494/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:14,438Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:14,439Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:14,441Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:14,441Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:14,505Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:14,511Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:14,512Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:14,513Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:14,527Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:14,527Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:14,621Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:14,624Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:14,624Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064034624) {}
[INFO ] 2019-08-17T17:47:14,626Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:14,632Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064034624) {}
[INFO ] 2019-08-17T17:47:14,638Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:14,641Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064034624) {}
[INFO ] 2019-08-17T17:47:14,647Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:14,674Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:14,679Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064034624) {}
[INFO ] 2019-08-17T17:47:14,680Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064033227) {}
[INFO ] 2019-08-17T17:47:14,681Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:14,688Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064034624) {}
[INFO ] 2019-08-17T17:47:14,689Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:14,697Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064033931) {}
[INFO ] 2019-08-17T17:47:14,698Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:14,705Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064034624) {}
[INFO ] 2019-08-17T17:47:14,707Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:14,715Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064034624) {}
[INFO ] 2019-08-17T17:47:14,715Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:14,715Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064034624) {}
[INFO ] 2019-08-17T17:47:14,715Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:47:14,715Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:14,715Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:14,715Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:14,715Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:15,608Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c405fb41-7b57-4815-a780-1a871af9cea9, invocation_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, invocation_timestamp=2019-08-17T17:47:14.716Z, origin=Only For Testing, session_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, session_timestamp=2019-08-17T17:47:14.716Z, thread-id=377}
[INFO ] 2019-08-17T17:47:15,647Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[WARN ] 2019-08-17T17:47:15,647Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,656Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[WARN ] 2019-08-17T17:47:15,688Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,701Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c405fb41-7b57-4815-a780-1a871af9cea9, invocation_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, invocation_timestamp=2019-08-17T17:47:14.716Z, origin=Only For Testing, session_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, session_timestamp=2019-08-17T17:47:14.716Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,701Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c405fb41-7b57-4815-a780-1a871af9cea9, invocation_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, invocation_timestamp=2019-08-17T17:47:14.716Z, origin=Only For Testing, session_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, session_timestamp=2019-08-17T17:47:14.716Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,713Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c405fb41-7b57-4815-a780-1a871af9cea9, invocation_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, invocation_timestamp=2019-08-17T17:47:14.716Z, origin=Only For Testing, session_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, session_timestamp=2019-08-17T17:47:14.716Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,722Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[WARN ] 2019-08-17T17:47:15,722Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,725Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,731Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,735Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=06f4def8-3137-4f72-a8c4-fee7a2de2ddd, invocation_id=c44486e5-8985-4c2c-b513-d055c81b427b, invocation_timestamp=2019-08-17T17:47:15.629Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c44486e5-8985-4c2c-b513-d055c81b427b, session_timestamp=2019-08-17T17:47:15.629Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,742Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c405fb41-7b57-4815-a780-1a871af9cea9, invocation_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, invocation_timestamp=2019-08-17T17:47:14.716Z, origin=Only For Testing, session_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, session_timestamp=2019-08-17T17:47:14.716Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,742Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c405fb41-7b57-4815-a780-1a871af9cea9, invocation_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, invocation_timestamp=2019-08-17T17:47:14.716Z, origin=Only For Testing, session_id=6f688bba-5b8e-4eec-9175-58a7d3fc2fe2, session_timestamp=2019-08-17T17:47:14.716Z, thread-id=377, tx_id=5E22D0A61E384C9B0CC0E149A30307F67EB0F05F72099A93E06E43D9EF7E808F}
[INFO ] 2019-08-17T17:47:15,820Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174715.755/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:47:15,820Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:15,820Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:15,845Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:15,845Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:15,868Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:15,874Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:15,877Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:15,885Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:15.755Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:16,188Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:16,190Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174715.755/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:16,190Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:16,190Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:16,192Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:16,192Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:16,256Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:16,263Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:16,278Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:16,287Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:16,287Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:16,411Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:16,415Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:16,415Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064036415) {}
[INFO ] 2019-08-17T17:47:16,417Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:16,430Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064036415) {}
[INFO ] 2019-08-17T17:47:16,440Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:16,443Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064036415) {}
[INFO ] 2019-08-17T17:47:16,447Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:16,505Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:16,506Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:47:16,506Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:47:16,511Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064036415) {}
[INFO ] 2019-08-17T17:47:16,513Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064036415) {}
[INFO ] 2019-08-17T17:47:16,513Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:16,513Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064036415) {}
[INFO ] 2019-08-17T17:47:16,513Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:16,517Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174715.755/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:47:16,517Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:16,517Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:16,539Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:16,539Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:16,560Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:16,566Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:16,584Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:16,587Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:15.755Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:16,917Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:16,919Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174715.755/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:16,919Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:16,919Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:16,921Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:16,921Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:16,999Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:17,008Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:17,009Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:17,010Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:17,025Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:17,025Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:17,123Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:17,127Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:17,127Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064037127) {}
[INFO ] 2019-08-17T17:47:17,129Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:17,135Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064037127) {}
[INFO ] 2019-08-17T17:47:17,140Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:17,143Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064037127) {}
[INFO ] 2019-08-17T17:47:17,146Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:17,179Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:17,184Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064037127) {}
[INFO ] 2019-08-17T17:47:17,187Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064036415) {}
[INFO ] 2019-08-17T17:47:17,187Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:17,195Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064037127) {}
[INFO ] 2019-08-17T17:47:17,195Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:17,202Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064037127) {}
[INFO ] 2019-08-17T17:47:17,202Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:17,202Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064037127) {}
[INFO ] 2019-08-17T17:47:17,202Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:17,205Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174715.755/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:47:17,206Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:17,206Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:17,229Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:17,229Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174715.755/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:17,250Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:17,257Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:17,278Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:17,281Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:15.755Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:17,563Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:17,565Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174715.755/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:17,565Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:17,566Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:17,567Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:17,567Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:17,629Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:17,635Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:17,636Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:17,637Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:17,649Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:17,649Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:17,745Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:17,750Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:17,750Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064037750) {}
[INFO ] 2019-08-17T17:47:17,752Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:17,757Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064037750) {}
[INFO ] 2019-08-17T17:47:17,762Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:17,765Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064037750) {}
[INFO ] 2019-08-17T17:47:17,768Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:17,798Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:17,803Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064037750) {}
[INFO ] 2019-08-17T17:47:17,804Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064036415) {}
[INFO ] 2019-08-17T17:47:17,805Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:17,810Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064037750) {}
[INFO ] 2019-08-17T17:47:17,811Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:17,816Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064037127) {}
[INFO ] 2019-08-17T17:47:17,817Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:17,822Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064037750) {}
[INFO ] 2019-08-17T17:47:17,822Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:17,827Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064037750) {}
[INFO ] 2019-08-17T17:47:17,827Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:17,828Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064037750) {}
[INFO ] 2019-08-17T17:47:17,828Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:47:17,828Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:17,828Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:17,828Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:17,828Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:18,696Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=65dd03a3-d786-46a9-be8b-cf99421a2eba, invocation_id=e94197c9-815f-4229-be96-f545cb319a18, invocation_timestamp=2019-08-17T17:47:17.828Z, origin=Only For Testing, session_id=e94197c9-815f-4229-be96-f545cb319a18, session_timestamp=2019-08-17T17:47:17.828Z, thread-id=550}
[INFO ] 2019-08-17T17:47:18,724Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[WARN ] 2019-08-17T17:47:18,724Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,733Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[WARN ] 2019-08-17T17:47:18,759Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,768Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=65dd03a3-d786-46a9-be8b-cf99421a2eba, invocation_id=e94197c9-815f-4229-be96-f545cb319a18, invocation_timestamp=2019-08-17T17:47:17.828Z, origin=Only For Testing, session_id=e94197c9-815f-4229-be96-f545cb319a18, session_timestamp=2019-08-17T17:47:17.828Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,768Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=65dd03a3-d786-46a9-be8b-cf99421a2eba, invocation_id=e94197c9-815f-4229-be96-f545cb319a18, invocation_timestamp=2019-08-17T17:47:17.828Z, origin=Only For Testing, session_id=e94197c9-815f-4229-be96-f545cb319a18, session_timestamp=2019-08-17T17:47:17.828Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,779Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=65dd03a3-d786-46a9-be8b-cf99421a2eba, invocation_id=e94197c9-815f-4229-be96-f545cb319a18, invocation_timestamp=2019-08-17T17:47:17.828Z, origin=Only For Testing, session_id=e94197c9-815f-4229-be96-f545cb319a18, session_timestamp=2019-08-17T17:47:17.828Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,787Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[WARN ] 2019-08-17T17:47:18,787Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,791Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,795Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,797Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=04864d1d-d1d0-44d7-a19d-ec1cb65898af, invocation_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, invocation_timestamp=2019-08-17T17:47:18.712Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23594be5-e59c-4fd6-b974-f2f5cc6faa3f, session_timestamp=2019-08-17T17:47:18.712Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,803Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=65dd03a3-d786-46a9-be8b-cf99421a2eba, invocation_id=e94197c9-815f-4229-be96-f545cb319a18, invocation_timestamp=2019-08-17T17:47:17.828Z, origin=Only For Testing, session_id=e94197c9-815f-4229-be96-f545cb319a18, session_timestamp=2019-08-17T17:47:17.828Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,803Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=65dd03a3-d786-46a9-be8b-cf99421a2eba, invocation_id=e94197c9-815f-4229-be96-f545cb319a18, invocation_timestamp=2019-08-17T17:47:17.828Z, origin=Only For Testing, session_id=e94197c9-815f-4229-be96-f545cb319a18, session_timestamp=2019-08-17T17:47:17.828Z, thread-id=550, tx_id=BA6DF54404D6350639168C11828F9C032936890D7460CA39DA02DF363DD81690}
[INFO ] 2019-08-17T17:47:18,868Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174718.812/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:47:18,868Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:18,868Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:18,891Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:18,891Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:18,913Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:18,919Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:18,922Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:18,926Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:18.812Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:19,195Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:19,196Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174718.812/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:19,196Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:19,197Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:19,198Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,198Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,250Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,257Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:19,276Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:19,282Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,282Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,366Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,370Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:19,370Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064039370) {}
[INFO ] 2019-08-17T17:47:19,371Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:19,382Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064039370) {}
[INFO ] 2019-08-17T17:47:19,389Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:19,391Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064039370) {}
[INFO ] 2019-08-17T17:47:19,393Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:19,421Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:19,422Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:47:19,422Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:47:19,427Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064039370) {}
[INFO ] 2019-08-17T17:47:19,429Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064039370) {}
[INFO ] 2019-08-17T17:47:19,429Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:19,429Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064039370) {}
[INFO ] 2019-08-17T17:47:19,429Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:19,432Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174718.812/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:47:19,432Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:19,432Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:19,454Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:19,454Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:19,476Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:19,480Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:19,495Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:19,497Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:18.812Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:19,748Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:19,749Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174718.812/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:19,749Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:19,750Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:19,751Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,751Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,809Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:19,815Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:19,816Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:19,816Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:19,828Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:19,828Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:19,914Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:19,918Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:19,918Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064039918) {}
[INFO ] 2019-08-17T17:47:19,920Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:19,925Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064039918) {}
[INFO ] 2019-08-17T17:47:19,930Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:19,934Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064039918) {}
[INFO ] 2019-08-17T17:47:19,937Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:19,965Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:19,969Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064039918) {}
[INFO ] 2019-08-17T17:47:19,971Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064039370) {}
[INFO ] 2019-08-17T17:47:19,972Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:19,978Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064039918) {}
[INFO ] 2019-08-17T17:47:19,979Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:19,985Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064039918) {}
[INFO ] 2019-08-17T17:47:19,985Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:19,985Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064039918) {}
[INFO ] 2019-08-17T17:47:19,985Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:19,988Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174718.812/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:47:19,988Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:19,988Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:20,007Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:20,007Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174718.812/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:20,029Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:20,034Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:20,055Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:20,057Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:18.812Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:20,310Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:20,311Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174718.812/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:20,311Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:20,312Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:20,313Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:20,314Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:20,373Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:20,379Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:20,380Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:20,381Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:20,394Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:20,394Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:20,473Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:20,476Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:20,476Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064040476) {}
[INFO ] 2019-08-17T17:47:20,477Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:20,481Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064040476) {}
[INFO ] 2019-08-17T17:47:20,486Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:20,489Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064040476) {}
[INFO ] 2019-08-17T17:47:20,491Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:20,519Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:20,524Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064040476) {}
[INFO ] 2019-08-17T17:47:20,526Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064039370) {}
[INFO ] 2019-08-17T17:47:20,527Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:20,533Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064040476) {}
[INFO ] 2019-08-17T17:47:20,533Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:20,541Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064039918) {}
[INFO ] 2019-08-17T17:47:20,541Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:20,548Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064040476) {}
[INFO ] 2019-08-17T17:47:20,549Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:20,555Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064040476) {}
[INFO ] 2019-08-17T17:47:20,555Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:20,555Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064040476) {}
[INFO ] 2019-08-17T17:47:20,555Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:47:20,555Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:20,555Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:20,555Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:20,555Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:21,414Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e27ba3bf-2c1d-41e8-bb8c-86355f59bccb, invocation_id=79c63606-5948-4645-88e9-047dcec8217d, invocation_timestamp=2019-08-17T17:47:20.556Z, origin=Only For Testing, session_id=79c63606-5948-4645-88e9-047dcec8217d, session_timestamp=2019-08-17T17:47:20.556Z, thread-id=724}
[INFO ] 2019-08-17T17:47:21,442Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[WARN ] 2019-08-17T17:47:21,442Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,448Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[WARN ] 2019-08-17T17:47:21,474Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,486Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e27ba3bf-2c1d-41e8-bb8c-86355f59bccb, invocation_id=79c63606-5948-4645-88e9-047dcec8217d, invocation_timestamp=2019-08-17T17:47:20.556Z, origin=Only For Testing, session_id=79c63606-5948-4645-88e9-047dcec8217d, session_timestamp=2019-08-17T17:47:20.556Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,486Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e27ba3bf-2c1d-41e8-bb8c-86355f59bccb, invocation_id=79c63606-5948-4645-88e9-047dcec8217d, invocation_timestamp=2019-08-17T17:47:20.556Z, origin=Only For Testing, session_id=79c63606-5948-4645-88e9-047dcec8217d, session_timestamp=2019-08-17T17:47:20.556Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,495Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e27ba3bf-2c1d-41e8-bb8c-86355f59bccb, invocation_id=79c63606-5948-4645-88e9-047dcec8217d, invocation_timestamp=2019-08-17T17:47:20.556Z, origin=Only For Testing, session_id=79c63606-5948-4645-88e9-047dcec8217d, session_timestamp=2019-08-17T17:47:20.556Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,508Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[WARN ] 2019-08-17T17:47:21,508Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,513Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,517Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,520Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=25f07405-ea57-4331-bfba-5ac680501bfb, invocation_id=c8d86cf9-343a-4103-ad56-855db79c12b7, invocation_timestamp=2019-08-17T17:47:21.432Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c8d86cf9-343a-4103-ad56-855db79c12b7, session_timestamp=2019-08-17T17:47:21.432Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,525Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e27ba3bf-2c1d-41e8-bb8c-86355f59bccb, invocation_id=79c63606-5948-4645-88e9-047dcec8217d, invocation_timestamp=2019-08-17T17:47:20.556Z, origin=Only For Testing, session_id=79c63606-5948-4645-88e9-047dcec8217d, session_timestamp=2019-08-17T17:47:20.556Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,525Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=e27ba3bf-2c1d-41e8-bb8c-86355f59bccb, invocation_id=79c63606-5948-4645-88e9-047dcec8217d, invocation_timestamp=2019-08-17T17:47:20.556Z, origin=Only For Testing, session_id=79c63606-5948-4645-88e9-047dcec8217d, session_timestamp=2019-08-17T17:47:20.556Z, thread-id=724, tx_id=7CC10DE839E33578186AB558FD69E0C545595189789A303C3EB1BA67C95B1BA8}
[INFO ] 2019-08-17T17:47:21,588Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174721.538/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:47:21,588Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:21,588Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:21,609Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:21,609Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:21,632Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:21,636Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:21,639Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:21,644Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:21.538Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:21,899Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:21,900Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174721.538/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:21,900Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:21,900Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:21,902Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:21,902Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:21,954Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:21,959Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:21,973Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:21,978Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:21,978Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:22,054Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:22,057Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:22,057Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064042057) {}
[INFO ] 2019-08-17T17:47:22,058Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:22,069Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064042057) {}
[INFO ] 2019-08-17T17:47:22,075Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:22,078Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064042057) {}
[INFO ] 2019-08-17T17:47:22,081Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:22,107Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:22,108Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:47:22,108Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:47:22,112Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064042057) {}
[INFO ] 2019-08-17T17:47:22,113Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064042057) {}
[INFO ] 2019-08-17T17:47:22,113Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:22,113Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064042057) {}
[INFO ] 2019-08-17T17:47:22,113Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:22,116Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174721.538/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:47:22,116Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:22,116Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:22,138Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:22,138Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:22,161Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:22,166Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:22,179Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:22,181Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:21.538Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:22,438Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:22,439Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174721.538/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:22,439Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:22,440Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:22,441Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:22,441Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:22,495Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:22,500Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:22,501Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:22,501Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:22,512Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:22,512Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:22,580Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:22,584Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:22,584Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064042584) {}
[INFO ] 2019-08-17T17:47:22,585Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:22,589Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064042584) {}
[INFO ] 2019-08-17T17:47:22,592Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:22,594Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064042584) {}
[INFO ] 2019-08-17T17:47:22,597Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:22,618Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:22,622Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064042584) {}
[INFO ] 2019-08-17T17:47:22,623Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064042057) {}
[INFO ] 2019-08-17T17:47:22,624Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:22,628Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064042584) {}
[INFO ] 2019-08-17T17:47:22,629Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:22,635Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064042584) {}
[INFO ] 2019-08-17T17:47:22,635Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:22,635Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064042584) {}
[INFO ] 2019-08-17T17:47:22,635Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:22,637Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174721.538/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:47:22,638Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:22,638Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:22,661Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:22,661Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174721.538/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:22,683Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:22,688Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:22,703Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:22,705Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:21.538Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:22,946Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:22,947Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174721.538/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:22,947Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:22,948Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:22,949Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:22,949Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:23,004Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:23,010Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:23,011Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:23,011Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:23,023Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:23,023Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:23,095Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:23,098Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:23,098Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064043098) {}
[INFO ] 2019-08-17T17:47:23,099Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:23,105Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064043098) {}
[INFO ] 2019-08-17T17:47:23,110Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:23,112Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064043098) {}
[INFO ] 2019-08-17T17:47:23,115Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:23,136Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:23,140Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064043098) {}
[INFO ] 2019-08-17T17:47:23,141Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064042057) {}
[INFO ] 2019-08-17T17:47:23,142Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:23,146Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064043098) {}
[INFO ] 2019-08-17T17:47:23,147Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:23,151Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064042584) {}
[INFO ] 2019-08-17T17:47:23,151Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:23,156Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064043098) {}
[INFO ] 2019-08-17T17:47:23,157Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:23,161Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064043098) {}
[INFO ] 2019-08-17T17:47:23,161Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:23,161Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064043098) {}
[INFO ] 2019-08-17T17:47:23,161Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:47:23,161Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:23,161Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:23,161Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:23,161Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:24,106Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=64a83a6b-531a-4e22-b5f8-e1279150a4da, invocation_id=a928d04a-d912-4c50-afeb-a48fc89c309e, invocation_timestamp=2019-08-17T17:47:23.162Z, origin=Only For Testing, session_id=a928d04a-d912-4c50-afeb-a48fc89c309e, session_timestamp=2019-08-17T17:47:23.162Z, thread-id=897}
[INFO ] 2019-08-17T17:47:24,133Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[WARN ] 2019-08-17T17:47:24,133Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,138Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[WARN ] 2019-08-17T17:47:24,158Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,168Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=64a83a6b-531a-4e22-b5f8-e1279150a4da, invocation_id=a928d04a-d912-4c50-afeb-a48fc89c309e, invocation_timestamp=2019-08-17T17:47:23.162Z, origin=Only For Testing, session_id=a928d04a-d912-4c50-afeb-a48fc89c309e, session_timestamp=2019-08-17T17:47:23.162Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,168Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=64a83a6b-531a-4e22-b5f8-e1279150a4da, invocation_id=a928d04a-d912-4c50-afeb-a48fc89c309e, invocation_timestamp=2019-08-17T17:47:23.162Z, origin=Only For Testing, session_id=a928d04a-d912-4c50-afeb-a48fc89c309e, session_timestamp=2019-08-17T17:47:23.162Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,178Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=64a83a6b-531a-4e22-b5f8-e1279150a4da, invocation_id=a928d04a-d912-4c50-afeb-a48fc89c309e, invocation_timestamp=2019-08-17T17:47:23.162Z, origin=Only For Testing, session_id=a928d04a-d912-4c50-afeb-a48fc89c309e, session_timestamp=2019-08-17T17:47:23.162Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,188Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[WARN ] 2019-08-17T17:47:24,188Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,192Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,196Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,200Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=06326e56-4496-4490-84b2-4c7eba0d01fc, invocation_id=4be3e302-8bd9-48e4-940c-afc34b400545, invocation_timestamp=2019-08-17T17:47:24.123Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4be3e302-8bd9-48e4-940c-afc34b400545, session_timestamp=2019-08-17T17:47:24.123Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,206Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=64a83a6b-531a-4e22-b5f8-e1279150a4da, invocation_id=a928d04a-d912-4c50-afeb-a48fc89c309e, invocation_timestamp=2019-08-17T17:47:23.162Z, origin=Only For Testing, session_id=a928d04a-d912-4c50-afeb-a48fc89c309e, session_timestamp=2019-08-17T17:47:23.162Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,206Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=64a83a6b-531a-4e22-b5f8-e1279150a4da, invocation_id=a928d04a-d912-4c50-afeb-a48fc89c309e, invocation_timestamp=2019-08-17T17:47:23.162Z, origin=Only For Testing, session_id=a928d04a-d912-4c50-afeb-a48fc89c309e, session_timestamp=2019-08-17T17:47:23.162Z, thread-id=897, tx_id=672A4E55CD154AF80A0B4509677BD7A568F6EDBE95357D2D905202C444F9D09B}
[INFO ] 2019-08-17T17:47:24,265Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174724.224/nodes/0/cordapps] {}
[INFO ] 2019-08-17T17:47:24,265Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:24,265Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:24,289Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:24,289Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:24,313Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:24,322Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:24,324Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:24,328Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:24.224Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:24,573Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:24,574Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174724.224/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:24,574Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:24,575Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:24,576Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:24,576Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:24,630Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:24,635Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:24,651Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:24,657Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:24,657Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:24,732Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T17:47:24,735Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:24,735Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064044735) {}
[INFO ] 2019-08-17T17:47:24,737Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:24,746Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064044735) {}
[INFO ] 2019-08-17T17:47:24,751Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:24,754Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064044735) {}
[INFO ] 2019-08-17T17:47:24,757Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:24,778Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:24,780Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T17:47:24,780Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T17:47:24,783Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064044735) {}
[INFO ] 2019-08-17T17:47:24,785Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064044735) {}
[INFO ] 2019-08-17T17:47:24,785Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:24,785Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064044735) {}
[INFO ] 2019-08-17T17:47:24,785Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:24,788Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174724.224/nodes/1/cordapps] {}
[INFO ] 2019-08-17T17:47:24,788Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:24,788Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:24,809Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:24,809Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:24,831Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:24,836Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:24,850Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:24,852Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:24.224Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:25,069Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:25,070Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174724.224/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:25,070Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:25,071Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:25,072Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:25,072Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:25,119Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:25,125Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:25,126Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:25,126Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:25,142Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:25,142Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:25,211Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:25,214Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:25,214Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064045214) {}
[INFO ] 2019-08-17T17:47:25,215Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:25,219Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064045214) {}
[INFO ] 2019-08-17T17:47:25,222Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:25,225Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064045214) {}
[INFO ] 2019-08-17T17:47:25,228Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:25,256Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:25,260Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064045214) {}
[INFO ] 2019-08-17T17:47:25,262Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064044735) {}
[INFO ] 2019-08-17T17:47:25,263Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:25,269Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064045214) {}
[INFO ] 2019-08-17T17:47:25,269Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:25,274Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064045214) {}
[INFO ] 2019-08-17T17:47:25,274Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:25,274Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064045214) {}
[INFO ] 2019-08-17T17:47:25,274Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:25,277Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-174724.224/nodes/2/cordapps] {}
[INFO ] 2019-08-17T17:47:25,277Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:25,277Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T17:47:25,299Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:25,299Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-174724.224/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T17:47:25,321Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:25,326Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T17:47:25,342Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T17:47:25,343Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T17:47:24.224Z
      epoch=1
  } {}
[INFO ] 2019-08-17T17:47:25,588Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T17:47:25,590Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-174724.224/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T17:47:25,590Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T17:47:25,590Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T17:47:25,592Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:25,592Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:25,637Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T17:47:25,642Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T17:47:25,644Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T17:47:25,644Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T17:47:25,656Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:25,656Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:25,740Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T17:47:25,743Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T17:47:25,743Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064045743) {}
[INFO ] 2019-08-17T17:47:25,745Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:25,749Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064045743) {}
[INFO ] 2019-08-17T17:47:25,752Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T17:47:25,754Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064045743) {}
[INFO ] 2019-08-17T17:47:25,756Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:25,778Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=243E69314ADBCB7A057DC4154C524180EAE7F92520E2BB64B8C55FD8EF3C79D9 uploader=app filename=null {}
[INFO ] 2019-08-17T17:47:25,781Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064045743) {}
[INFO ] 2019-08-17T17:47:25,783Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566064044735) {}
[INFO ] 2019-08-17T17:47:25,783Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:25,787Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064045743) {}
[INFO ] 2019-08-17T17:47:25,788Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:25,791Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566064045214) {}
[INFO ] 2019-08-17T17:47:25,792Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:25,796Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064045743) {}
[INFO ] 2019-08-17T17:47:25,796Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T17:47:25,800Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064045743) {}
[INFO ] 2019-08-17T17:47:25,800Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T17:47:25,800Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566064045743) {}
[INFO ] 2019-08-17T17:47:25,800Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T17:47:25,800Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:25,800Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:25,801Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T17:47:25,801Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T17:47:26,355Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7331d0d2-5c06-4dc6-865e-e1dabc156633, invocation_id=f8eef63c-4302-4ce1-9185-de4332c4d889, invocation_timestamp=2019-08-17T17:47:25.801Z, origin=Only For Testing, session_id=f8eef63c-4302-4ce1-9185-de4332c4d889, session_timestamp=2019-08-17T17:47:25.801Z, thread-id=1070}
[INFO ] 2019-08-17T17:47:26,386Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[WARN ] 2019-08-17T17:47:26,386Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,391Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[WARN ] 2019-08-17T17:47:26,414Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,424Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7331d0d2-5c06-4dc6-865e-e1dabc156633, invocation_id=f8eef63c-4302-4ce1-9185-de4332c4d889, invocation_timestamp=2019-08-17T17:47:25.801Z, origin=Only For Testing, session_id=f8eef63c-4302-4ce1-9185-de4332c4d889, session_timestamp=2019-08-17T17:47:25.801Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,424Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7331d0d2-5c06-4dc6-865e-e1dabc156633, invocation_id=f8eef63c-4302-4ce1-9185-de4332c4d889, invocation_timestamp=2019-08-17T17:47:25.801Z, origin=Only For Testing, session_id=f8eef63c-4302-4ce1-9185-de4332c4d889, session_timestamp=2019-08-17T17:47:25.801Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,435Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7331d0d2-5c06-4dc6-865e-e1dabc156633, invocation_id=f8eef63c-4302-4ce1-9185-de4332c4d889, invocation_timestamp=2019-08-17T17:47:25.801Z, origin=Only For Testing, session_id=f8eef63c-4302-4ce1-9185-de4332c4d889, session_timestamp=2019-08-17T17:47:25.801Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,441Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[WARN ] 2019-08-17T17:47:26,441Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,444Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,448Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,450Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=8e354d53-8c0b-44b1-9901-b5e6b786d486, invocation_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, invocation_timestamp=2019-08-17T17:47:26.370Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86ea0b8b-7c03-465a-aff9-fd5f98b7935e, session_timestamp=2019-08-17T17:47:26.370Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,454Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7331d0d2-5c06-4dc6-865e-e1dabc156633, invocation_id=f8eef63c-4302-4ce1-9185-de4332c4d889, invocation_timestamp=2019-08-17T17:47:25.801Z, origin=Only For Testing, session_id=f8eef63c-4302-4ce1-9185-de4332c4d889, session_timestamp=2019-08-17T17:47:25.801Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:26,454Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=7331d0d2-5c06-4dc6-865e-e1dabc156633, invocation_id=f8eef63c-4302-4ce1-9185-de4332c4d889, invocation_timestamp=2019-08-17T17:47:25.801Z, origin=Only For Testing, session_id=f8eef63c-4302-4ce1-9185-de4332c4d889, session_timestamp=2019-08-17T17:47:25.801Z, thread-id=1070, tx_id=8C3E7445F4725D44F4927A37B0A0100ECB6FBDBBB9AF39C3364D58C2392D9C98}
[INFO ] 2019-08-17T17:47:51,899Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:52,014Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar {}
[INFO ] 2019-08-17T17:47:52,159Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:54,488Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:54,489Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar {}
[INFO ] 2019-08-17T17:47:54,514Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:54,549Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:54,549Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar {}
[INFO ] 2019-08-17T17:47:54,574Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:54,640Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:54,640Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar {}
[INFO ] 2019-08-17T17:47:54,664Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T17:47:54,711Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-17T17:47:54,738Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:54,738Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar {}
[INFO ] 2019-08-17T17:47:54,763Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:54,829Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:54,830Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar {}
[INFO ] 2019-08-17T17:47:54,855Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:54,913Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:54,914Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar {}
[INFO ] 2019-08-17T17:47:54,938Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:47:54,993Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:47:54,993Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174750.933/custom-cordapp_1_4_19f9f350-cf11-4064-85ae-2bada94a637c.jar {}
[INFO ] 2019-08-17T17:47:55,029Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:48:14,799Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174814.283/custom-cordapp_1_4_1148fe0b-4626-470d-bf89-8163432a0417.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:48:14,829Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174814.283/custom-cordapp_1_4_1148fe0b-4626-470d-bf89-8163432a0417.jar {}
[INFO ] 2019-08-17T17:48:14,886Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:49:19,575Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174919.089/custom-cordapp_1_4_0e1e18fc-41fc-4655-8738-d1845abfd508.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:49:19,606Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-174919.089/custom-cordapp_1_4_0e1e18fc-41fc-4655-8738-d1845abfd508.jar {}
[INFO ] 2019-08-17T17:49:19,658Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:50:19,029Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-175018.545/custom-cordapp_1_4_2d0ba2fa-9be1-493e-bbf0-4448c1da2640.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:50:19,061Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-175018.545/custom-cordapp_1_4_2d0ba2fa-9be1-493e-bbf0-4448c1da2640.jar {}
[INFO ] 2019-08-17T17:50:19,119Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:50:51,571Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-175050.675/custom-cordapp_1_4_e29eaf92-3351-410c-a790-b69dcab70235.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:50:51,686Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-175050.675/custom-cordapp_1_4_e29eaf92-3351-410c-a790-b69dcab70235.jar {}
[INFO ] 2019-08-17T17:50:51,813Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T17:57:57,667Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-175756.765/custom-cordapp_1_4_27295ec1-f9ec-45b8-b661-ce3d46390d83.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T17:57:57,814Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-175756.765/custom-cordapp_1_4_27295ec1-f9ec-45b8-b661-ce3d46390d83.jar {}
[INFO ] 2019-08-17T17:57:57,956Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:07:28,304Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-180727.378/custom-cordapp_1_4_7bed8d70-098c-401a-a15f-935715d4f70e.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:07:28,421Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-180727.378/custom-cordapp_1_4_7bed8d70-098c-401a-a15f-935715d4f70e.jar {}
[INFO ] 2019-08-17T18:07:28,546Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:07:45,966Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-180744.982/custom-cordapp_1_4_a626f6a9-9616-45f6-8481-983291f9bd98.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:07:46,096Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-180744.982/custom-cordapp_1_4_a626f6a9-9616-45f6-8481-983291f9bd98.jar {}
[INFO ] 2019-08-17T18:07:46,250Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:12,934Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-17T18:08:14,299Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-17T18:08:17,118Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180807.466/nodes/0/cordapps] {}
[INFO ] 2019-08-17T18:08:17,124Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:17,146Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:17,207Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:17,209Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:17,237Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T18:08:17,241Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-17T18:08:17,910Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:17,981Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:18,154Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:07.263Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:22,042Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:22,046Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180807.466/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:22,046Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:22,047Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:22,106Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:22,112Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:23,997Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:24,647Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:24,693Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:24,712Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:24,712Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:24,996Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:25,007Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:25,007Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065305007) {}
[INFO ] 2019-08-17T18:08:25,012Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:25,166Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065305007) {}
[INFO ] 2019-08-17T18:08:25,222Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:25,236Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065305007) {}
[INFO ] 2019-08-17T18:08:25,260Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:25,303Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:25,306Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T18:08:25,308Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T18:08:25,640Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065305007) {}
[INFO ] 2019-08-17T18:08:25,655Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065305007) {}
[INFO ] 2019-08-17T18:08:25,656Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:25,656Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065305007) {}
[INFO ] 2019-08-17T18:08:25,656Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:25,662Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180807.466/nodes/1/cordapps] {}
[INFO ] 2019-08-17T18:08:25,662Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:25,663Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:25,685Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:25,685Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:25,707Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:25,715Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:25,753Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:25,756Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:07.263Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:26,244Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:26,247Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180807.466/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:26,247Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:26,249Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:26,251Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:26,251Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:26,353Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:26,366Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:26,368Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:26,369Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:26,393Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:26,394Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:26,544Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:26,549Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:26,549Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065306549) {}
[INFO ] 2019-08-17T18:08:26,551Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:26,560Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065306549) {}
[INFO ] 2019-08-17T18:08:26,570Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:26,575Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065306549) {}
[INFO ] 2019-08-17T18:08:26,581Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:26,617Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:26,628Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065306549) {}
[INFO ] 2019-08-17T18:08:26,632Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065305007) {}
[INFO ] 2019-08-17T18:08:26,633Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:26,650Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065306549) {}
[INFO ] 2019-08-17T18:08:26,651Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:26,664Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065306549) {}
[INFO ] 2019-08-17T18:08:26,664Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:26,664Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065306549) {}
[INFO ] 2019-08-17T18:08:26,664Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:26,668Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180807.466/nodes/2/cordapps] {}
[INFO ] 2019-08-17T18:08:26,668Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:26,668Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:26,690Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:26,690Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180807.466/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:26,740Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:26,747Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:26,770Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:26,773Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:07.263Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:27,173Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:27,175Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180807.466/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:27,175Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:27,176Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:27,178Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:27,178Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:27,282Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:27,294Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:27,296Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:27,296Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:27,313Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:27,313Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:27,446Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:27,452Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:27,452Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065307452) {}
[INFO ] 2019-08-17T18:08:27,454Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:27,466Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065307452) {}
[INFO ] 2019-08-17T18:08:27,476Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:27,481Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065307452) {}
[INFO ] 2019-08-17T18:08:27,486Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:27,518Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:27,525Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065307452) {}
[INFO ] 2019-08-17T18:08:27,528Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065305007) {}
[INFO ] 2019-08-17T18:08:27,529Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:27,540Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065307452) {}
[INFO ] 2019-08-17T18:08:27,541Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:27,554Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065306549) {}
[INFO ] 2019-08-17T18:08:27,555Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:27,565Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065307452) {}
[INFO ] 2019-08-17T18:08:27,566Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:27,575Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065307452) {}
[INFO ] 2019-08-17T18:08:27,575Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:27,575Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065307452) {}
[INFO ] 2019-08-17T18:08:27,575Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T18:08:27,577Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:27,577Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:27,581Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:27,581Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:27,838Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=214814ca-d6f3-4231-a6f0-a03adba853ab, invocation_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, invocation_timestamp=2019-08-17T18:08:27.610Z, origin=Only For Testing, session_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, session_timestamp=2019-08-17T18:08:27.610Z, thread-id=201}
[WARN ] 2019-08-17T18:08:27,838Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=214814ca-d6f3-4231-a6f0-a03adba853ab, invocation_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, invocation_timestamp=2019-08-17T18:08:27.610Z, origin=Only For Testing, session_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, session_timestamp=2019-08-17T18:08:27.610Z, thread-id=201}
[WARN ] 2019-08-17T18:08:29,196Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=214814ca-d6f3-4231-a6f0-a03adba853ab, invocation_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, invocation_timestamp=2019-08-17T18:08:27.610Z, origin=Only For Testing, session_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, session_timestamp=2019-08-17T18:08:27.610Z, thread-id=201}
[INFO ] 2019-08-17T18:08:29,413Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[WARN ] 2019-08-17T18:08:29,425Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,459Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[WARN ] 2019-08-17T18:08:29,510Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,536Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=214814ca-d6f3-4231-a6f0-a03adba853ab, invocation_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, invocation_timestamp=2019-08-17T18:08:27.610Z, origin=Only For Testing, session_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, session_timestamp=2019-08-17T18:08:27.610Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,536Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=214814ca-d6f3-4231-a6f0-a03adba853ab, invocation_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, invocation_timestamp=2019-08-17T18:08:27.610Z, origin=Only For Testing, session_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, session_timestamp=2019-08-17T18:08:27.610Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,570Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=214814ca-d6f3-4231-a6f0-a03adba853ab, invocation_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, invocation_timestamp=2019-08-17T18:08:27.610Z, origin=Only For Testing, session_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, session_timestamp=2019-08-17T18:08:27.610Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,592Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[WARN ] 2019-08-17T18:08:29,592Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,600Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,605Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,613Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=9aee3c4a-aae3-48f3-93da-77ea01204c81, invocation_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, invocation_timestamp=2019-08-17T18:08:29.345Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2998b0e9-5c2b-4ec6-ab1e-c28e1d3d1ef4, session_timestamp=2019-08-17T18:08:29.345Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,648Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=214814ca-d6f3-4231-a6f0-a03adba853ab, invocation_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, invocation_timestamp=2019-08-17T18:08:27.610Z, origin=Only For Testing, session_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, session_timestamp=2019-08-17T18:08:27.610Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,648Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=214814ca-d6f3-4231-a6f0-a03adba853ab, invocation_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, invocation_timestamp=2019-08-17T18:08:27.610Z, origin=Only For Testing, session_id=5ae8baab-11e4-47d1-b103-a4b493fd5afd, session_timestamp=2019-08-17T18:08:27.610Z, thread-id=201, tx_id=135F49701DE7CD9F1A8007602BE4DD86B5D65CC792E424A1DC5F5573A3D203D2}
[INFO ] 2019-08-17T18:08:29,743Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180829.680/nodes/0/cordapps] {}
[INFO ] 2019-08-17T18:08:29,743Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:29,743Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:29,767Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:29,768Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:29,790Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:29,795Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:29,799Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:29,804Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:29.680Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:30,187Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:30,189Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180829.680/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:30,189Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:30,190Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:30,193Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,193Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,271Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,279Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:30,299Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:30,306Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,306Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,417Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,421Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:30,421Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065310421) {}
[INFO ] 2019-08-17T18:08:30,422Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:30,438Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065310421) {}
[INFO ] 2019-08-17T18:08:30,447Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:30,451Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065310421) {}
[INFO ] 2019-08-17T18:08:30,456Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:30,487Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:30,488Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T18:08:30,489Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T18:08:30,494Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065310421) {}
[INFO ] 2019-08-17T18:08:30,497Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065310421) {}
[INFO ] 2019-08-17T18:08:30,497Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:30,497Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065310421) {}
[INFO ] 2019-08-17T18:08:30,497Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:30,501Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180829.680/nodes/1/cordapps] {}
[INFO ] 2019-08-17T18:08:30,501Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:30,501Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:30,525Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:30,526Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:30,548Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:30,554Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:30,578Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:30,582Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:29.680Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:30,874Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:30,876Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180829.680/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:30,876Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:30,879Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:30,881Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,881Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,949Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:30,956Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:30,958Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:30,959Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:30,977Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:30,977Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:31,098Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:31,103Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:31,103Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065311103) {}
[INFO ] 2019-08-17T18:08:31,105Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:31,112Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065311103) {}
[INFO ] 2019-08-17T18:08:31,123Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:31,126Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065311103) {}
[INFO ] 2019-08-17T18:08:31,132Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:31,165Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:31,172Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065311103) {}
[INFO ] 2019-08-17T18:08:31,174Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065310421) {}
[INFO ] 2019-08-17T18:08:31,175Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:31,184Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065311103) {}
[INFO ] 2019-08-17T18:08:31,185Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:31,192Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065311103) {}
[INFO ] 2019-08-17T18:08:31,192Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:31,192Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065311103) {}
[INFO ] 2019-08-17T18:08:31,192Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:31,197Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180829.680/nodes/2/cordapps] {}
[INFO ] 2019-08-17T18:08:31,197Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:31,197Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:31,218Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:31,218Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180829.680/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:31,241Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:31,246Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:31,272Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:31,277Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:29.680Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:31,661Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:31,664Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180829.680/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:31,664Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:31,664Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:31,667Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:31,667Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:31,730Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:31,738Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:31,739Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:31,740Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:31,756Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:31,756Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:31,844Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:31,848Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:31,848Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065311848) {}
[INFO ] 2019-08-17T18:08:31,850Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:31,855Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065311848) {}
[INFO ] 2019-08-17T18:08:31,861Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:31,864Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065311848) {}
[INFO ] 2019-08-17T18:08:31,868Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:31,898Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:31,903Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065311848) {}
[INFO ] 2019-08-17T18:08:31,906Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065310421) {}
[INFO ] 2019-08-17T18:08:31,907Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:31,916Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065311848) {}
[INFO ] 2019-08-17T18:08:31,918Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:31,926Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065311103) {}
[INFO ] 2019-08-17T18:08:31,927Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:31,936Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065311848) {}
[INFO ] 2019-08-17T18:08:31,937Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:31,945Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065311848) {}
[INFO ] 2019-08-17T18:08:31,945Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:31,945Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065311848) {}
[INFO ] 2019-08-17T18:08:31,945Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T18:08:31,945Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:31,945Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:31,945Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:31,945Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:32,806Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a2920956-a7e8-4c96-a8cd-c9761a65c82b, invocation_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, invocation_timestamp=2019-08-17T18:08:31.946Z, origin=Only For Testing, session_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, session_timestamp=2019-08-17T18:08:31.946Z, thread-id=377}
[INFO ] 2019-08-17T18:08:32,848Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[WARN ] 2019-08-17T18:08:32,848Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,856Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[WARN ] 2019-08-17T18:08:32,887Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,901Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a2920956-a7e8-4c96-a8cd-c9761a65c82b, invocation_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, invocation_timestamp=2019-08-17T18:08:31.946Z, origin=Only For Testing, session_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, session_timestamp=2019-08-17T18:08:31.946Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,901Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a2920956-a7e8-4c96-a8cd-c9761a65c82b, invocation_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, invocation_timestamp=2019-08-17T18:08:31.946Z, origin=Only For Testing, session_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, session_timestamp=2019-08-17T18:08:31.946Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,915Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a2920956-a7e8-4c96-a8cd-c9761a65c82b, invocation_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, invocation_timestamp=2019-08-17T18:08:31.946Z, origin=Only For Testing, session_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, session_timestamp=2019-08-17T18:08:31.946Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,925Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[WARN ] 2019-08-17T18:08:32,925Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,930Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,935Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,939Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=c50f605d-76f7-4980-8d69-b086212d44c0, invocation_id=30b91b25-e7d1-4da5-8171-c14598931817, invocation_timestamp=2019-08-17T18:08:32.828Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30b91b25-e7d1-4da5-8171-c14598931817, session_timestamp=2019-08-17T18:08:32.828Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,946Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a2920956-a7e8-4c96-a8cd-c9761a65c82b, invocation_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, invocation_timestamp=2019-08-17T18:08:31.946Z, origin=Only For Testing, session_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, session_timestamp=2019-08-17T18:08:31.946Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:32,946Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=a2920956-a7e8-4c96-a8cd-c9761a65c82b, invocation_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, invocation_timestamp=2019-08-17T18:08:31.946Z, origin=Only For Testing, session_id=836d8ced-3787-464c-bc67-d07b0bcea7cd, session_timestamp=2019-08-17T18:08:31.946Z, thread-id=377, tx_id=5A82B7B87C807FAE9DF9052BF67827F3E846C788A12B909E4F00495911A20D55}
[INFO ] 2019-08-17T18:08:33,012Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180832.961/nodes/0/cordapps] {}
[INFO ] 2019-08-17T18:08:33,012Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:33,012Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:33,035Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:33,035Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:33,056Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:33,064Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:33,069Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:33,075Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:32.960Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:33,397Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:33,399Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180832.961/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:33,399Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:33,399Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:33,401Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:33,401Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:33,461Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:33,467Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:33,485Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:33,492Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:33,492Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:33,660Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:33,664Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:33,664Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065313664) {}
[INFO ] 2019-08-17T18:08:33,665Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:33,677Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065313664) {}
[INFO ] 2019-08-17T18:08:33,686Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:33,689Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065313664) {}
[INFO ] 2019-08-17T18:08:33,693Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:33,726Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:33,728Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T18:08:33,728Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T18:08:33,734Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065313664) {}
[INFO ] 2019-08-17T18:08:33,736Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065313664) {}
[INFO ] 2019-08-17T18:08:33,736Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:33,736Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065313664) {}
[INFO ] 2019-08-17T18:08:33,736Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:33,740Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180832.961/nodes/1/cordapps] {}
[INFO ] 2019-08-17T18:08:33,740Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:33,740Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:33,762Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:33,763Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:33,784Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:33,790Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:33,809Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:33,812Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:32.960Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:34,082Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:34,083Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180832.961/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:34,083Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:34,084Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:34,086Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:34,086Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:34,156Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:34,169Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:34,171Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:34,172Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:34,188Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:34,188Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:34,298Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:34,302Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:34,302Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065314302) {}
[INFO ] 2019-08-17T18:08:34,304Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:34,309Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065314302) {}
[INFO ] 2019-08-17T18:08:34,317Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:34,320Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065314302) {}
[INFO ] 2019-08-17T18:08:34,323Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:34,354Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:34,361Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065314302) {}
[INFO ] 2019-08-17T18:08:34,363Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065313664) {}
[INFO ] 2019-08-17T18:08:34,364Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:34,372Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065314302) {}
[INFO ] 2019-08-17T18:08:34,373Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:34,380Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065314302) {}
[INFO ] 2019-08-17T18:08:34,380Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:34,380Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065314302) {}
[INFO ] 2019-08-17T18:08:34,380Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:34,386Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180832.961/nodes/2/cordapps] {}
[INFO ] 2019-08-17T18:08:34,386Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:34,386Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:34,407Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:34,407Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180832.961/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:34,431Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:34,438Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:34,460Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:34,462Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:32.960Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:34,748Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:34,750Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180832.961/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:34,750Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:34,750Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:34,752Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:34,752Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:34,811Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:34,818Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:34,819Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:34,820Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:34,837Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:34,837Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:34,924Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:34,928Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:34,928Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065314928) {}
[INFO ] 2019-08-17T18:08:34,930Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:34,935Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065314928) {}
[INFO ] 2019-08-17T18:08:34,941Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:34,943Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065314928) {}
[INFO ] 2019-08-17T18:08:34,947Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:34,975Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:34,980Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065314928) {}
[INFO ] 2019-08-17T18:08:34,982Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065313664) {}
[INFO ] 2019-08-17T18:08:34,982Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:34,989Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065314928) {}
[INFO ] 2019-08-17T18:08:34,989Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:34,996Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065314302) {}
[INFO ] 2019-08-17T18:08:34,997Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:35,004Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065314928) {}
[INFO ] 2019-08-17T18:08:35,005Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:35,012Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065314928) {}
[INFO ] 2019-08-17T18:08:35,013Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:35,013Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065314928) {}
[INFO ] 2019-08-17T18:08:35,013Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T18:08:35,013Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:35,013Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:35,013Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:35,013Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:35,752Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=7d340d2c-a6c8-4035-b0ad-0e0178f9c534, invocation_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, invocation_timestamp=2019-08-17T18:08:35.014Z, origin=Only For Testing, session_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, session_timestamp=2019-08-17T18:08:35.014Z, thread-id=551}
[INFO ] 2019-08-17T18:08:35,786Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[WARN ] 2019-08-17T18:08:35,786Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,792Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[WARN ] 2019-08-17T18:08:35,818Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,828Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=7d340d2c-a6c8-4035-b0ad-0e0178f9c534, invocation_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, invocation_timestamp=2019-08-17T18:08:35.014Z, origin=Only For Testing, session_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, session_timestamp=2019-08-17T18:08:35.014Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,828Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=7d340d2c-a6c8-4035-b0ad-0e0178f9c534, invocation_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, invocation_timestamp=2019-08-17T18:08:35.014Z, origin=Only For Testing, session_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, session_timestamp=2019-08-17T18:08:35.014Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,840Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=7d340d2c-a6c8-4035-b0ad-0e0178f9c534, invocation_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, invocation_timestamp=2019-08-17T18:08:35.014Z, origin=Only For Testing, session_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, session_timestamp=2019-08-17T18:08:35.014Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,848Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[WARN ] 2019-08-17T18:08:35,848Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,852Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,856Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,859Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=cc2bb74e-fdfb-44b6-b25a-f79f9d36c823, invocation_id=25a29476-c50f-41ca-af22-8466ad8d1830, invocation_timestamp=2019-08-17T18:08:35.770Z, origin=O=Mock Company 1, L=London, C=GB, session_id=25a29476-c50f-41ca-af22-8466ad8d1830, session_timestamp=2019-08-17T18:08:35.770Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,866Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=7d340d2c-a6c8-4035-b0ad-0e0178f9c534, invocation_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, invocation_timestamp=2019-08-17T18:08:35.014Z, origin=Only For Testing, session_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, session_timestamp=2019-08-17T18:08:35.014Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,866Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=7d340d2c-a6c8-4035-b0ad-0e0178f9c534, invocation_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, invocation_timestamp=2019-08-17T18:08:35.014Z, origin=Only For Testing, session_id=a7b960f3-6cad-43ee-af79-37d4b1c3d2bf, session_timestamp=2019-08-17T18:08:35.014Z, thread-id=551, tx_id=115F143AB650DC4025F1E6FDDA6E4E603C23B3F8E47E9EF116BDC4D1C4224EAE}
[INFO ] 2019-08-17T18:08:35,929Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180835.878/nodes/0/cordapps] {}
[INFO ] 2019-08-17T18:08:35,929Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:35,929Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:35,951Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:35,951Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:35,972Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:35,977Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:35,981Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:35,985Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:35.878Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:36,281Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:36,284Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180835.878/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:36,284Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:36,285Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:36,286Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,286Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,343Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,350Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:36,366Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:36,372Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,372Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,466Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,469Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:36,469Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065316469) {}
[INFO ] 2019-08-17T18:08:36,470Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:36,481Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065316469) {}
[INFO ] 2019-08-17T18:08:36,487Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:36,490Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065316469) {}
[INFO ] 2019-08-17T18:08:36,493Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:36,524Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:36,525Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T18:08:36,525Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T18:08:36,531Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065316469) {}
[INFO ] 2019-08-17T18:08:36,533Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065316469) {}
[INFO ] 2019-08-17T18:08:36,533Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:36,533Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065316469) {}
[INFO ] 2019-08-17T18:08:36,533Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:36,536Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180835.878/nodes/1/cordapps] {}
[INFO ] 2019-08-17T18:08:36,537Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:36,537Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:36,559Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:36,559Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:36,581Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:36,585Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:36,598Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:36,600Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:35.878Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:36,874Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:36,875Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180835.878/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:36,875Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:36,876Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:36,877Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,877Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,930Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:36,935Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:36,936Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:36,936Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:36,952Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:36,952Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:37,036Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:37,039Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:37,039Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065317039) {}
[INFO ] 2019-08-17T18:08:37,040Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:37,046Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065317039) {}
[INFO ] 2019-08-17T18:08:37,050Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:37,053Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065317039) {}
[INFO ] 2019-08-17T18:08:37,057Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:37,090Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:37,098Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065317039) {}
[INFO ] 2019-08-17T18:08:37,101Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065316469) {}
[INFO ] 2019-08-17T18:08:37,101Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:37,109Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065317039) {}
[INFO ] 2019-08-17T18:08:37,112Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:37,121Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065317039) {}
[INFO ] 2019-08-17T18:08:37,121Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:37,121Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065317039) {}
[INFO ] 2019-08-17T18:08:37,121Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:37,125Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180835.878/nodes/2/cordapps] {}
[INFO ] 2019-08-17T18:08:37,126Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:37,126Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:37,150Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:37,150Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180835.878/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:37,172Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:37,180Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:37,199Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:37,201Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:35.878Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:37,461Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:37,463Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180835.878/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:37,463Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:37,464Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:37,466Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:37,466Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:37,523Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:37,529Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:37,530Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:37,530Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:37,544Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:37,544Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:37,626Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:37,629Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:37,629Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065317629) {}
[INFO ] 2019-08-17T18:08:37,631Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:37,635Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065317629) {}
[INFO ] 2019-08-17T18:08:37,704Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:37,707Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065317629) {}
[INFO ] 2019-08-17T18:08:37,710Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:37,738Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:37,743Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065317629) {}
[INFO ] 2019-08-17T18:08:37,746Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065316469) {}
[INFO ] 2019-08-17T18:08:37,747Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:37,753Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065317629) {}
[INFO ] 2019-08-17T18:08:37,754Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:37,761Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065317039) {}
[INFO ] 2019-08-17T18:08:37,761Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:37,767Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065317629) {}
[INFO ] 2019-08-17T18:08:37,767Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:37,773Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065317629) {}
[INFO ] 2019-08-17T18:08:37,773Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:37,773Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065317629) {}
[INFO ] 2019-08-17T18:08:37,773Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T18:08:37,773Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:37,773Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:37,773Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:37,773Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:38,452Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0550a3b0-ce35-45e1-af16-6b8c901d4123, invocation_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, invocation_timestamp=2019-08-17T18:08:37.774Z, origin=Only For Testing, session_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, session_timestamp=2019-08-17T18:08:37.774Z, thread-id=724}
[INFO ] 2019-08-17T18:08:38,478Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[WARN ] 2019-08-17T18:08:38,478Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,484Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[WARN ] 2019-08-17T18:08:38,508Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,518Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0550a3b0-ce35-45e1-af16-6b8c901d4123, invocation_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, invocation_timestamp=2019-08-17T18:08:37.774Z, origin=Only For Testing, session_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, session_timestamp=2019-08-17T18:08:37.774Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,518Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0550a3b0-ce35-45e1-af16-6b8c901d4123, invocation_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, invocation_timestamp=2019-08-17T18:08:37.774Z, origin=Only For Testing, session_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, session_timestamp=2019-08-17T18:08:37.774Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,528Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0550a3b0-ce35-45e1-af16-6b8c901d4123, invocation_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, invocation_timestamp=2019-08-17T18:08:37.774Z, origin=Only For Testing, session_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, session_timestamp=2019-08-17T18:08:37.774Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,536Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[WARN ] 2019-08-17T18:08:38,536Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,541Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,545Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,548Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=4c90c691-29d6-4cba-8869-16f19038e50e, invocation_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, invocation_timestamp=2019-08-17T18:08:38.466Z, origin=O=Mock Company 1, L=London, C=GB, session_id=41359b9b-f871-4946-8cf8-6cfc7ec3ce77, session_timestamp=2019-08-17T18:08:38.466Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,555Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0550a3b0-ce35-45e1-af16-6b8c901d4123, invocation_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, invocation_timestamp=2019-08-17T18:08:37.774Z, origin=Only For Testing, session_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, session_timestamp=2019-08-17T18:08:37.774Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,555Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0550a3b0-ce35-45e1-af16-6b8c901d4123, invocation_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, invocation_timestamp=2019-08-17T18:08:37.774Z, origin=Only For Testing, session_id=d92d7aed-ee7e-41cb-8cd6-f94ded03ad81, session_timestamp=2019-08-17T18:08:37.774Z, thread-id=724, tx_id=B19E1B52E70390E652FCBD01C7171EE1A413E9E1F948BCFDF087FDE814101721}
[INFO ] 2019-08-17T18:08:38,617Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180838.568/nodes/0/cordapps] {}
[INFO ] 2019-08-17T18:08:38,617Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:38,618Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:38,638Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:38,639Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:38,661Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:38,665Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:38,668Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:38,671Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:38.568Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:38,946Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:38,947Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180838.568/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:38,947Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:38,948Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:38,949Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:38,949Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:39,007Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:39,012Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:39,028Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:39,034Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:39,034Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:39,114Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:39,117Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:39,117Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065319117) {}
[INFO ] 2019-08-17T18:08:39,119Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:39,131Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065319117) {}
[INFO ] 2019-08-17T18:08:39,139Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:39,142Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065319117) {}
[INFO ] 2019-08-17T18:08:39,148Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:39,211Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:39,213Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T18:08:39,213Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T18:08:39,216Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065319117) {}
[INFO ] 2019-08-17T18:08:39,219Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065319117) {}
[INFO ] 2019-08-17T18:08:39,219Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:39,219Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065319117) {}
[INFO ] 2019-08-17T18:08:39,219Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:39,221Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180838.568/nodes/1/cordapps] {}
[INFO ] 2019-08-17T18:08:39,221Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:39,221Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:39,242Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:39,243Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:39,264Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:39,269Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:39,283Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:39,285Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:38.568Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:39,515Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:39,516Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180838.568/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:39,516Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:39,517Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:39,519Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:39,519Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:39,568Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:39,573Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:39,574Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:39,575Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:39,586Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:39,586Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:39,655Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:39,659Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:39,659Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065319659) {}
[INFO ] 2019-08-17T18:08:39,660Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:39,664Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065319659) {}
[INFO ] 2019-08-17T18:08:39,667Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:39,669Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065319659) {}
[INFO ] 2019-08-17T18:08:39,672Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:39,700Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:39,703Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065319659) {}
[INFO ] 2019-08-17T18:08:39,704Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065319117) {}
[INFO ] 2019-08-17T18:08:39,705Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:39,709Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065319659) {}
[INFO ] 2019-08-17T18:08:39,710Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:39,715Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065319659) {}
[INFO ] 2019-08-17T18:08:39,715Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:39,715Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065319659) {}
[INFO ] 2019-08-17T18:08:39,715Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:39,717Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180838.568/nodes/2/cordapps] {}
[INFO ] 2019-08-17T18:08:39,718Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:39,718Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:39,740Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:39,741Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180838.568/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:39,757Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:39,762Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:39,779Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:39,781Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:38.568Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:40,016Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:40,017Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180838.568/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:40,017Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:40,018Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:40,020Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:40,020Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:40,080Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:40,087Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:40,088Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:40,089Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:40,101Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:40,101Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:40,181Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:40,185Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:40,185Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065320185) {}
[INFO ] 2019-08-17T18:08:40,186Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:40,190Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065320185) {}
[INFO ] 2019-08-17T18:08:40,194Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:40,197Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065320185) {}
[INFO ] 2019-08-17T18:08:40,201Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:40,228Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:40,232Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065320185) {}
[INFO ] 2019-08-17T18:08:40,233Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065319117) {}
[INFO ] 2019-08-17T18:08:40,234Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:40,240Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065320185) {}
[INFO ] 2019-08-17T18:08:40,241Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:40,245Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065319659) {}
[INFO ] 2019-08-17T18:08:40,246Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:40,251Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065320185) {}
[INFO ] 2019-08-17T18:08:40,252Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:40,257Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065320185) {}
[INFO ] 2019-08-17T18:08:40,257Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:40,257Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065320185) {}
[INFO ] 2019-08-17T18:08:40,257Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T18:08:40,257Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:40,258Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:40,258Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:40,258Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:41,245Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=7911206f-948e-4511-b41b-e9810a1cbb2a, invocation_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, invocation_timestamp=2019-08-17T18:08:40.259Z, origin=Only For Testing, session_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, session_timestamp=2019-08-17T18:08:40.259Z, thread-id=897}
[INFO ] 2019-08-17T18:08:41,272Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[WARN ] 2019-08-17T18:08:41,272Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,278Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[WARN ] 2019-08-17T18:08:41,299Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,308Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=7911206f-948e-4511-b41b-e9810a1cbb2a, invocation_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, invocation_timestamp=2019-08-17T18:08:40.259Z, origin=Only For Testing, session_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, session_timestamp=2019-08-17T18:08:40.259Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,308Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=7911206f-948e-4511-b41b-e9810a1cbb2a, invocation_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, invocation_timestamp=2019-08-17T18:08:40.259Z, origin=Only For Testing, session_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, session_timestamp=2019-08-17T18:08:40.259Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,316Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=7911206f-948e-4511-b41b-e9810a1cbb2a, invocation_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, invocation_timestamp=2019-08-17T18:08:40.259Z, origin=Only For Testing, session_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, session_timestamp=2019-08-17T18:08:40.259Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,323Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[WARN ] 2019-08-17T18:08:41,323Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,326Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,329Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,331Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=64475075-018f-4039-9ad5-ded52744c45e, invocation_id=e1440c63-19d8-48c3-bb28-123abdebaae2, invocation_timestamp=2019-08-17T18:08:41.262Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e1440c63-19d8-48c3-bb28-123abdebaae2, session_timestamp=2019-08-17T18:08:41.262Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,335Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=7911206f-948e-4511-b41b-e9810a1cbb2a, invocation_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, invocation_timestamp=2019-08-17T18:08:40.259Z, origin=Only For Testing, session_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, session_timestamp=2019-08-17T18:08:40.259Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,335Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=7911206f-948e-4511-b41b-e9810a1cbb2a, invocation_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, invocation_timestamp=2019-08-17T18:08:40.259Z, origin=Only For Testing, session_id=e708d0e7-a473-4ae7-bd44-c2487c345ef3, session_timestamp=2019-08-17T18:08:40.259Z, thread-id=897, tx_id=B6CE9B444C1CC19C2FF3F6DA1ACF3A25B57B50FE7D2C8F4FF899E0573E5C84CA}
[INFO ] 2019-08-17T18:08:41,386Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180841.345/nodes/0/cordapps] {}
[INFO ] 2019-08-17T18:08:41,386Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:41,387Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:41,408Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:41,408Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:41,430Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:41,435Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:41,438Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:41,442Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:41.345Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:41,720Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:41,721Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180841.345/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:41,721Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:41,721Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:41,722Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:41,722Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:41,773Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:41,779Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:41,794Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:41,800Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:41,800Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:41,872Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T18:08:41,877Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:41,877Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065321877) {}
[INFO ] 2019-08-17T18:08:41,878Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:41,887Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065321877) {}
[INFO ] 2019-08-17T18:08:41,894Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:41,899Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065321877) {}
[INFO ] 2019-08-17T18:08:41,902Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:41,928Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:41,929Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T18:08:41,930Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T18:08:41,933Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065321877) {}
[INFO ] 2019-08-17T18:08:41,935Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065321877) {}
[INFO ] 2019-08-17T18:08:41,935Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:41,935Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065321877) {}
[INFO ] 2019-08-17T18:08:41,935Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:41,938Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180841.345/nodes/1/cordapps] {}
[INFO ] 2019-08-17T18:08:41,938Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:41,938Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:41,958Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:41,959Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:41,974Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:41,978Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:41,990Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:41,991Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:41.345Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:42,194Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:42,196Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180841.345/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:42,196Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:42,197Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:42,198Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:42,198Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:42,249Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:42,255Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:42,257Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:42,257Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:42,274Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:42,274Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:42,347Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:42,350Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:42,350Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065322350) {}
[INFO ] 2019-08-17T18:08:42,351Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:42,356Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065322350) {}
[INFO ] 2019-08-17T18:08:42,359Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:42,362Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065322350) {}
[INFO ] 2019-08-17T18:08:42,365Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:42,391Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:42,395Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065322350) {}
[INFO ] 2019-08-17T18:08:42,396Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065321877) {}
[INFO ] 2019-08-17T18:08:42,396Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:42,401Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065322350) {}
[INFO ] 2019-08-17T18:08:42,401Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:42,405Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065322350) {}
[INFO ] 2019-08-17T18:08:42,405Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:42,405Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065322350) {}
[INFO ] 2019-08-17T18:08:42,405Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:42,408Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-180841.345/nodes/2/cordapps] {}
[INFO ] 2019-08-17T18:08:42,409Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:08:42,409Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T18:08:42,431Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:42,431Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-180841.345/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T18:08:42,454Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:08:42,460Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T18:08:42,473Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T18:08:42,475Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T18:08:41.345Z
      epoch=1
  } {}
[INFO ] 2019-08-17T18:08:42,755Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T18:08:42,756Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-180841.345/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T18:08:42,756Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T18:08:42,757Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T18:08:42,758Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:42,758Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:42,810Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T18:08:42,819Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T18:08:42,820Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T18:08:42,820Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T18:08:42,832Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:42,832Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:42,897Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T18:08:42,900Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T18:08:42,900Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065322900) {}
[INFO ] 2019-08-17T18:08:42,902Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:42,905Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065322900) {}
[INFO ] 2019-08-17T18:08:42,909Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T18:08:42,912Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065322900) {}
[INFO ] 2019-08-17T18:08:42,915Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:42,943Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6F59CA2F65116E6806B3D1E42FD5C41D9FC2437CBB44F8DA8FE7D23F24B71F1C uploader=app filename=null {}
[INFO ] 2019-08-17T18:08:42,949Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065322900) {}
[INFO ] 2019-08-17T18:08:42,951Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566065321877) {}
[INFO ] 2019-08-17T18:08:42,952Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:42,957Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065322900) {}
[INFO ] 2019-08-17T18:08:42,957Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:42,962Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566065322350) {}
[INFO ] 2019-08-17T18:08:42,962Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:42,967Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065322900) {}
[INFO ] 2019-08-17T18:08:42,967Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T18:08:42,971Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065322900) {}
[INFO ] 2019-08-17T18:08:42,971Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T18:08:42,971Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566065322900) {}
[INFO ] 2019-08-17T18:08:42,971Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T18:08:42,972Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:42,972Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:42,972Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T18:08:42,972Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T18:08:43,536Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=a6200b61-d8ed-481d-8e96-49103923da44, invocation_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, invocation_timestamp=2019-08-17T18:08:42.973Z, origin=Only For Testing, session_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, session_timestamp=2019-08-17T18:08:42.973Z, thread-id=1070}
[INFO ] 2019-08-17T18:08:43,561Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[WARN ] 2019-08-17T18:08:43,561Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,567Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[WARN ] 2019-08-17T18:08:43,589Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,599Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=a6200b61-d8ed-481d-8e96-49103923da44, invocation_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, invocation_timestamp=2019-08-17T18:08:42.973Z, origin=Only For Testing, session_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, session_timestamp=2019-08-17T18:08:42.973Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,599Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=a6200b61-d8ed-481d-8e96-49103923da44, invocation_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, invocation_timestamp=2019-08-17T18:08:42.973Z, origin=Only For Testing, session_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, session_timestamp=2019-08-17T18:08:42.973Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,607Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=a6200b61-d8ed-481d-8e96-49103923da44, invocation_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, invocation_timestamp=2019-08-17T18:08:42.973Z, origin=Only For Testing, session_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, session_timestamp=2019-08-17T18:08:42.973Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,614Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[WARN ] 2019-08-17T18:08:43,614Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,617Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,621Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,623Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=496368cc-4433-4b90-bd41-c6241dec9f72, invocation_id=6a95608f-896b-443d-b896-16ab961b8360, invocation_timestamp=2019-08-17T18:08:43.551Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6a95608f-896b-443d-b896-16ab961b8360, session_timestamp=2019-08-17T18:08:43.551Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,628Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=a6200b61-d8ed-481d-8e96-49103923da44, invocation_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, invocation_timestamp=2019-08-17T18:08:42.973Z, origin=Only For Testing, session_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, session_timestamp=2019-08-17T18:08:42.973Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:08:43,628Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=a6200b61-d8ed-481d-8e96-49103923da44, invocation_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, invocation_timestamp=2019-08-17T18:08:42.973Z, origin=Only For Testing, session_id=806ec5a3-8b52-425e-af44-3f08aaacdc56, session_timestamp=2019-08-17T18:08:42.973Z, thread-id=1070, tx_id=9290A57B2FBCD1A5E75BEB089A1A53A8267C54FAA86AF18B7BC9CA04FF864C1E}
[INFO ] 2019-08-17T18:10:10,441Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:10,560Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar {}
[INFO ] 2019-08-17T18:10:10,646Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:10,648Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar {}
[INFO ] 2019-08-17T18:10:10,698Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T18:10:10,703Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-17T18:10:12,735Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:12,735Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar {}
[INFO ] 2019-08-17T18:10:12,756Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:12,757Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar {}
[INFO ] 2019-08-17T18:10:12,779Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:12,803Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:12,803Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar {}
[INFO ] 2019-08-17T18:10:12,821Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:12,821Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar {}
[INFO ] 2019-08-17T18:10:12,845Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:12,902Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:12,903Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar {}
[INFO ] 2019-08-17T18:10:12,921Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:12,923Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar {}
[INFO ] 2019-08-17T18:10:12,946Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T18:10:12,987Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[INFO ] 2019-08-17T18:10:12,991Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:12,991Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar {}
[INFO ] 2019-08-17T18:10:13,008Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:13,008Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar {}
[INFO ] 2019-08-17T18:10:13,031Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:13,067Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:13,067Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar {}
[INFO ] 2019-08-17T18:10:13,083Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:13,083Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar {}
[INFO ] 2019-08-17T18:10:13,117Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:13,155Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:13,155Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar {}
[INFO ] 2019-08-17T18:10:13,177Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:13,180Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar {}
[INFO ] 2019-08-17T18:10:13,211Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:13,286Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:13,287Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_873388eb-7106-4cf6-982c-be932887eb56.jar {}
[INFO ] 2019-08-17T18:10:13,303Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:13,304Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181009.947/custom-cordapp_1_4_b7e27d58-5ddb-4e16-a231-772c713e92b9.jar {}
[INFO ] 2019-08-17T18:10:13,327Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:45,871Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:45,992Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar {}
[INFO ] 2019-08-17T18:10:46,138Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T18:10:49,332Z [main] internal.Verifier. - Error validating transaction A5A8FE30018FDF156EB32775C36291D6065EB35A925CC9D5C16D26E86529F6D6. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:49,340Z [main] internal.Verifier. - Error validating transaction A5A8FE30018FDF156EB32775C36291D6065EB35A925CC9D5C16D26E86529F6D6. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:49,356Z [main] internal.Verifier. - Error validating transaction A5A8FE30018FDF156EB32775C36291D6065EB35A925CC9D5C16D26E86529F6D6. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-17T18:10:49,406Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:49,406Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar {}
[INFO ] 2019-08-17T18:10:49,465Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T18:10:49,516Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:49,516Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar {}
[INFO ] 2019-08-17T18:10:49,540Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T18:10:49,616Z [main] contracts.AttachmentConstraint. - Found state bootcamp.contracts.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2019-08-17T18:10:50,472Z [main] internal.Verifier. - Error validating transaction ED377418ADEBE628A186C58813112A8D496EBFB9B25037BE015109AB06C37F49. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:32) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:50,495Z [main] internal.Verifier. - Error validating transaction 3ECE38F884651CD0AC2E4684C1249D83648FA39BDA62FC6A5FA475EB8BBBE0D5. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:50,503Z [main] internal.Verifier. - Error validating transaction 3ECE38F884651CD0AC2E4684C1249D83648FA39BDA62FC6A5FA475EB8BBBE0D5. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:50,516Z [main] internal.Verifier. - Error validating transaction 3ECE38F884651CD0AC2E4684C1249D83648FA39BDA62FC6A5FA475EB8BBBE0D5. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-17T18:10:50,543Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:50,544Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar {}
[INFO ] 2019-08-17T18:10:50,569Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T18:10:50,629Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T18:10:50,637Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T18:10:51,357Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T18:10:51,357Z [main] internal.Verifier. - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.contracts.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-17T18:10:51,357Z [main] internal.Verifier. - Error validating transaction BE960B4993AF5599F3C598458B083A82EC54C07843FF4FBFC20554EBF9F06A28. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-17T18:10:51,359Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-17T18:10:51,359Z [main] internal.Verifier. - Error validating transaction BE960B4993AF5599F3C598458B083A82EC54C07843FF4FBFC20554EBF9F06A28. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-17T18:10:51,362Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T18:10:51,368Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-17T18:10:51,368Z [main] internal.Verifier. - Error validating transaction BE960B4993AF5599F3C598458B083A82EC54C07843FF4FBFC20554EBF9F06A28. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-17T18:10:51,400Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:51,400Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar {}
[INFO ] 2019-08-17T18:10:51,426Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T18:10:52,031Z [main] internal.Verifier. - Error validating transaction E6E06E6619DFC7AECD2BED793A4FF0D6D89074F367FEE88D86FFB16B875EB8E9. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,033Z [main] internal.Verifier. - Error validating transaction E6E06E6619DFC7AECD2BED793A4FF0D6D89074F367FEE88D86FFB16B875EB8E9. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,041Z [main] internal.Verifier. - Error validating transaction E6E06E6619DFC7AECD2BED793A4FF0D6D89074F367FEE88D86FFB16B875EB8E9. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,054Z [main] internal.Verifier. - Error validating transaction 5BE325CFD42A0935288FE2724DA5A68CE67D72A8511B0AC631DE4B30DBFB605C. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,057Z [main] internal.Verifier. - Error validating transaction 5BE325CFD42A0935288FE2724DA5A68CE67D72A8511B0AC631DE4B30DBFB605C. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,065Z [main] internal.Verifier. - Error validating transaction 5BE325CFD42A0935288FE2724DA5A68CE67D72A8511B0AC631DE4B30DBFB605C. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-17T18:10:52,102Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:52,102Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar {}
[INFO ] 2019-08-17T18:10:52,125Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T18:10:52,752Z [main] internal.Verifier. - Error validating transaction 6EF91D3C8A181E73944D507C5E1AEF80588948028B4A1B547CF4522CA097C8DE. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,755Z [main] internal.Verifier. - Error validating transaction 6EF91D3C8A181E73944D507C5E1AEF80588948028B4A1B547CF4522CA097C8DE. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,762Z [main] internal.Verifier. - Error validating transaction 6EF91D3C8A181E73944D507C5E1AEF80588948028B4A1B547CF4522CA097C8DE. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,769Z [main] internal.Verifier. - Error validating transaction 4786E67495C363D143DCE44A1EEAF41B0E6DE5BAB9890ED370023DCE987ECF16. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,772Z [main] internal.Verifier. - Error validating transaction 4786E67495C363D143DCE44A1EEAF41B0E6DE5BAB9890ED370023DCE987ECF16. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:52,779Z [main] internal.Verifier. - Error validating transaction 4786E67495C363D143DCE44A1EEAF41B0E6DE5BAB9890ED370023DCE987ECF16. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-17T18:10:52,810Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:52,810Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar {}
[INFO ] 2019-08-17T18:10:52,833Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T18:10:53,412Z [main] internal.Verifier. - Error validating transaction 209E99ADE6FD888526C35D5AED6C9CBF09ED5D31DD4AEDDA03F765DAC49FA9A7. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:53,415Z [main] internal.Verifier. - Error validating transaction 209E99ADE6FD888526C35D5AED6C9CBF09ED5D31DD4AEDDA03F765DAC49FA9A7. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:53,421Z [main] internal.Verifier. - Error validating transaction 209E99ADE6FD888526C35D5AED6C9CBF09ED5D31DD4AEDDA03F765DAC49FA9A7. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-17T18:10:53,442Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T18:10:53,442Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-181045.427/custom-cordapp_1_4_9bfba8ab-9210-4397-82a2-821b6fb7539c.jar {}
[INFO ] 2019-08-17T18:10:53,465Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T18:10:54,472Z [main] internal.Verifier. - Error validating transaction CD121F60A779A5610E79D273D25B0FCE8B924CEC3A4F8F10169B28670C0613A3. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:54,476Z [main] internal.Verifier. - Error validating transaction CD121F60A779A5610E79D273D25B0FCE8B924CEC3A4F8F10169B28670C0613A3. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-17T18:10:54,483Z [main] internal.Verifier. - Error validating transaction CD121F60A779A5610E79D273D25B0FCE8B924CEC3A4F8F10169B28670C0613A3. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-17T20:34:22,583Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:22,700Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar {}
[INFO ] 2019-08-17T20:34:22,832Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:34:26,086Z [Test worker] internal.Verifier. - Error validating transaction A8FDF7634C610DEB44AA49B6E9C873BA989FE7F35F56C0438795A8B49D28EEF5. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:26,093Z [Test worker] internal.Verifier. - Error validating transaction A8FDF7634C610DEB44AA49B6E9C873BA989FE7F35F56C0438795A8B49D28EEF5. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:26,111Z [Test worker] internal.Verifier. - Error validating transaction A8FDF7634C610DEB44AA49B6E9C873BA989FE7F35F56C0438795A8B49D28EEF5. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:34:26,157Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:26,157Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar {}
[INFO ] 2019-08-17T20:34:26,184Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:26,231Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:26,231Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar {}
[INFO ] 2019-08-17T20:34:26,254Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T20:34:26,326Z [Test worker] contracts.AttachmentConstraint. - Found state bootcamp.contracts.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2019-08-17T20:34:27,128Z [Test worker] internal.Verifier. - Error validating transaction C11A5185AB61E13D2D3695002E6B3FD3384A29F5E88AFD99866934037F8E6460. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:32) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:27,154Z [Test worker] internal.Verifier. - Error validating transaction E7549976602BF421B5A64019665DA818B131B3A592884E2282B69F7DD4F80716. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:27,162Z [Test worker] internal.Verifier. - Error validating transaction E7549976602BF421B5A64019665DA818B131B3A592884E2282B69F7DD4F80716. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:27,176Z [Test worker] internal.Verifier. - Error validating transaction E7549976602BF421B5A64019665DA818B131B3A592884E2282B69F7DD4F80716. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:34:27,209Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:27,209Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar {}
[INFO ] 2019-08-17T20:34:27,233Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T20:34:27,290Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T20:34:27,301Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T20:34:28,116Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T20:34:28,116Z [Test worker] internal.Verifier. - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.contracts.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-17T20:34:28,116Z [Test worker] internal.Verifier. - Error validating transaction 7395724BA6EC7A96C935874EC9AEAAF306584F3679A280EDB4BAABB072F7FE38. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[WARN ] 2019-08-17T20:34:28,118Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-17T20:34:28,119Z [Test worker] internal.Verifier. - Error validating transaction 7395724BA6EC7A96C935874EC9AEAAF306584F3679A280EDB4BAABB072F7FE38. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[WARN ] 2019-08-17T20:34:28,121Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T20:34:28,126Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-17T20:34:28,127Z [Test worker] internal.Verifier. - Error validating transaction 7395724BA6EC7A96C935874EC9AEAAF306584F3679A280EDB4BAABB072F7FE38. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:34:28,157Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:28,158Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar {}
[INFO ] 2019-08-17T20:34:28,182Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:34:28,811Z [Test worker] internal.Verifier. - Error validating transaction 122993B8D46BBCDA8B3C1E132B7C3ED1CEAD1463EFD1EBAE183E1A35EBDDF785. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:28,813Z [Test worker] internal.Verifier. - Error validating transaction 122993B8D46BBCDA8B3C1E132B7C3ED1CEAD1463EFD1EBAE183E1A35EBDDF785. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:28,823Z [Test worker] internal.Verifier. - Error validating transaction 122993B8D46BBCDA8B3C1E132B7C3ED1CEAD1463EFD1EBAE183E1A35EBDDF785. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:28,834Z [Test worker] internal.Verifier. - Error validating transaction F1A6B0AE49930940507A9DE5FA2326A49D01AF9AFB369C7539C00D1AD3FE6C76. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:28,836Z [Test worker] internal.Verifier. - Error validating transaction F1A6B0AE49930940507A9DE5FA2326A49D01AF9AFB369C7539C00D1AD3FE6C76. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:28,843Z [Test worker] internal.Verifier. - Error validating transaction F1A6B0AE49930940507A9DE5FA2326A49D01AF9AFB369C7539C00D1AD3FE6C76. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:34:28,890Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:28,890Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar {}
[INFO ] 2019-08-17T20:34:28,913Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:34:29,548Z [Test worker] internal.Verifier. - Error validating transaction 7E6FDD6031545AEF81C96C2E04FCDA6575F84394B298ED019D24E1988DE7617C. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:29,550Z [Test worker] internal.Verifier. - Error validating transaction 7E6FDD6031545AEF81C96C2E04FCDA6575F84394B298ED019D24E1988DE7617C. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:29,557Z [Test worker] internal.Verifier. - Error validating transaction 7E6FDD6031545AEF81C96C2E04FCDA6575F84394B298ED019D24E1988DE7617C. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:29,567Z [Test worker] internal.Verifier. - Error validating transaction E0454CD45312631FC4BB43BBA36D7765ECEB479AE5DD8C98C04DD7727D46FC8D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:29,570Z [Test worker] internal.Verifier. - Error validating transaction E0454CD45312631FC4BB43BBA36D7765ECEB479AE5DD8C98C04DD7727D46FC8D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:29,577Z [Test worker] internal.Verifier. - Error validating transaction E0454CD45312631FC4BB43BBA36D7765ECEB479AE5DD8C98C04DD7727D46FC8D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:34:29,616Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:29,616Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar {}
[INFO ] 2019-08-17T20:34:29,639Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:34:30,634Z [Test worker] internal.Verifier. - Error validating transaction 9B1ADB1E708E84576EE97E31C6E264C184243BD35C51969FD2B3CBFF9F6F40D5. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:30,635Z [Test worker] internal.Verifier. - Error validating transaction 9B1ADB1E708E84576EE97E31C6E264C184243BD35C51969FD2B3CBFF9F6F40D5. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:30,641Z [Test worker] internal.Verifier. - Error validating transaction 9B1ADB1E708E84576EE97E31C6E264C184243BD35C51969FD2B3CBFF9F6F40D5. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:34:30,662Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:30,662Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-203422.118/custom-cordapp_1_4_52b02973-831a-473f-a7cf-0e576066deec.jar {}
[INFO ] 2019-08-17T20:34:30,683Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:34:31,272Z [Test worker] internal.Verifier. - Error validating transaction 4CB5DE0853BEF22CE7337A6CD47B886BA87B36D211A7343CAC859C7B31E47958. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:31,276Z [Test worker] internal.Verifier. - Error validating transaction 4CB5DE0853BEF22CE7337A6CD47B886BA87B36D211A7343CAC859C7B31E47958. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:34:31,285Z [Test worker] internal.Verifier. - Error validating transaction 4CB5DE0853BEF22CE7337A6CD47B886BA87B36D211A7343CAC859C7B31E47958. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:34:33,368Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-17T20:34:35,126Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203431.327/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:34:35,128Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:35,132Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:35,156Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:35,156Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Commands$Issue. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Companion. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.states.TokenState. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Commands. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowInitiator. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowResponder. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[WARN ] 2019-08-17T20:34:35,178Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowResponder$call$signTransactionFlow$1. {}
[INFO ] 2019-08-17T20:34:35,777Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:35,844Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:35,964Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:31.318Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:39,338Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:39,342Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203431.327/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:39,342Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:39,342Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:39,390Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:39,394Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:41,216Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:41,800Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:41,853Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:41,869Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:41,869Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:42,144Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:42,153Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:42,153Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074082153) {}
[INFO ] 2019-08-17T20:34:42,156Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:42,302Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074082153) {}
[INFO ] 2019-08-17T20:34:42,353Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:42,372Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074082153) {}
[INFO ] 2019-08-17T20:34:42,398Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:42,420Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:42,423Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:34:42,426Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:34:42,754Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074082153) {}
[INFO ] 2019-08-17T20:34:42,769Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074082153) {}
[INFO ] 2019-08-17T20:34:42,770Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:42,770Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074082153) {}
[INFO ] 2019-08-17T20:34:42,770Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:42,777Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203431.327/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:34:42,777Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:42,777Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:42,798Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:42,799Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:42,822Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:42,828Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:42,856Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:42,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:31.318Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:43,272Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:43,273Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203431.327/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:43,274Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:43,274Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:43,276Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:43,276Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:43,368Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:43,379Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:43,380Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:43,381Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:43,402Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:43,402Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:43,517Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:43,522Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:43,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074083522) {}
[INFO ] 2019-08-17T20:34:43,524Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:43,530Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074083522) {}
[INFO ] 2019-08-17T20:34:43,537Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:43,540Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074083522) {}
[INFO ] 2019-08-17T20:34:43,545Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:43,576Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:43,585Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074083522) {}
[INFO ] 2019-08-17T20:34:43,587Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074082153) {}
[INFO ] 2019-08-17T20:34:43,589Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:43,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074083522) {}
[INFO ] 2019-08-17T20:34:43,598Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:43,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074083522) {}
[INFO ] 2019-08-17T20:34:43,608Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:43,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074083522) {}
[INFO ] 2019-08-17T20:34:43,608Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:43,612Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203431.327/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:34:43,613Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:43,613Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:43,635Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:43,635Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203431.327/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:43,657Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:43,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:43,686Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:43,688Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:31.318Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:44,054Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:44,056Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203431.327/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:44,056Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:44,057Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:44,059Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:44,059Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:44,137Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:44,146Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:44,147Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:44,147Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:44,165Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:44,165Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:44,269Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:44,273Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:44,273Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074084273) {}
[INFO ] 2019-08-17T20:34:44,275Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:44,282Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074084273) {}
[INFO ] 2019-08-17T20:34:44,287Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:44,290Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074084273) {}
[INFO ] 2019-08-17T20:34:44,295Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:44,324Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:44,332Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074084273) {}
[INFO ] 2019-08-17T20:34:44,335Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074082153) {}
[INFO ] 2019-08-17T20:34:44,335Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:44,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074084273) {}
[INFO ] 2019-08-17T20:34:44,345Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:44,355Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074083522) {}
[INFO ] 2019-08-17T20:34:44,357Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:44,366Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074084273) {}
[INFO ] 2019-08-17T20:34:44,367Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:44,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074084273) {}
[INFO ] 2019-08-17T20:34:44,375Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:44,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074084273) {}
[INFO ] 2019-08-17T20:34:44,375Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:34:44,376Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:44,376Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:44,380Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:44,380Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:44,583Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b77296ff-ea16-4df3-9cf6-09fecb48ea9b, invocation_id=8f9aeae4-5416-4061-abef-e691fa46318a, invocation_timestamp=2019-08-17T20:34:44.401Z, origin=Only For Testing, session_id=8f9aeae4-5416-4061-abef-e691fa46318a, session_timestamp=2019-08-17T20:34:44.401Z, thread-id=539}
[WARN ] 2019-08-17T20:34:44,583Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b77296ff-ea16-4df3-9cf6-09fecb48ea9b, invocation_id=8f9aeae4-5416-4061-abef-e691fa46318a, invocation_timestamp=2019-08-17T20:34:44.401Z, origin=Only For Testing, session_id=8f9aeae4-5416-4061-abef-e691fa46318a, session_timestamp=2019-08-17T20:34:44.401Z, thread-id=539}
[WARN ] 2019-08-17T20:34:45,462Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b77296ff-ea16-4df3-9cf6-09fecb48ea9b, invocation_id=8f9aeae4-5416-4061-abef-e691fa46318a, invocation_timestamp=2019-08-17T20:34:44.401Z, origin=Only For Testing, session_id=8f9aeae4-5416-4061-abef-e691fa46318a, session_timestamp=2019-08-17T20:34:44.401Z, thread-id=539}
[INFO ] 2019-08-17T20:34:45,637Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[WARN ] 2019-08-17T20:34:45,648Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,673Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[WARN ] 2019-08-17T20:34:45,724Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,747Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b77296ff-ea16-4df3-9cf6-09fecb48ea9b, invocation_id=8f9aeae4-5416-4061-abef-e691fa46318a, invocation_timestamp=2019-08-17T20:34:44.401Z, origin=Only For Testing, session_id=8f9aeae4-5416-4061-abef-e691fa46318a, session_timestamp=2019-08-17T20:34:44.401Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,747Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b77296ff-ea16-4df3-9cf6-09fecb48ea9b, invocation_id=8f9aeae4-5416-4061-abef-e691fa46318a, invocation_timestamp=2019-08-17T20:34:44.401Z, origin=Only For Testing, session_id=8f9aeae4-5416-4061-abef-e691fa46318a, session_timestamp=2019-08-17T20:34:44.401Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,771Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b77296ff-ea16-4df3-9cf6-09fecb48ea9b, invocation_id=8f9aeae4-5416-4061-abef-e691fa46318a, invocation_timestamp=2019-08-17T20:34:44.401Z, origin=Only For Testing, session_id=8f9aeae4-5416-4061-abef-e691fa46318a, session_timestamp=2019-08-17T20:34:44.401Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,789Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[WARN ] 2019-08-17T20:34:45,789Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,796Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,801Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,804Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=498805f0-d704-45e3-bc4f-089a17bec73f, invocation_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, invocation_timestamp=2019-08-17T20:34:45.582Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce68f5ce-c5a7-4238-bf4b-80b75e42f0f2, session_timestamp=2019-08-17T20:34:45.582Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,832Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b77296ff-ea16-4df3-9cf6-09fecb48ea9b, invocation_id=8f9aeae4-5416-4061-abef-e691fa46318a, invocation_timestamp=2019-08-17T20:34:44.401Z, origin=Only For Testing, session_id=8f9aeae4-5416-4061-abef-e691fa46318a, session_timestamp=2019-08-17T20:34:44.401Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,832Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b77296ff-ea16-4df3-9cf6-09fecb48ea9b, invocation_id=8f9aeae4-5416-4061-abef-e691fa46318a, invocation_timestamp=2019-08-17T20:34:44.401Z, origin=Only For Testing, session_id=8f9aeae4-5416-4061-abef-e691fa46318a, session_timestamp=2019-08-17T20:34:44.401Z, thread-id=539, tx_id=FAF885180E95C73FD36D195D7F1F2F2E106054F1A5B6008CE742B2261C3DF9AE}
[INFO ] 2019-08-17T20:34:45,904Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203445.852/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:34:45,904Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:45,904Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:45,925Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:45,925Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:45,946Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:45,950Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:45,953Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:45,958Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:45.852Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:46,282Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:46,284Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203445.852/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:46,284Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:46,284Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:46,286Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:46,286Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:46,354Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:46,361Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:46,383Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:46,390Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:46,390Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:46,496Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:46,500Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:46,500Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074086500) {}
[INFO ] 2019-08-17T20:34:46,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:46,513Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074086500) {}
[INFO ] 2019-08-17T20:34:46,521Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:46,524Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074086500) {}
[INFO ] 2019-08-17T20:34:46,530Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:46,557Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:46,559Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:34:46,559Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:34:46,565Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074086500) {}
[INFO ] 2019-08-17T20:34:46,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074086500) {}
[INFO ] 2019-08-17T20:34:46,567Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:46,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074086500) {}
[INFO ] 2019-08-17T20:34:46,567Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:46,570Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203445.852/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:34:46,571Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:46,571Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:46,592Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:46,592Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:46,615Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:46,622Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:46,639Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:46,641Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:45.852Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:46,968Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:46,969Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203445.852/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:46,969Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:46,970Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:46,971Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:46,971Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:47,035Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:47,041Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:47,043Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:47,043Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:47,057Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:47,057Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:47,150Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:47,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:47,157Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074087157) {}
[INFO ] 2019-08-17T20:34:47,159Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:47,163Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074087157) {}
[INFO ] 2019-08-17T20:34:47,170Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:47,173Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074087157) {}
[INFO ] 2019-08-17T20:34:47,176Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:47,206Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:47,211Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074087157) {}
[INFO ] 2019-08-17T20:34:47,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074086500) {}
[INFO ] 2019-08-17T20:34:47,214Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:47,221Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074087157) {}
[INFO ] 2019-08-17T20:34:47,222Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:47,229Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074087157) {}
[INFO ] 2019-08-17T20:34:47,229Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:47,229Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074087157) {}
[INFO ] 2019-08-17T20:34:47,229Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:47,233Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203445.852/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:34:47,233Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:47,233Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:47,256Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:47,256Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203445.852/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:47,276Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:47,281Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:47,297Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:47,299Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:45.852Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:47,619Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:47,621Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203445.852/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:47,621Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:47,621Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:47,623Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:47,623Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:47,695Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:47,702Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:47,704Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:47,704Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:47,721Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:47,721Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:47,813Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:47,818Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:47,818Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074087818) {}
[INFO ] 2019-08-17T20:34:47,819Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:47,824Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074087818) {}
[INFO ] 2019-08-17T20:34:47,829Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:47,832Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074087818) {}
[INFO ] 2019-08-17T20:34:47,837Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:47,864Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:47,869Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074087818) {}
[INFO ] 2019-08-17T20:34:47,871Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074086500) {}
[INFO ] 2019-08-17T20:34:47,873Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:47,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074087818) {}
[INFO ] 2019-08-17T20:34:47,880Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:47,886Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074087157) {}
[INFO ] 2019-08-17T20:34:47,887Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:47,894Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074087818) {}
[INFO ] 2019-08-17T20:34:47,895Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:47,903Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074087818) {}
[INFO ] 2019-08-17T20:34:47,903Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:47,903Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074087818) {}
[INFO ] 2019-08-17T20:34:47,903Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:34:47,903Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:47,903Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:47,903Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:47,903Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:48,521Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cd5742c-1b3f-4664-959c-5d166110b1d9, invocation_id=24eb0739-6b48-447c-91bc-0648bd127598, invocation_timestamp=2019-08-17T20:34:47.904Z, origin=Only For Testing, session_id=24eb0739-6b48-447c-91bc-0648bd127598, session_timestamp=2019-08-17T20:34:47.904Z, thread-id=715}
[INFO ] 2019-08-17T20:34:48,561Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[WARN ] 2019-08-17T20:34:48,561Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,568Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[WARN ] 2019-08-17T20:34:48,605Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,621Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cd5742c-1b3f-4664-959c-5d166110b1d9, invocation_id=24eb0739-6b48-447c-91bc-0648bd127598, invocation_timestamp=2019-08-17T20:34:47.904Z, origin=Only For Testing, session_id=24eb0739-6b48-447c-91bc-0648bd127598, session_timestamp=2019-08-17T20:34:47.904Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,621Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cd5742c-1b3f-4664-959c-5d166110b1d9, invocation_id=24eb0739-6b48-447c-91bc-0648bd127598, invocation_timestamp=2019-08-17T20:34:47.904Z, origin=Only For Testing, session_id=24eb0739-6b48-447c-91bc-0648bd127598, session_timestamp=2019-08-17T20:34:47.904Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,630Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cd5742c-1b3f-4664-959c-5d166110b1d9, invocation_id=24eb0739-6b48-447c-91bc-0648bd127598, invocation_timestamp=2019-08-17T20:34:47.904Z, origin=Only For Testing, session_id=24eb0739-6b48-447c-91bc-0648bd127598, session_timestamp=2019-08-17T20:34:47.904Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,640Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[WARN ] 2019-08-17T20:34:48,640Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,645Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,650Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,653Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=95360ab1-e956-4df9-8bb1-77d2cccefac7, invocation_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, invocation_timestamp=2019-08-17T20:34:48.544Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9fc38a12-b157-4797-b7e3-4c1dbb1676f3, session_timestamp=2019-08-17T20:34:48.544Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,660Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cd5742c-1b3f-4664-959c-5d166110b1d9, invocation_id=24eb0739-6b48-447c-91bc-0648bd127598, invocation_timestamp=2019-08-17T20:34:47.904Z, origin=Only For Testing, session_id=24eb0739-6b48-447c-91bc-0648bd127598, session_timestamp=2019-08-17T20:34:47.904Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,660Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cd5742c-1b3f-4664-959c-5d166110b1d9, invocation_id=24eb0739-6b48-447c-91bc-0648bd127598, invocation_timestamp=2019-08-17T20:34:47.904Z, origin=Only For Testing, session_id=24eb0739-6b48-447c-91bc-0648bd127598, session_timestamp=2019-08-17T20:34:47.904Z, thread-id=715, tx_id=566686D24ED44CAB4D30A922FF5168655F9C1755C566D90A69B8FB004E458458}
[INFO ] 2019-08-17T20:34:48,715Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203448.675/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:34:48,715Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:48,715Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:48,736Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:48,736Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:48,756Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:48,761Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:48,764Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:48,769Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:48.675Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:49,094Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:49,095Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203448.675/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:49,095Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:49,096Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:49,098Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,098Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,159Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,165Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:49,182Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:49,188Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,188Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,280Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,284Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:49,284Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074089284) {}
[INFO ] 2019-08-17T20:34:49,286Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:49,297Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074089284) {}
[INFO ] 2019-08-17T20:34:49,303Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:49,306Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074089284) {}
[INFO ] 2019-08-17T20:34:49,310Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:49,341Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:49,342Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:34:49,342Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:34:49,347Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074089284) {}
[INFO ] 2019-08-17T20:34:49,349Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074089284) {}
[INFO ] 2019-08-17T20:34:49,349Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:49,349Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074089284) {}
[INFO ] 2019-08-17T20:34:49,349Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:49,353Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203448.675/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:34:49,353Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:49,353Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:49,374Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:49,374Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:49,394Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:49,401Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:49,419Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:49,421Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:48.675Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:49,701Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:49,702Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203448.675/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:49,702Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:49,703Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:49,704Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,704Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,762Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:49,768Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:49,769Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:49,769Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:49,782Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:49,782Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:49,867Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:49,870Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:49,870Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074089870) {}
[INFO ] 2019-08-17T20:34:49,871Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:49,876Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074089870) {}
[INFO ] 2019-08-17T20:34:49,880Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:49,883Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074089870) {}
[INFO ] 2019-08-17T20:34:49,886Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:49,909Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:49,914Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074089870) {}
[INFO ] 2019-08-17T20:34:49,916Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074089284) {}
[INFO ] 2019-08-17T20:34:49,917Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:49,924Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074089870) {}
[INFO ] 2019-08-17T20:34:49,925Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:49,931Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074089870) {}
[INFO ] 2019-08-17T20:34:49,931Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:49,931Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074089870) {}
[INFO ] 2019-08-17T20:34:49,931Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:49,934Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203448.675/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:34:49,934Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:49,934Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:49,955Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:49,956Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203448.675/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:49,977Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:49,982Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:50,000Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:50,003Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:48.675Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:50,265Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:50,267Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203448.675/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:50,267Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:50,268Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:50,269Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:50,269Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:50,329Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:50,336Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:50,337Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:50,337Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:50,350Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:50,350Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:50,431Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:50,434Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:50,434Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074090434) {}
[INFO ] 2019-08-17T20:34:50,435Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:50,440Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074090434) {}
[INFO ] 2019-08-17T20:34:50,445Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:50,447Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074090434) {}
[INFO ] 2019-08-17T20:34:50,450Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:50,480Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:50,485Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074090434) {}
[INFO ] 2019-08-17T20:34:50,487Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074089284) {}
[INFO ] 2019-08-17T20:34:50,488Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:50,494Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074090434) {}
[INFO ] 2019-08-17T20:34:50,495Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:50,501Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074089870) {}
[INFO ] 2019-08-17T20:34:50,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:50,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074090434) {}
[INFO ] 2019-08-17T20:34:50,509Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:50,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074090434) {}
[INFO ] 2019-08-17T20:34:50,516Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:50,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074090434) {}
[INFO ] 2019-08-17T20:34:50,516Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:34:50,516Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:50,516Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:50,516Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:50,516Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:51,114Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c3c073e8-bd42-4d18-b330-4576e0f5acd1, invocation_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, invocation_timestamp=2019-08-17T20:34:50.517Z, origin=Only For Testing, session_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, session_timestamp=2019-08-17T20:34:50.517Z, thread-id=888}
[INFO ] 2019-08-17T20:34:51,147Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[WARN ] 2019-08-17T20:34:51,147Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,154Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[WARN ] 2019-08-17T20:34:51,183Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,194Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c3c073e8-bd42-4d18-b330-4576e0f5acd1, invocation_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, invocation_timestamp=2019-08-17T20:34:50.517Z, origin=Only For Testing, session_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, session_timestamp=2019-08-17T20:34:50.517Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,194Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c3c073e8-bd42-4d18-b330-4576e0f5acd1, invocation_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, invocation_timestamp=2019-08-17T20:34:50.517Z, origin=Only For Testing, session_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, session_timestamp=2019-08-17T20:34:50.517Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,203Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c3c073e8-bd42-4d18-b330-4576e0f5acd1, invocation_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, invocation_timestamp=2019-08-17T20:34:50.517Z, origin=Only For Testing, session_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, session_timestamp=2019-08-17T20:34:50.517Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,217Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[WARN ] 2019-08-17T20:34:51,217Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,223Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,227Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,230Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=a36f808c-f14e-4a87-9999-e11251e3ff52, invocation_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, invocation_timestamp=2019-08-17T20:34:51.133Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0e45c0f2-ad7e-4503-904a-e7f76fe6914a, session_timestamp=2019-08-17T20:34:51.133Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,235Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c3c073e8-bd42-4d18-b330-4576e0f5acd1, invocation_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, invocation_timestamp=2019-08-17T20:34:50.517Z, origin=Only For Testing, session_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, session_timestamp=2019-08-17T20:34:50.517Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,235Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=c3c073e8-bd42-4d18-b330-4576e0f5acd1, invocation_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, invocation_timestamp=2019-08-17T20:34:50.517Z, origin=Only For Testing, session_id=35f8fae9-2dfa-4ba9-b390-5fa415ba1769, session_timestamp=2019-08-17T20:34:50.517Z, thread-id=888, tx_id=5B0068032BE137348C744CA5B1A1150A330F0A768ACCE7067DDD55F9A5E95DC5}
[INFO ] 2019-08-17T20:34:51,282Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203451.245/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:34:51,282Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:51,283Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:51,304Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:51,304Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:51,325Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:51,329Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:51,332Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:51,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:51.245Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:51,603Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:51,604Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203451.245/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:51,604Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:51,605Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:51,606Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:51,606Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:51,659Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:51,666Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:51,684Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:51,690Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:51,690Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:51,772Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:51,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:51,775Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074091775) {}
[INFO ] 2019-08-17T20:34:51,776Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:51,784Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074091775) {}
[INFO ] 2019-08-17T20:34:51,790Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:51,793Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074091775) {}
[INFO ] 2019-08-17T20:34:51,796Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:51,826Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:51,827Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:34:51,827Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:34:51,831Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074091775) {}
[INFO ] 2019-08-17T20:34:51,833Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074091775) {}
[INFO ] 2019-08-17T20:34:51,833Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:51,833Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074091775) {}
[INFO ] 2019-08-17T20:34:51,833Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:51,837Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203451.245/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:34:51,837Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:51,837Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:51,857Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:51,857Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:51,876Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:51,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:51,897Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:51,899Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:51.245Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:52,144Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:52,145Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203451.245/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:52,145Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:52,146Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:52,147Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:52,147Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:52,204Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:52,210Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:52,212Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:52,212Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:52,226Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:52,226Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:52,305Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:52,309Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:52,309Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074092309) {}
[INFO ] 2019-08-17T20:34:52,310Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:52,314Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074092309) {}
[INFO ] 2019-08-17T20:34:52,319Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:52,322Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074092309) {}
[INFO ] 2019-08-17T20:34:52,325Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:52,353Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:52,358Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074092309) {}
[INFO ] 2019-08-17T20:34:52,360Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074091775) {}
[INFO ] 2019-08-17T20:34:52,361Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:52,367Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074092309) {}
[INFO ] 2019-08-17T20:34:52,368Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:52,373Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074092309) {}
[INFO ] 2019-08-17T20:34:52,373Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:52,373Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074092309) {}
[INFO ] 2019-08-17T20:34:52,373Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:52,376Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203451.245/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:34:52,376Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:52,376Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:52,397Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:52,398Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203451.245/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:52,419Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:52,423Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:52,438Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:52,440Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:51.245Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:52,683Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:52,684Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203451.245/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:52,684Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:52,685Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:52,686Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:52,686Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:52,739Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:52,744Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:52,745Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:52,745Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:52,758Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:52,758Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:52,827Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:52,830Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:52,830Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074092830) {}
[INFO ] 2019-08-17T20:34:52,831Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:52,836Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074092830) {}
[INFO ] 2019-08-17T20:34:52,840Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:52,842Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074092830) {}
[INFO ] 2019-08-17T20:34:52,845Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:52,875Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:52,880Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074092830) {}
[INFO ] 2019-08-17T20:34:52,881Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074091775) {}
[INFO ] 2019-08-17T20:34:52,882Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:52,888Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074092830) {}
[INFO ] 2019-08-17T20:34:52,888Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:52,895Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074092309) {}
[INFO ] 2019-08-17T20:34:52,895Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:52,901Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074092830) {}
[INFO ] 2019-08-17T20:34:52,902Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:52,907Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074092830) {}
[INFO ] 2019-08-17T20:34:52,907Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:52,907Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074092830) {}
[INFO ] 2019-08-17T20:34:52,907Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:34:52,907Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:52,907Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:52,907Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:52,907Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:53,470Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1b65e350-cfcf-447d-a000-556002a12830, invocation_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, invocation_timestamp=2019-08-17T20:34:52.909Z, origin=Only For Testing, session_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, session_timestamp=2019-08-17T20:34:52.909Z, thread-id=1061}
[INFO ] 2019-08-17T20:34:53,498Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[WARN ] 2019-08-17T20:34:53,498Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,504Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[WARN ] 2019-08-17T20:34:53,537Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,546Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1b65e350-cfcf-447d-a000-556002a12830, invocation_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, invocation_timestamp=2019-08-17T20:34:52.909Z, origin=Only For Testing, session_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, session_timestamp=2019-08-17T20:34:52.909Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,547Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1b65e350-cfcf-447d-a000-556002a12830, invocation_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, invocation_timestamp=2019-08-17T20:34:52.909Z, origin=Only For Testing, session_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, session_timestamp=2019-08-17T20:34:52.909Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,557Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1b65e350-cfcf-447d-a000-556002a12830, invocation_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, invocation_timestamp=2019-08-17T20:34:52.909Z, origin=Only For Testing, session_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, session_timestamp=2019-08-17T20:34:52.909Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,566Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[WARN ] 2019-08-17T20:34:53,566Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,570Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,574Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,577Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=977f47b0-8931-4c30-b9e8-52d518ff69ea, invocation_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, invocation_timestamp=2019-08-17T20:34:53.487Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1c9a3f15-1ef5-4333-950a-a4e91757f89b, session_timestamp=2019-08-17T20:34:53.487Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,583Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1b65e350-cfcf-447d-a000-556002a12830, invocation_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, invocation_timestamp=2019-08-17T20:34:52.909Z, origin=Only For Testing, session_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, session_timestamp=2019-08-17T20:34:52.909Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,583Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=1b65e350-cfcf-447d-a000-556002a12830, invocation_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, invocation_timestamp=2019-08-17T20:34:52.909Z, origin=Only For Testing, session_id=8b2cc685-22f5-4bf8-b9d4-c54e614e9bbc, session_timestamp=2019-08-17T20:34:52.909Z, thread-id=1061, tx_id=A11219477E97D1D69426C2A8E6C33515DFCE49877E78EBE008C7694081D85D91}
[INFO ] 2019-08-17T20:34:53,638Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203453.593/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:34:53,638Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:53,638Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:53,660Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:53,660Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:53,681Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:53,685Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:53,688Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:53,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:53.593Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:53,949Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:53,951Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203453.593/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:53,951Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:53,951Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:53,953Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:53,953Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,002Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,007Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:54,022Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:54,028Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,028Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,111Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,115Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:54,115Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074094115) {}
[INFO ] 2019-08-17T20:34:54,116Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:54,125Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074094115) {}
[INFO ] 2019-08-17T20:34:54,131Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:54,134Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074094115) {}
[INFO ] 2019-08-17T20:34:54,137Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:54,163Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:54,164Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:34:54,165Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:34:54,168Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074094115) {}
[INFO ] 2019-08-17T20:34:54,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074094115) {}
[INFO ] 2019-08-17T20:34:54,170Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:54,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074094115) {}
[INFO ] 2019-08-17T20:34:54,170Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:54,173Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203453.593/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:34:54,174Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:54,174Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:54,195Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:54,195Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:54,216Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:54,220Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:54,233Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:54,236Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:53.593Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:54,478Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:54,478Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203453.593/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:54,478Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:54,479Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:54,481Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,481Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,533Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,538Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:54,539Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:54,539Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:54,551Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:54,551Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:54,625Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:54,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:54,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074094628) {}
[INFO ] 2019-08-17T20:34:54,629Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:54,633Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074094628) {}
[INFO ] 2019-08-17T20:34:54,637Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:54,639Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074094628) {}
[INFO ] 2019-08-17T20:34:54,642Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:54,670Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:54,673Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074094628) {}
[INFO ] 2019-08-17T20:34:54,675Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074094115) {}
[INFO ] 2019-08-17T20:34:54,676Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:54,680Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074094628) {}
[INFO ] 2019-08-17T20:34:54,680Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:54,685Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074094628) {}
[INFO ] 2019-08-17T20:34:54,685Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:54,685Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074094628) {}
[INFO ] 2019-08-17T20:34:54,685Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:54,688Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203453.593/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:34:54,688Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:54,688Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:54,710Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:54,710Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203453.593/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:54,730Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:54,734Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:54,749Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:54,751Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:53.593Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:54,973Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:54,975Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203453.593/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:54,975Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:54,976Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:54,977Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:54,977Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:55,031Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:55,035Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:55,036Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:55,037Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:55,049Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:55,050Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:55,128Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:55,131Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:55,131Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074095131) {}
[INFO ] 2019-08-17T20:34:55,132Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:55,136Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074095131) {}
[INFO ] 2019-08-17T20:34:55,139Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:55,141Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074095131) {}
[INFO ] 2019-08-17T20:34:55,144Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:55,165Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:55,169Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074095131) {}
[INFO ] 2019-08-17T20:34:55,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074094115) {}
[INFO ] 2019-08-17T20:34:55,171Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:55,176Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074095131) {}
[INFO ] 2019-08-17T20:34:55,177Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:55,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074094628) {}
[INFO ] 2019-08-17T20:34:55,181Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:55,186Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074095131) {}
[INFO ] 2019-08-17T20:34:55,187Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:55,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074095131) {}
[INFO ] 2019-08-17T20:34:55,192Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:55,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074095131) {}
[INFO ] 2019-08-17T20:34:55,192Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:34:55,192Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:55,192Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:55,192Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:55,192Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:55,692Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e7421be4-2c49-46e4-8ebf-64ca7843f08a, invocation_id=94ac8393-190b-40b4-87e4-ef75e891cc74, invocation_timestamp=2019-08-17T20:34:55.193Z, origin=Only For Testing, session_id=94ac8393-190b-40b4-87e4-ef75e891cc74, session_timestamp=2019-08-17T20:34:55.193Z, thread-id=1234}
[INFO ] 2019-08-17T20:34:55,719Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[WARN ] 2019-08-17T20:34:55,719Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,725Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[WARN ] 2019-08-17T20:34:55,753Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,763Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e7421be4-2c49-46e4-8ebf-64ca7843f08a, invocation_id=94ac8393-190b-40b4-87e4-ef75e891cc74, invocation_timestamp=2019-08-17T20:34:55.193Z, origin=Only For Testing, session_id=94ac8393-190b-40b4-87e4-ef75e891cc74, session_timestamp=2019-08-17T20:34:55.193Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,763Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e7421be4-2c49-46e4-8ebf-64ca7843f08a, invocation_id=94ac8393-190b-40b4-87e4-ef75e891cc74, invocation_timestamp=2019-08-17T20:34:55.193Z, origin=Only For Testing, session_id=94ac8393-190b-40b4-87e4-ef75e891cc74, session_timestamp=2019-08-17T20:34:55.193Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,772Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e7421be4-2c49-46e4-8ebf-64ca7843f08a, invocation_id=94ac8393-190b-40b4-87e4-ef75e891cc74, invocation_timestamp=2019-08-17T20:34:55.193Z, origin=Only For Testing, session_id=94ac8393-190b-40b4-87e4-ef75e891cc74, session_timestamp=2019-08-17T20:34:55.193Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,780Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[WARN ] 2019-08-17T20:34:55,780Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,785Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,789Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,791Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=b15e4c46-adf9-4497-89a5-5df2c4cbf05f, invocation_id=7af3c435-56b2-469d-90a0-43119ec92b21, invocation_timestamp=2019-08-17T20:34:55.708Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7af3c435-56b2-469d-90a0-43119ec92b21, session_timestamp=2019-08-17T20:34:55.708Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,797Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e7421be4-2c49-46e4-8ebf-64ca7843f08a, invocation_id=94ac8393-190b-40b4-87e4-ef75e891cc74, invocation_timestamp=2019-08-17T20:34:55.193Z, origin=Only For Testing, session_id=94ac8393-190b-40b4-87e4-ef75e891cc74, session_timestamp=2019-08-17T20:34:55.193Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,797Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=e7421be4-2c49-46e4-8ebf-64ca7843f08a, invocation_id=94ac8393-190b-40b4-87e4-ef75e891cc74, invocation_timestamp=2019-08-17T20:34:55.193Z, origin=Only For Testing, session_id=94ac8393-190b-40b4-87e4-ef75e891cc74, session_timestamp=2019-08-17T20:34:55.193Z, thread-id=1234, tx_id=C56F2D9AE7613272B5B24441627590DD14B95E5427964E6B656DED0C9C9FF360}
[INFO ] 2019-08-17T20:34:55,847Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203455.808/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:34:55,847Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:55,848Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:55,863Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:55,863Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:55,886Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:55,892Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:55,894Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:55,897Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:55.808Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:56,114Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:56,115Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203455.808/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:56,115Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:56,116Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:56,118Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,118Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,170Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,176Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:56,192Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:56,197Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,197Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,275Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,279Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:56,279Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074096279) {}
[INFO ] 2019-08-17T20:34:56,280Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:56,288Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074096279) {}
[INFO ] 2019-08-17T20:34:56,293Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:56,296Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074096279) {}
[INFO ] 2019-08-17T20:34:56,299Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:56,325Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:56,326Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:34:56,326Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:34:56,330Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074096279) {}
[INFO ] 2019-08-17T20:34:56,332Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074096279) {}
[INFO ] 2019-08-17T20:34:56,332Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:56,332Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074096279) {}
[INFO ] 2019-08-17T20:34:56,332Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:56,335Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203455.808/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:34:56,335Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:56,335Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:56,357Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:56,357Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:56,377Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:56,382Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:56,395Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:56,397Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:55.808Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:56,616Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:56,617Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203455.808/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:56,617Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:56,618Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:56,620Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,620Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,667Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:56,672Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:56,673Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:56,674Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:56,686Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:56,686Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:56,760Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:56,763Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:56,763Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074096763) {}
[INFO ] 2019-08-17T20:34:56,764Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:56,767Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074096763) {}
[INFO ] 2019-08-17T20:34:56,771Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:56,773Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074096763) {}
[INFO ] 2019-08-17T20:34:56,776Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:56,804Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:56,807Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074096763) {}
[INFO ] 2019-08-17T20:34:56,809Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074096279) {}
[INFO ] 2019-08-17T20:34:56,809Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:56,814Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074096763) {}
[INFO ] 2019-08-17T20:34:56,814Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:56,818Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074096763) {}
[INFO ] 2019-08-17T20:34:56,818Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:56,818Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074096763) {}
[INFO ] 2019-08-17T20:34:56,818Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:56,821Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-203455.808/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:34:56,821Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:34:56,821Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:34:56,842Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:56,842Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-203455.808/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:34:56,861Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:34:56,865Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:34:56,876Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:34:56,878Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:34:55.808Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:34:57,089Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:34:57,090Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-203455.808/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:34:57,090Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:34:57,091Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:34:57,092Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:57,092Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:57,141Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:34:57,145Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:34:57,146Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:34:57,146Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:34:57,160Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:57,160Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:57,232Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:34:57,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:34:57,235Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074097235) {}
[INFO ] 2019-08-17T20:34:57,236Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:57,241Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074097235) {}
[INFO ] 2019-08-17T20:34:57,244Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:34:57,246Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074097235) {}
[INFO ] 2019-08-17T20:34:57,249Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:57,276Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C76202AC27AEC33D2BA3F7D7F2F96E959622A81AD9568779A3A52060928AD2B6 uploader=app filename=null {}
[INFO ] 2019-08-17T20:34:57,279Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074097235) {}
[INFO ] 2019-08-17T20:34:57,281Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074096279) {}
[INFO ] 2019-08-17T20:34:57,281Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:57,285Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074097235) {}
[INFO ] 2019-08-17T20:34:57,286Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:57,290Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074096763) {}
[INFO ] 2019-08-17T20:34:57,290Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:57,295Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074097235) {}
[INFO ] 2019-08-17T20:34:57,295Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:34:57,300Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074097235) {}
[INFO ] 2019-08-17T20:34:57,300Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:34:57,300Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074097235) {}
[INFO ] 2019-08-17T20:34:57,300Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:34:57,300Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:57,300Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:57,300Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:34:57,300Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:34:57,843Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=020c2aa1-d614-4a26-b610-6e87d33b7402, invocation_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, invocation_timestamp=2019-08-17T20:34:57.301Z, origin=Only For Testing, session_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, session_timestamp=2019-08-17T20:34:57.301Z, thread-id=1407}
[INFO ] 2019-08-17T20:34:57,873Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[WARN ] 2019-08-17T20:34:57,873Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,878Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[WARN ] 2019-08-17T20:34:57,903Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,912Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=020c2aa1-d614-4a26-b610-6e87d33b7402, invocation_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, invocation_timestamp=2019-08-17T20:34:57.301Z, origin=Only For Testing, session_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, session_timestamp=2019-08-17T20:34:57.301Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,912Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=020c2aa1-d614-4a26-b610-6e87d33b7402, invocation_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, invocation_timestamp=2019-08-17T20:34:57.301Z, origin=Only For Testing, session_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, session_timestamp=2019-08-17T20:34:57.301Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,920Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=020c2aa1-d614-4a26-b610-6e87d33b7402, invocation_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, invocation_timestamp=2019-08-17T20:34:57.301Z, origin=Only For Testing, session_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, session_timestamp=2019-08-17T20:34:57.301Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,926Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[WARN ] 2019-08-17T20:34:57,926Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,930Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,933Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,936Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=f4c30363-16db-4846-8205-25edf99689b9, invocation_id=5b6f1a71-75d5-4324-bb16-80c329813015, invocation_timestamp=2019-08-17T20:34:57.862Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b6f1a71-75d5-4324-bb16-80c329813015, session_timestamp=2019-08-17T20:34:57.862Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,941Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=020c2aa1-d614-4a26-b610-6e87d33b7402, invocation_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, invocation_timestamp=2019-08-17T20:34:57.301Z, origin=Only For Testing, session_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, session_timestamp=2019-08-17T20:34:57.301Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:34:57,941Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=020c2aa1-d614-4a26-b610-6e87d33b7402, invocation_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, invocation_timestamp=2019-08-17T20:34:57.301Z, origin=Only For Testing, session_id=b551f296-5f39-47ae-aff6-a2b867d1e2eb, session_timestamp=2019-08-17T20:34:57.301Z, thread-id=1407, tx_id=9C456BF26FC36BD2874B426C40FEC9DBA5A27150A702AA569A43BDD7DF05D1CD}
[INFO ] 2019-08-17T20:41:15,293Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:15,434Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar {}
[INFO ] 2019-08-17T20:41:15,578Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:41:19,062Z [Test worker] internal.Verifier. - Error validating transaction BD4B90C1D5B2B64ED391105D693488BD14AB36573EF74F959028E029C0C7A2DF. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:19,069Z [Test worker] internal.Verifier. - Error validating transaction BD4B90C1D5B2B64ED391105D693488BD14AB36573EF74F959028E029C0C7A2DF. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:19,091Z [Test worker] internal.Verifier. - Error validating transaction BD4B90C1D5B2B64ED391105D693488BD14AB36573EF74F959028E029C0C7A2DF. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:41:19,148Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:19,148Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar {}
[INFO ] 2019-08-17T20:41:19,174Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:19,227Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:19,227Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar {}
[INFO ] 2019-08-17T20:41:19,252Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T20:41:19,331Z [Test worker] contracts.AttachmentConstraint. - Found state bootcamp.contracts.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2019-08-17T20:41:20,222Z [Test worker] internal.Verifier. - Error validating transaction C359D8A9548B58C718A528165B3863FF2D5DA9350B4C61F3F459621F9E237338. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:32) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:20,248Z [Test worker] internal.Verifier. - Error validating transaction 65D86004CF92578BA58423CE2426D0F3EB037923BBCFFF446AAB14E2B598A027. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:20,262Z [Test worker] internal.Verifier. - Error validating transaction 65D86004CF92578BA58423CE2426D0F3EB037923BBCFFF446AAB14E2B598A027. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:20,283Z [Test worker] internal.Verifier. - Error validating transaction 65D86004CF92578BA58423CE2426D0F3EB037923BBCFFF446AAB14E2B598A027. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:41:20,323Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:20,324Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar {}
[INFO ] 2019-08-17T20:41:20,348Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T20:41:20,409Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T20:41:20,421Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T20:41:21,170Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T20:41:21,171Z [Test worker] internal.Verifier. - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.contracts.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-17T20:41:21,171Z [Test worker] internal.Verifier. - Error validating transaction 4D44058B43D66E380C9D338E6F13976908D56FF5D5125BB4A67493AD52A6B1BD. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[WARN ] 2019-08-17T20:41:21,173Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-17T20:41:21,174Z [Test worker] internal.Verifier. - Error validating transaction 4D44058B43D66E380C9D338E6F13976908D56FF5D5125BB4A67493AD52A6B1BD. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[WARN ] 2019-08-17T20:41:21,177Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-17T20:41:21,182Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-17T20:41:21,183Z [Test worker] internal.Verifier. - Error validating transaction 4D44058B43D66E380C9D338E6F13976908D56FF5D5125BB4A67493AD52A6B1BD. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:41:21,213Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:21,213Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar {}
[INFO ] 2019-08-17T20:41:21,237Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:41:22,056Z [Test worker] internal.Verifier. - Error validating transaction 96C5F1E5E00309D4E3D973431EF422A6335EBCC3F7280CAD0AABF8D54059E9FB. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,059Z [Test worker] internal.Verifier. - Error validating transaction 96C5F1E5E00309D4E3D973431EF422A6335EBCC3F7280CAD0AABF8D54059E9FB. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,070Z [Test worker] internal.Verifier. - Error validating transaction 96C5F1E5E00309D4E3D973431EF422A6335EBCC3F7280CAD0AABF8D54059E9FB. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,081Z [Test worker] internal.Verifier. - Error validating transaction F15B48171BCE22E9D9A9391DB72B3AB7B573186D17A697E850E438AC9DECFD2A. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,084Z [Test worker] internal.Verifier. - Error validating transaction F15B48171BCE22E9D9A9391DB72B3AB7B573186D17A697E850E438AC9DECFD2A. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,094Z [Test worker] internal.Verifier. - Error validating transaction F15B48171BCE22E9D9A9391DB72B3AB7B573186D17A697E850E438AC9DECFD2A. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:41:22,143Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:22,144Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar {}
[INFO ] 2019-08-17T20:41:22,168Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:41:22,902Z [Test worker] internal.Verifier. - Error validating transaction F5A5FE58D5F0E2BDE74630CF51554BA1F759F4C1373381505603BAAA4BB1B6A6. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,905Z [Test worker] internal.Verifier. - Error validating transaction F5A5FE58D5F0E2BDE74630CF51554BA1F759F4C1373381505603BAAA4BB1B6A6. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,916Z [Test worker] internal.Verifier. - Error validating transaction F5A5FE58D5F0E2BDE74630CF51554BA1F759F4C1373381505603BAAA4BB1B6A6. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,926Z [Test worker] internal.Verifier. - Error validating transaction 02E20BDB7234FAF608CEC97C3FFF4C0CE1AD42E276F3B7B9CACA8827D7C97F21. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,929Z [Test worker] internal.Verifier. - Error validating transaction 02E20BDB7234FAF608CEC97C3FFF4C0CE1AD42E276F3B7B9CACA8827D7C97F21. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:22,937Z [Test worker] internal.Verifier. - Error validating transaction 02E20BDB7234FAF608CEC97C3FFF4C0CE1AD42E276F3B7B9CACA8827D7C97F21. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:41:22,974Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:22,974Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar {}
[INFO ] 2019-08-17T20:41:22,998Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:41:23,607Z [Test worker] internal.Verifier. - Error validating transaction 9F77A5102A5AE4CA1ADAFCFAA594C433A6A6E99EB970A33B5C1567F89BA715FA. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:23,609Z [Test worker] internal.Verifier. - Error validating transaction 9F77A5102A5AE4CA1ADAFCFAA594C433A6A6E99EB970A33B5C1567F89BA715FA. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:23,615Z [Test worker] internal.Verifier. - Error validating transaction 9F77A5102A5AE4CA1ADAFCFAA594C433A6A6E99EB970A33B5C1567F89BA715FA. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:41:23,638Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:23,638Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190817-204114.728/custom-cordapp_1_4_12cfc9b0-01f0-44eb-8bde-091a6a70b55a.jar {}
[INFO ] 2019-08-17T20:41:23,662Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-17T20:41:24,321Z [Test worker] internal.Verifier. - Error validating transaction 094AF7201CEA7B0A10061E53EE59A9E9F6DA557E971478E179158A11A5103637. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:24,324Z [Test worker] internal.Verifier. - Error validating transaction 094AF7201CEA7B0A10061E53EE59A9E9F6DA557E971478E179158A11A5103637. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-17T20:41:24,334Z [Test worker] internal.Verifier. - Error validating transaction 094AF7201CEA7B0A10061E53EE59A9E9F6DA557E971478E179158A11A5103637. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-17T20:41:26,510Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-17T20:41:28,362Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204124.376/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:41:28,365Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:28,371Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:28,395Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:28,396Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Commands$Issue. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Companion. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.states.TokenState. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Commands. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowInitiator. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowResponder. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[WARN ] 2019-08-17T20:41:28,418Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowResponder$call$signTransactionFlow$1. {}
[INFO ] 2019-08-17T20:41:29,640Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:29,698Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:29,814Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:24.367Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:34,115Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:34,119Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204124.376/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:34,119Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:34,120Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:34,172Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:34,177Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:36,064Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:36,681Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:36,748Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:36,770Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:36,770Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:37,098Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:37,109Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:37,109Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074497109) {}
[INFO ] 2019-08-17T20:41:37,113Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:37,268Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074497109) {}
[INFO ] 2019-08-17T20:41:37,318Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:37,335Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074497109) {}
[INFO ] 2019-08-17T20:41:37,360Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:37,383Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:37,386Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:41:37,388Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:41:37,945Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074497109) {}
[INFO ] 2019-08-17T20:41:37,962Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074497109) {}
[INFO ] 2019-08-17T20:41:37,963Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:37,963Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074497109) {}
[INFO ] 2019-08-17T20:41:37,963Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:37,971Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204124.376/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:41:37,971Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:37,971Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:37,987Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:37,987Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:38,008Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:38,015Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:38,064Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:38,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:24.367Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:38,742Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:38,747Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204124.376/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:38,747Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:38,750Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:38,753Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:38,753Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:38,890Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:38,906Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:38,911Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:38,912Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:38,938Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:38,938Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:39,093Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:39,100Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:39,100Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074499100) {}
[INFO ] 2019-08-17T20:41:39,103Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:39,114Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074499100) {}
[INFO ] 2019-08-17T20:41:39,121Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:39,125Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074499100) {}
[INFO ] 2019-08-17T20:41:39,133Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:39,169Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:39,181Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074499100) {}
[INFO ] 2019-08-17T20:41:39,184Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074497109) {}
[INFO ] 2019-08-17T20:41:39,186Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:39,199Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074499100) {}
[INFO ] 2019-08-17T20:41:39,201Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:39,212Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074499100) {}
[INFO ] 2019-08-17T20:41:39,212Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:39,212Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074499100) {}
[INFO ] 2019-08-17T20:41:39,212Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:39,216Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204124.376/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:41:39,217Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:39,217Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:39,238Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:39,239Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204124.376/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:39,261Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:39,267Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:39,290Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:39,293Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:24.367Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:39,687Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:39,689Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204124.376/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:39,689Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:39,691Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:39,692Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:39,693Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:39,772Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:39,783Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:39,785Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:39,785Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:39,802Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:39,802Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:39,922Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:39,927Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:39,927Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074499927) {}
[INFO ] 2019-08-17T20:41:39,929Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:39,937Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074499927) {}
[INFO ] 2019-08-17T20:41:39,944Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:39,948Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074499927) {}
[INFO ] 2019-08-17T20:41:39,953Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:39,986Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:39,996Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074499927) {}
[INFO ] 2019-08-17T20:41:39,999Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074497109) {}
[INFO ] 2019-08-17T20:41:40,000Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:40,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074499927) {}
[INFO ] 2019-08-17T20:41:40,009Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:40,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074499100) {}
[INFO ] 2019-08-17T20:41:40,020Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:40,028Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074499927) {}
[INFO ] 2019-08-17T20:41:40,030Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:40,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074499927) {}
[INFO ] 2019-08-17T20:41:40,039Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:40,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074499927) {}
[INFO ] 2019-08-17T20:41:40,039Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:41:40,040Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:40,040Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:40,044Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:40,044Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:40,252Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=04b401e3-d79b-4f23-9f76-ac4c787244ec, invocation_id=dc24add9-07e8-44ab-af22-8df9de51083c, invocation_timestamp=2019-08-17T20:41:40.067Z, origin=Only For Testing, session_id=dc24add9-07e8-44ab-af22-8df9de51083c, session_timestamp=2019-08-17T20:41:40.067Z, thread-id=540}
[WARN ] 2019-08-17T20:41:40,252Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=04b401e3-d79b-4f23-9f76-ac4c787244ec, invocation_id=dc24add9-07e8-44ab-af22-8df9de51083c, invocation_timestamp=2019-08-17T20:41:40.067Z, origin=Only For Testing, session_id=dc24add9-07e8-44ab-af22-8df9de51083c, session_timestamp=2019-08-17T20:41:40.067Z, thread-id=540}
[WARN ] 2019-08-17T20:41:41,132Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=04b401e3-d79b-4f23-9f76-ac4c787244ec, invocation_id=dc24add9-07e8-44ab-af22-8df9de51083c, invocation_timestamp=2019-08-17T20:41:40.067Z, origin=Only For Testing, session_id=dc24add9-07e8-44ab-af22-8df9de51083c, session_timestamp=2019-08-17T20:41:40.067Z, thread-id=540}
[INFO ] 2019-08-17T20:41:41,324Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[WARN ] 2019-08-17T20:41:41,334Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,359Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[WARN ] 2019-08-17T20:41:41,408Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,431Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=04b401e3-d79b-4f23-9f76-ac4c787244ec, invocation_id=dc24add9-07e8-44ab-af22-8df9de51083c, invocation_timestamp=2019-08-17T20:41:40.067Z, origin=Only For Testing, session_id=dc24add9-07e8-44ab-af22-8df9de51083c, session_timestamp=2019-08-17T20:41:40.067Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,431Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=04b401e3-d79b-4f23-9f76-ac4c787244ec, invocation_id=dc24add9-07e8-44ab-af22-8df9de51083c, invocation_timestamp=2019-08-17T20:41:40.067Z, origin=Only For Testing, session_id=dc24add9-07e8-44ab-af22-8df9de51083c, session_timestamp=2019-08-17T20:41:40.067Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,455Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=04b401e3-d79b-4f23-9f76-ac4c787244ec, invocation_id=dc24add9-07e8-44ab-af22-8df9de51083c, invocation_timestamp=2019-08-17T20:41:40.067Z, origin=Only For Testing, session_id=dc24add9-07e8-44ab-af22-8df9de51083c, session_timestamp=2019-08-17T20:41:40.067Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,475Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[WARN ] 2019-08-17T20:41:41,475Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,483Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,488Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,491Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=8c08e4a3-a9b5-460c-951f-6a41519f0cad, invocation_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, invocation_timestamp=2019-08-17T20:41:41.264Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3c2c12b7-9a15-4bf0-940a-701160297c3d, session_timestamp=2019-08-17T20:41:41.264Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,517Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=04b401e3-d79b-4f23-9f76-ac4c787244ec, invocation_id=dc24add9-07e8-44ab-af22-8df9de51083c, invocation_timestamp=2019-08-17T20:41:40.067Z, origin=Only For Testing, session_id=dc24add9-07e8-44ab-af22-8df9de51083c, session_timestamp=2019-08-17T20:41:40.067Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,517Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=04b401e3-d79b-4f23-9f76-ac4c787244ec, invocation_id=dc24add9-07e8-44ab-af22-8df9de51083c, invocation_timestamp=2019-08-17T20:41:40.067Z, origin=Only For Testing, session_id=dc24add9-07e8-44ab-af22-8df9de51083c, session_timestamp=2019-08-17T20:41:40.067Z, thread-id=540, tx_id=64521F79F95D9D46892170BC4806A2EDB62DF6C44E30803D143C3342E5E14D50}
[INFO ] 2019-08-17T20:41:41,590Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204141.538/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:41:41,590Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:41,590Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:41,613Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:41,614Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:41,636Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:41,641Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:41,643Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:41,647Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:41.538Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:41,986Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:41,987Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204141.538/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:41,987Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:41,988Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:41,990Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:41,990Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:42,067Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:42,073Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:42,095Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:42,103Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:42,103Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:42,209Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:42,213Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:42,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074502213) {}
[INFO ] 2019-08-17T20:41:42,215Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:42,228Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074502213) {}
[INFO ] 2019-08-17T20:41:42,237Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:42,241Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074502213) {}
[INFO ] 2019-08-17T20:41:42,250Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:42,278Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:42,282Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:41:42,283Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:41:42,291Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074502213) {}
[INFO ] 2019-08-17T20:41:42,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074502213) {}
[INFO ] 2019-08-17T20:41:42,294Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:42,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074502213) {}
[INFO ] 2019-08-17T20:41:42,294Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:42,298Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204141.538/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:41:42,298Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:42,298Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:42,322Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:42,322Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:42,343Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:42,356Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:42,397Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:42,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:41.538Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:42,774Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:42,775Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204141.538/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:42,775Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:42,777Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:42,778Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:42,779Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:42,871Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:42,878Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:42,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:42,880Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:42,898Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:42,899Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:42,999Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:43,003Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:43,003Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074503003) {}
[INFO ] 2019-08-17T20:41:43,005Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:43,010Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074503003) {}
[INFO ] 2019-08-17T20:41:43,016Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:43,019Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074503003) {}
[INFO ] 2019-08-17T20:41:43,023Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:43,052Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:43,058Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074503003) {}
[INFO ] 2019-08-17T20:41:43,060Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074502213) {}
[INFO ] 2019-08-17T20:41:43,061Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:43,068Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074503003) {}
[INFO ] 2019-08-17T20:41:43,069Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:43,076Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074503003) {}
[INFO ] 2019-08-17T20:41:43,076Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:43,076Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074503003) {}
[INFO ] 2019-08-17T20:41:43,076Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:43,080Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204141.538/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:41:43,081Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:43,081Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:43,103Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:43,103Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204141.538/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:43,122Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:43,127Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:43,150Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:43,153Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:41.538Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:43,470Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:43,471Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204141.538/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:43,471Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:43,472Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:43,474Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:43,474Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:43,552Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:43,561Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:43,564Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:43,564Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:43,582Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:43,582Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:43,718Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:43,723Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:43,723Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074503723) {}
[INFO ] 2019-08-17T20:41:43,726Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:43,737Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074503723) {}
[INFO ] 2019-08-17T20:41:43,746Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:43,750Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074503723) {}
[INFO ] 2019-08-17T20:41:43,758Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:43,785Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:43,793Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074503723) {}
[INFO ] 2019-08-17T20:41:43,795Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074502213) {}
[INFO ] 2019-08-17T20:41:43,797Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:43,805Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074503723) {}
[INFO ] 2019-08-17T20:41:43,806Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:43,817Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074503003) {}
[INFO ] 2019-08-17T20:41:43,819Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:43,830Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074503723) {}
[INFO ] 2019-08-17T20:41:43,832Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:43,842Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074503723) {}
[INFO ] 2019-08-17T20:41:43,842Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:43,842Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074503723) {}
[INFO ] 2019-08-17T20:41:43,842Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:41:43,842Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:43,842Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:43,843Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:43,843Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:44,647Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=abcd3522-2ede-44b2-85d9-fc1a5e6b51a9, invocation_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, invocation_timestamp=2019-08-17T20:41:43.845Z, origin=Only For Testing, session_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, session_timestamp=2019-08-17T20:41:43.845Z, thread-id=716}
[INFO ] 2019-08-17T20:41:44,704Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[WARN ] 2019-08-17T20:41:44,704Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,718Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[WARN ] 2019-08-17T20:41:44,774Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,796Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=abcd3522-2ede-44b2-85d9-fc1a5e6b51a9, invocation_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, invocation_timestamp=2019-08-17T20:41:43.845Z, origin=Only For Testing, session_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, session_timestamp=2019-08-17T20:41:43.845Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,797Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=abcd3522-2ede-44b2-85d9-fc1a5e6b51a9, invocation_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, invocation_timestamp=2019-08-17T20:41:43.845Z, origin=Only For Testing, session_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, session_timestamp=2019-08-17T20:41:43.845Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,819Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=abcd3522-2ede-44b2-85d9-fc1a5e6b51a9, invocation_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, invocation_timestamp=2019-08-17T20:41:43.845Z, origin=Only For Testing, session_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, session_timestamp=2019-08-17T20:41:43.845Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,837Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[WARN ] 2019-08-17T20:41:44,837Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,846Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,852Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,858Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=a94e18b6-356b-4176-920f-657192dd7e8a, invocation_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, invocation_timestamp=2019-08-17T20:41:44.682Z, origin=O=Mock Company 1, L=London, C=GB, session_id=756ec6a7-c8e2-4a5d-9fa5-d1fcbca521cc, session_timestamp=2019-08-17T20:41:44.682Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,868Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=abcd3522-2ede-44b2-85d9-fc1a5e6b51a9, invocation_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, invocation_timestamp=2019-08-17T20:41:43.845Z, origin=Only For Testing, session_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, session_timestamp=2019-08-17T20:41:43.845Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,868Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=abcd3522-2ede-44b2-85d9-fc1a5e6b51a9, invocation_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, invocation_timestamp=2019-08-17T20:41:43.845Z, origin=Only For Testing, session_id=48c4e668-c6d2-4758-9180-7c4d3e24ca07, session_timestamp=2019-08-17T20:41:43.845Z, thread-id=716, tx_id=456DC1425289CC0A9BDD73FFE6FEAB81B85503359AED20691F65F7775581B115}
[INFO ] 2019-08-17T20:41:44,928Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204144.884/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:41:44,928Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:44,928Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:44,950Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:44,950Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:44,971Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:44,976Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:44,979Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:44,983Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:44.884Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:45,358Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:45,359Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204144.884/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:45,359Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:45,362Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:45,364Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:45,364Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:45,437Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:45,443Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:45,463Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:45,470Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:45,470Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:45,576Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:45,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:45,584Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074505584) {}
[INFO ] 2019-08-17T20:41:45,586Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:45,602Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074505584) {}
[INFO ] 2019-08-17T20:41:45,611Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:45,616Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074505584) {}
[INFO ] 2019-08-17T20:41:45,620Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:45,648Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:45,649Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:41:45,649Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:41:45,655Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074505584) {}
[INFO ] 2019-08-17T20:41:45,658Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074505584) {}
[INFO ] 2019-08-17T20:41:45,658Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:45,658Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074505584) {}
[INFO ] 2019-08-17T20:41:45,658Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:45,661Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204144.884/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:41:45,662Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:45,662Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:45,683Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:45,683Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:45,705Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:45,711Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:45,731Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:45,734Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:44.884Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:46,049Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:46,050Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204144.884/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:46,050Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:46,051Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:46,052Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:46,052Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:46,118Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:46,125Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:46,127Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:46,127Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:46,141Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:46,141Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:46,279Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:46,284Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:46,284Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074506284) {}
[INFO ] 2019-08-17T20:41:46,285Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:46,291Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074506284) {}
[INFO ] 2019-08-17T20:41:46,296Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:46,299Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074506284) {}
[INFO ] 2019-08-17T20:41:46,303Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:46,335Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:46,341Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074506284) {}
[INFO ] 2019-08-17T20:41:46,344Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074505584) {}
[INFO ] 2019-08-17T20:41:46,345Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:46,354Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074506284) {}
[INFO ] 2019-08-17T20:41:46,355Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:46,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074506284) {}
[INFO ] 2019-08-17T20:41:46,365Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:46,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074506284) {}
[INFO ] 2019-08-17T20:41:46,365Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:46,370Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204144.884/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:41:46,371Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:46,371Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:46,392Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:46,392Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204144.884/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:46,417Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:46,428Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:46,454Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:46,457Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:44.884Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:46,888Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:46,895Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204144.884/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:46,895Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:46,897Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:46,900Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:46,900Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:47,017Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:47,023Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:47,024Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:47,025Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:47,042Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:47,042Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:47,150Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:47,154Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:47,154Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074507154) {}
[INFO ] 2019-08-17T20:41:47,156Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:47,163Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074507154) {}
[INFO ] 2019-08-17T20:41:47,169Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:47,173Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074507154) {}
[INFO ] 2019-08-17T20:41:47,176Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:47,212Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:47,219Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074507154) {}
[INFO ] 2019-08-17T20:41:47,221Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074505584) {}
[INFO ] 2019-08-17T20:41:47,222Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:47,233Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074507154) {}
[INFO ] 2019-08-17T20:41:47,234Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:47,241Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074506284) {}
[INFO ] 2019-08-17T20:41:47,242Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:47,252Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074507154) {}
[INFO ] 2019-08-17T20:41:47,253Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:47,262Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074507154) {}
[INFO ] 2019-08-17T20:41:47,262Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:47,262Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074507154) {}
[INFO ] 2019-08-17T20:41:47,262Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:41:47,262Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:47,262Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:47,262Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:47,262Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:47,925Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0ced818d-6f42-457f-a07a-99856054968c, invocation_id=ebb15ec4-e633-455c-baf1-51a052309bc4, invocation_timestamp=2019-08-17T20:41:47.263Z, origin=Only For Testing, session_id=ebb15ec4-e633-455c-baf1-51a052309bc4, session_timestamp=2019-08-17T20:41:47.263Z, thread-id=889}
[INFO ] 2019-08-17T20:41:47,955Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[WARN ] 2019-08-17T20:41:47,955Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:47,961Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[WARN ] 2019-08-17T20:41:48,047Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,057Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0ced818d-6f42-457f-a07a-99856054968c, invocation_id=ebb15ec4-e633-455c-baf1-51a052309bc4, invocation_timestamp=2019-08-17T20:41:47.263Z, origin=Only For Testing, session_id=ebb15ec4-e633-455c-baf1-51a052309bc4, session_timestamp=2019-08-17T20:41:47.263Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,057Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0ced818d-6f42-457f-a07a-99856054968c, invocation_id=ebb15ec4-e633-455c-baf1-51a052309bc4, invocation_timestamp=2019-08-17T20:41:47.263Z, origin=Only For Testing, session_id=ebb15ec4-e633-455c-baf1-51a052309bc4, session_timestamp=2019-08-17T20:41:47.263Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,068Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0ced818d-6f42-457f-a07a-99856054968c, invocation_id=ebb15ec4-e633-455c-baf1-51a052309bc4, invocation_timestamp=2019-08-17T20:41:47.263Z, origin=Only For Testing, session_id=ebb15ec4-e633-455c-baf1-51a052309bc4, session_timestamp=2019-08-17T20:41:47.263Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,077Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[WARN ] 2019-08-17T20:41:48,077Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,083Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,087Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,090Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=7028129b-2083-4dbb-b4d5-e99886e4cc84, invocation_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, invocation_timestamp=2019-08-17T20:41:47.942Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad333a09-1317-4aa3-8f0d-6196846c4d19, session_timestamp=2019-08-17T20:41:47.942Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,096Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0ced818d-6f42-457f-a07a-99856054968c, invocation_id=ebb15ec4-e633-455c-baf1-51a052309bc4, invocation_timestamp=2019-08-17T20:41:47.263Z, origin=Only For Testing, session_id=ebb15ec4-e633-455c-baf1-51a052309bc4, session_timestamp=2019-08-17T20:41:47.263Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,096Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=0ced818d-6f42-457f-a07a-99856054968c, invocation_id=ebb15ec4-e633-455c-baf1-51a052309bc4, invocation_timestamp=2019-08-17T20:41:47.263Z, origin=Only For Testing, session_id=ebb15ec4-e633-455c-baf1-51a052309bc4, session_timestamp=2019-08-17T20:41:47.263Z, thread-id=889, tx_id=01FFA1CA0CD8E792A4F045F13E2116FAE1F185620BDCEDA229D41828E28CCB0C}
[INFO ] 2019-08-17T20:41:48,146Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204148.106/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:41:48,146Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:48,146Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:48,167Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:48,167Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:48,189Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:48,193Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:48,197Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:48,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:48.106Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:48,488Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:48,490Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204148.106/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:48,490Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:48,490Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:48,492Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:48,492Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:48,549Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:48,554Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:48,572Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:48,578Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:48,578Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:48,661Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:48,665Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:48,665Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074508665) {}
[INFO ] 2019-08-17T20:41:48,667Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:48,677Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074508665) {}
[INFO ] 2019-08-17T20:41:48,683Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:48,686Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074508665) {}
[INFO ] 2019-08-17T20:41:48,689Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:48,716Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:48,718Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:41:48,718Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:41:48,725Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074508665) {}
[INFO ] 2019-08-17T20:41:48,727Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074508665) {}
[INFO ] 2019-08-17T20:41:48,727Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:48,727Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074508665) {}
[INFO ] 2019-08-17T20:41:48,727Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:48,730Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204148.106/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:41:48,731Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:48,731Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:48,751Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:48,751Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:48,772Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:48,777Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:48,793Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:48,795Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:48.106Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:49,049Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:49,050Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204148.106/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:49,050Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:49,051Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:49,052Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:49,052Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:49,120Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:49,129Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:49,132Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:49,133Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:49,151Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:49,151Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:49,292Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:49,300Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:49,300Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074509300) {}
[INFO ] 2019-08-17T20:41:49,302Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:49,307Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074509300) {}
[INFO ] 2019-08-17T20:41:49,313Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:49,320Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074509300) {}
[INFO ] 2019-08-17T20:41:49,324Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:49,356Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:49,361Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074509300) {}
[INFO ] 2019-08-17T20:41:49,363Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074508665) {}
[INFO ] 2019-08-17T20:41:49,364Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:49,371Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074509300) {}
[INFO ] 2019-08-17T20:41:49,372Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:49,379Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074509300) {}
[INFO ] 2019-08-17T20:41:49,379Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:49,379Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074509300) {}
[INFO ] 2019-08-17T20:41:49,379Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:49,385Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204148.106/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:41:49,386Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:49,386Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:49,407Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:49,407Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204148.106/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:49,428Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:49,433Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:49,449Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:49,451Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:48.106Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:49,706Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:49,708Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204148.106/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:49,708Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:49,708Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:49,710Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:49,710Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:49,767Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:49,773Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:49,774Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:49,775Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:49,788Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:49,788Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:49,873Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:49,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:49,880Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074509880) {}
[INFO ] 2019-08-17T20:41:49,882Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:49,888Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074509880) {}
[INFO ] 2019-08-17T20:41:49,897Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:49,901Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074509880) {}
[INFO ] 2019-08-17T20:41:49,906Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:49,939Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:49,949Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074509880) {}
[INFO ] 2019-08-17T20:41:49,953Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074508665) {}
[INFO ] 2019-08-17T20:41:49,955Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:49,966Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074509880) {}
[INFO ] 2019-08-17T20:41:49,967Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:49,975Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074509300) {}
[INFO ] 2019-08-17T20:41:49,977Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:49,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074509880) {}
[INFO ] 2019-08-17T20:41:49,989Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:50,000Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074509880) {}
[INFO ] 2019-08-17T20:41:50,000Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:50,000Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074509880) {}
[INFO ] 2019-08-17T20:41:50,000Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:41:50,001Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:50,001Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:50,001Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:50,001Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:50,748Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=81f7e58a-aefd-4c55-910e-a4ed299ba3c4, invocation_id=e6e25222-9eeb-417b-ba80-398080f709c3, invocation_timestamp=2019-08-17T20:41:50.002Z, origin=Only For Testing, session_id=e6e25222-9eeb-417b-ba80-398080f709c3, session_timestamp=2019-08-17T20:41:50.002Z, thread-id=1062}
[INFO ] 2019-08-17T20:41:50,798Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[WARN ] 2019-08-17T20:41:50,798Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,808Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[WARN ] 2019-08-17T20:41:50,851Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,869Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=81f7e58a-aefd-4c55-910e-a4ed299ba3c4, invocation_id=e6e25222-9eeb-417b-ba80-398080f709c3, invocation_timestamp=2019-08-17T20:41:50.002Z, origin=Only For Testing, session_id=e6e25222-9eeb-417b-ba80-398080f709c3, session_timestamp=2019-08-17T20:41:50.002Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,869Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=81f7e58a-aefd-4c55-910e-a4ed299ba3c4, invocation_id=e6e25222-9eeb-417b-ba80-398080f709c3, invocation_timestamp=2019-08-17T20:41:50.002Z, origin=Only For Testing, session_id=e6e25222-9eeb-417b-ba80-398080f709c3, session_timestamp=2019-08-17T20:41:50.002Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,889Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=81f7e58a-aefd-4c55-910e-a4ed299ba3c4, invocation_id=e6e25222-9eeb-417b-ba80-398080f709c3, invocation_timestamp=2019-08-17T20:41:50.002Z, origin=Only For Testing, session_id=e6e25222-9eeb-417b-ba80-398080f709c3, session_timestamp=2019-08-17T20:41:50.002Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,909Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[WARN ] 2019-08-17T20:41:50,909Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,917Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,922Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,928Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=58bc8f76-5696-4ebf-928b-92cb09aeebdc, invocation_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, invocation_timestamp=2019-08-17T20:41:50.781Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6ebcbc94-7ea9-4a2f-b3d8-0fe3199b6f4d, session_timestamp=2019-08-17T20:41:50.781Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,942Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=81f7e58a-aefd-4c55-910e-a4ed299ba3c4, invocation_id=e6e25222-9eeb-417b-ba80-398080f709c3, invocation_timestamp=2019-08-17T20:41:50.002Z, origin=Only For Testing, session_id=e6e25222-9eeb-417b-ba80-398080f709c3, session_timestamp=2019-08-17T20:41:50.002Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:50,942Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=81f7e58a-aefd-4c55-910e-a4ed299ba3c4, invocation_id=e6e25222-9eeb-417b-ba80-398080f709c3, invocation_timestamp=2019-08-17T20:41:50.002Z, origin=Only For Testing, session_id=e6e25222-9eeb-417b-ba80-398080f709c3, session_timestamp=2019-08-17T20:41:50.002Z, thread-id=1062, tx_id=DE5E2852474B62BE9CA000251F11A5C387030DFBCE52E89D58B8C968E4ACD3B2}
[INFO ] 2019-08-17T20:41:51,019Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204150.958/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:41:51,019Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:51,019Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:51,041Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:51,041Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:51,063Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:51,067Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:51,070Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:51,074Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:50.958Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:51,418Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:51,420Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204150.958/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:51,420Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:51,421Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:51,422Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:51,422Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:51,488Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:51,494Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:51,510Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:51,516Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:51,516Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:51,599Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:51,602Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:51,602Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074511602) {}
[INFO ] 2019-08-17T20:41:51,603Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:51,613Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074511602) {}
[INFO ] 2019-08-17T20:41:51,620Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:51,622Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074511602) {}
[INFO ] 2019-08-17T20:41:51,625Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:51,653Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:51,654Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:41:51,654Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:41:51,659Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074511602) {}
[INFO ] 2019-08-17T20:41:51,661Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074511602) {}
[INFO ] 2019-08-17T20:41:51,661Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:51,661Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074511602) {}
[INFO ] 2019-08-17T20:41:51,661Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:51,664Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204150.958/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:41:51,664Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:51,665Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:51,686Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:51,687Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:51,701Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:51,707Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:51,724Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:51,726Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:50.958Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:51,960Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:51,961Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204150.958/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:51,961Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:51,962Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:51,963Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:51,963Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:52,013Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:52,019Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:52,020Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:52,021Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:52,033Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:52,034Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:52,158Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:52,162Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:52,162Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074512162) {}
[INFO ] 2019-08-17T20:41:52,163Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:52,168Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074512162) {}
[INFO ] 2019-08-17T20:41:52,175Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:52,182Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074512162) {}
[INFO ] 2019-08-17T20:41:52,189Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:52,219Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:52,224Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074512162) {}
[INFO ] 2019-08-17T20:41:52,225Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074511602) {}
[INFO ] 2019-08-17T20:41:52,226Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:52,235Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074512162) {}
[INFO ] 2019-08-17T20:41:52,235Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:52,240Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074512162) {}
[INFO ] 2019-08-17T20:41:52,240Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:52,240Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074512162) {}
[INFO ] 2019-08-17T20:41:52,240Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:52,244Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204150.958/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:41:52,244Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:52,244Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:52,266Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:52,266Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204150.958/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:52,287Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:52,293Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:52,313Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:52,318Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:50.958Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:52,587Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:52,590Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204150.958/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:52,590Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:52,591Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:52,592Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:52,592Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:52,698Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:52,709Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:52,711Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:52,712Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:52,742Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:52,742Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:52,907Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:52,912Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:52,912Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074512912) {}
[INFO ] 2019-08-17T20:41:52,914Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:52,935Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074512912) {}
[INFO ] 2019-08-17T20:41:52,949Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:52,954Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074512912) {}
[INFO ] 2019-08-17T20:41:52,958Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:52,998Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:53,005Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074512912) {}
[INFO ] 2019-08-17T20:41:53,007Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074511602) {}
[INFO ] 2019-08-17T20:41:53,008Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:53,016Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074512912) {}
[INFO ] 2019-08-17T20:41:53,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:53,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074512162) {}
[INFO ] 2019-08-17T20:41:53,026Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:53,035Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074512912) {}
[INFO ] 2019-08-17T20:41:53,036Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:53,042Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074512912) {}
[INFO ] 2019-08-17T20:41:53,042Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:53,042Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074512912) {}
[INFO ] 2019-08-17T20:41:53,042Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:41:53,043Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:53,043Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:53,043Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:53,043Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:53,732Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=b6960a70-d97f-4327-8a95-587eecaaa8b5, invocation_id=77097cf5-9c50-43f9-af74-1001f27e85e3, invocation_timestamp=2019-08-17T20:41:53.044Z, origin=Only For Testing, session_id=77097cf5-9c50-43f9-af74-1001f27e85e3, session_timestamp=2019-08-17T20:41:53.044Z, thread-id=1235}
[INFO ] 2019-08-17T20:41:53,755Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[WARN ] 2019-08-17T20:41:53,755Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,761Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[WARN ] 2019-08-17T20:41:53,787Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,797Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=b6960a70-d97f-4327-8a95-587eecaaa8b5, invocation_id=77097cf5-9c50-43f9-af74-1001f27e85e3, invocation_timestamp=2019-08-17T20:41:53.044Z, origin=Only For Testing, session_id=77097cf5-9c50-43f9-af74-1001f27e85e3, session_timestamp=2019-08-17T20:41:53.044Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,797Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=b6960a70-d97f-4327-8a95-587eecaaa8b5, invocation_id=77097cf5-9c50-43f9-af74-1001f27e85e3, invocation_timestamp=2019-08-17T20:41:53.044Z, origin=Only For Testing, session_id=77097cf5-9c50-43f9-af74-1001f27e85e3, session_timestamp=2019-08-17T20:41:53.044Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,808Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=b6960a70-d97f-4327-8a95-587eecaaa8b5, invocation_id=77097cf5-9c50-43f9-af74-1001f27e85e3, invocation_timestamp=2019-08-17T20:41:53.044Z, origin=Only For Testing, session_id=77097cf5-9c50-43f9-af74-1001f27e85e3, session_timestamp=2019-08-17T20:41:53.044Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,816Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[WARN ] 2019-08-17T20:41:53,816Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,820Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,823Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,826Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=ae159d89-4455-41cb-acc6-bc1ddc5f4359, invocation_id=9f218394-c8cf-43d7-8142-504e2e93087e, invocation_timestamp=2019-08-17T20:41:53.746Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9f218394-c8cf-43d7-8142-504e2e93087e, session_timestamp=2019-08-17T20:41:53.746Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,832Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=b6960a70-d97f-4327-8a95-587eecaaa8b5, invocation_id=77097cf5-9c50-43f9-af74-1001f27e85e3, invocation_timestamp=2019-08-17T20:41:53.044Z, origin=Only For Testing, session_id=77097cf5-9c50-43f9-af74-1001f27e85e3, session_timestamp=2019-08-17T20:41:53.044Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,832Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=b6960a70-d97f-4327-8a95-587eecaaa8b5, invocation_id=77097cf5-9c50-43f9-af74-1001f27e85e3, invocation_timestamp=2019-08-17T20:41:53.044Z, origin=Only For Testing, session_id=77097cf5-9c50-43f9-af74-1001f27e85e3, session_timestamp=2019-08-17T20:41:53.044Z, thread-id=1235, tx_id=95902E88C75A122EB7A882652D5B6E9CA5529017A899E5E956CA2F95B05F3F8C}
[INFO ] 2019-08-17T20:41:53,884Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204153.843/nodes/0/cordapps] {}
[INFO ] 2019-08-17T20:41:53,884Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:53,884Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:53,904Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:53,904Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:53,925Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:53,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:53,934Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:53,938Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:53.843Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:54,272Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:54,275Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204153.843/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:54,275Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:54,276Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:54,279Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,279Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,355Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,363Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:54,385Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:54,393Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,393Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,480Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,484Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:54,484Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074514484) {}
[INFO ] 2019-08-17T20:41:54,485Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:54,494Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074514484) {}
[INFO ] 2019-08-17T20:41:54,500Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:54,503Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074514484) {}
[INFO ] 2019-08-17T20:41:54,506Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:54,532Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:54,534Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-17T20:41:54,534Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-17T20:41:54,537Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074514484) {}
[INFO ] 2019-08-17T20:41:54,539Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074514484) {}
[INFO ] 2019-08-17T20:41:54,539Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:54,539Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074514484) {}
[INFO ] 2019-08-17T20:41:54,539Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:54,542Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204153.843/nodes/1/cordapps] {}
[INFO ] 2019-08-17T20:41:54,542Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:54,542Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:54,564Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:54,564Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:54,585Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:54,589Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:54,606Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:54,607Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:53.843Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:54,833Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:54,835Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204153.843/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:54,835Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:54,836Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:54,837Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,837Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,890Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:54,896Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:54,898Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:54,898Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:54,913Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:54,913Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:54,984Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:54,988Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:54,988Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074514988) {}
[INFO ] 2019-08-17T20:41:54,989Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:54,992Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074514988) {}
[INFO ] 2019-08-17T20:41:54,996Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:54,998Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074514988) {}
[INFO ] 2019-08-17T20:41:55,001Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:55,029Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:55,032Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074514988) {}
[INFO ] 2019-08-17T20:41:55,034Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074514484) {}
[INFO ] 2019-08-17T20:41:55,034Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:55,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074514988) {}
[INFO ] 2019-08-17T20:41:55,040Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:55,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074514988) {}
[INFO ] 2019-08-17T20:41:55,045Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:55,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074514988) {}
[INFO ] 2019-08-17T20:41:55,045Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:55,048Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190817-204153.843/nodes/2/cordapps] {}
[INFO ] 2019-08-17T20:41:55,048Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-17T20:41:55,048Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-17T20:41:55,070Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:55,070Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190817-204153.843/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-17T20:41:55,091Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-17T20:41:55,095Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-17T20:41:55,110Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-17T20:41:55,112Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-17T20:41:53.843Z
      epoch=1
  } {}
[INFO ] 2019-08-17T20:41:55,335Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-17T20:41:55,336Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190817-204153.843/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-17T20:41:55,336Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-17T20:41:55,337Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-17T20:41:55,338Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:55,338Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:55,385Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-17T20:41:55,390Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-17T20:41:55,391Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-17T20:41:55,392Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-17T20:41:55,406Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:55,406Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:55,478Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-17T20:41:55,481Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-17T20:41:55,481Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074515481) {}
[INFO ] 2019-08-17T20:41:55,482Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:55,486Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074515481) {}
[INFO ] 2019-08-17T20:41:55,490Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-17T20:41:55,493Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074515481) {}
[INFO ] 2019-08-17T20:41:55,496Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:55,522Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-17T20:41:55,526Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074515481) {}
[INFO ] 2019-08-17T20:41:55,528Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566074514484) {}
[INFO ] 2019-08-17T20:41:55,528Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:55,533Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074515481) {}
[INFO ] 2019-08-17T20:41:55,534Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:55,539Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566074514988) {}
[INFO ] 2019-08-17T20:41:55,539Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:55,544Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074515481) {}
[INFO ] 2019-08-17T20:41:55,544Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-17T20:41:55,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074515481) {}
[INFO ] 2019-08-17T20:41:55,549Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-17T20:41:55,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566074515481) {}
[INFO ] 2019-08-17T20:41:55,549Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-17T20:41:55,550Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:55,550Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:55,550Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-17T20:41:55,550Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-17T20:41:56,227Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0734d952-62ca-4c93-9d28-65d431885d7c, invocation_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, invocation_timestamp=2019-08-17T20:41:55.550Z, origin=Only For Testing, session_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, session_timestamp=2019-08-17T20:41:55.550Z, thread-id=1408}
[INFO ] 2019-08-17T20:41:56,259Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[WARN ] 2019-08-17T20:41:56,259Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,268Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[WARN ] 2019-08-17T20:41:56,306Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,321Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0734d952-62ca-4c93-9d28-65d431885d7c, invocation_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, invocation_timestamp=2019-08-17T20:41:55.550Z, origin=Only For Testing, session_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, session_timestamp=2019-08-17T20:41:55.550Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,321Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0734d952-62ca-4c93-9d28-65d431885d7c, invocation_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, invocation_timestamp=2019-08-17T20:41:55.550Z, origin=Only For Testing, session_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, session_timestamp=2019-08-17T20:41:55.550Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,334Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0734d952-62ca-4c93-9d28-65d431885d7c, invocation_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, invocation_timestamp=2019-08-17T20:41:55.550Z, origin=Only For Testing, session_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, session_timestamp=2019-08-17T20:41:55.550Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,343Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[WARN ] 2019-08-17T20:41:56,343Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,350Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,354Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,358Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=6fb11ba2-ae52-42bb-b35e-b55c5d0de822, invocation_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, invocation_timestamp=2019-08-17T20:41:56.248Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e592b36-f23a-40fb-9a97-e743f5be7d0c, session_timestamp=2019-08-17T20:41:56.248Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,367Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0734d952-62ca-4c93-9d28-65d431885d7c, invocation_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, invocation_timestamp=2019-08-17T20:41:55.550Z, origin=Only For Testing, session_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, session_timestamp=2019-08-17T20:41:55.550Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
[INFO ] 2019-08-17T20:41:56,367Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=0734d952-62ca-4c93-9d28-65d431885d7c, invocation_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, invocation_timestamp=2019-08-17T20:41:55.550Z, origin=Only For Testing, session_id=b4174239-4cc4-4cb7-b8f2-e66842facc51, session_timestamp=2019-08-17T20:41:55.550Z, thread-id=1408, tx_id=72F19A2850190EF5AE7EEEE3581B18956AD9F50EC127E0BDB96FDC68E7C373D3}
