[INFO ] 2019-08-19T08:08:15,556Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:08:15,672Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar {}
[INFO ] 2019-08-19T08:08:15,795Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:08:19,055Z [main] internal.Verifier. - Error validating transaction 280B15D8F586E4603D929227E5E9980E9765776295893B0AC12E8AB580AC3D6C. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:19,067Z [main] internal.Verifier. - Error validating transaction 280B15D8F586E4603D929227E5E9980E9765776295893B0AC12E8AB580AC3D6C. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:19,089Z [main] internal.Verifier. - Error validating transaction 280B15D8F586E4603D929227E5E9980E9765776295893B0AC12E8AB580AC3D6C. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:08:19,136Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:08:19,136Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar {}
[INFO ] 2019-08-19T08:08:19,166Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:08:19,214Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:08:19,215Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar {}
[INFO ] 2019-08-19T08:08:19,241Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:08:19,325Z [main] contracts.AttachmentConstraint. - Found state bootcamp.contracts.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2019-08-19T08:08:20,212Z [main] internal.Verifier. - Error validating transaction 1723975012AD1764D9D9ED1D3E3AE41F27D1CE82C2726CCEBC6A27A95101ABFB. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:32) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:20,234Z [main] internal.Verifier. - Error validating transaction 55DD855B2369B09D68823F67F4067F1C85CCB1481BECD1BA476600A7F78BAD3E. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:20,242Z [main] internal.Verifier. - Error validating transaction 55DD855B2369B09D68823F67F4067F1C85CCB1481BECD1BA476600A7F78BAD3E. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:20,258Z [main] internal.Verifier. - Error validating transaction 55DD855B2369B09D68823F67F4067F1C85CCB1481BECD1BA476600A7F78BAD3E. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:08:20,290Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:08:20,291Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar {}
[INFO ] 2019-08-19T08:08:20,316Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:08:20,394Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:08:20,406Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:08:21,656Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:08:21,657Z [main] internal.Verifier. - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.contracts.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-19T08:08:21,658Z [main] internal.Verifier. - Error validating transaction C2757A057A9B09B4344271E7719C8479813FBC753FD81BEC0BA6310FFC251766. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-19T08:08:21,662Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-19T08:08:21,662Z [main] internal.Verifier. - Error validating transaction C2757A057A9B09B4344271E7719C8479813FBC753FD81BEC0BA6310FFC251766. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2019-08-19T08:08:21,666Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:08:21,673Z [main] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-19T08:08:21,674Z [main] internal.Verifier. - Error validating transaction C2757A057A9B09B4344271E7719C8479813FBC753FD81BEC0BA6310FFC251766. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:08:21,701Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:08:21,701Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar {}
[INFO ] 2019-08-19T08:08:21,725Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:08:22,441Z [main] internal.Verifier. - Error validating transaction 48D055EDF40F53F1F5EE13F74E63295727FF5F7D6C83F9435920592282499F68. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:22,443Z [main] internal.Verifier. - Error validating transaction 48D055EDF40F53F1F5EE13F74E63295727FF5F7D6C83F9435920592282499F68. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:22,451Z [main] internal.Verifier. - Error validating transaction 48D055EDF40F53F1F5EE13F74E63295727FF5F7D6C83F9435920592282499F68. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:22,458Z [main] internal.Verifier. - Error validating transaction E003D3213309B455FA02D2EA03ED31877D70BEE9F2AA96FC7F971C270488663E. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:22,460Z [main] internal.Verifier. - Error validating transaction E003D3213309B455FA02D2EA03ED31877D70BEE9F2AA96FC7F971C270488663E. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:22,467Z [main] internal.Verifier. - Error validating transaction E003D3213309B455FA02D2EA03ED31877D70BEE9F2AA96FC7F971C270488663E. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:08:22,503Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:08:22,504Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar {}
[INFO ] 2019-08-19T08:08:22,531Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:08:23,120Z [main] internal.Verifier. - Error validating transaction A6C638C91CAADA9871433470F63B0B4E66F67B75680B3FEB1D038E5EF6A32423. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:23,122Z [main] internal.Verifier. - Error validating transaction A6C638C91CAADA9871433470F63B0B4E66F67B75680B3FEB1D038E5EF6A32423. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:23,129Z [main] internal.Verifier. - Error validating transaction A6C638C91CAADA9871433470F63B0B4E66F67B75680B3FEB1D038E5EF6A32423. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:23,140Z [main] internal.Verifier. - Error validating transaction 5059DB706564F2E230FADD61FD593D8ECF008EAF58FCACF1840F8698B9D2094D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:23,143Z [main] internal.Verifier. - Error validating transaction 5059DB706564F2E230FADD61FD593D8ECF008EAF58FCACF1840F8698B9D2094D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:23,150Z [main] internal.Verifier. - Error validating transaction 5059DB706564F2E230FADD61FD593D8ECF008EAF58FCACF1840F8698B9D2094D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:08:23,184Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:08:23,184Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar {}
[INFO ] 2019-08-19T08:08:23,211Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:08:23,802Z [main] internal.Verifier. - Error validating transaction 2C8F0D96670F9D54F3ADE39745674A0F8EF76CA910A926109EC00344C3D7D3F7. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:23,804Z [main] internal.Verifier. - Error validating transaction 2C8F0D96670F9D54F3ADE39745674A0F8EF76CA910A926109EC00344C3D7D3F7. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:23,809Z [main] internal.Verifier. - Error validating transaction 2C8F0D96670F9D54F3ADE39745674A0F8EF76CA910A926109EC00344C3D7D3F7. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:08:23,829Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:08:23,829Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-080815.063/custom-cordapp_1_4_d8d1accc-30fc-4c98-9710-e32d89c8ca41.jar {}
[INFO ] 2019-08-19T08:08:23,852Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:08:24,439Z [main] internal.Verifier. - Error validating transaction 25294C0F4AA11BED9D7E1611556294B8ED5C94AE501BA8F74D460B23399ECFB4. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:24,443Z [main] internal.Verifier. - Error validating transaction 25294C0F4AA11BED9D7E1611556294B8ED5C94AE501BA8F74D460B23399ECFB4. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2019-08-19T08:08:24,453Z [main] internal.Verifier. - Error validating transaction 25294C0F4AA11BED9D7E1611556294B8ED5C94AE501BA8F74D460B23399ECFB4. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[main/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2019-08-19T08:09:04,634Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:09:06,034Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:09:07,569Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080854.661/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:09:07,575Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:09:07,598Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:09:07,669Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:09:07,671Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:09:07,718Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:09:07,722Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:09:08,470Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:09:08,542Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:09:08,709Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:08:54.435Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:09:12,722Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:09:12,727Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080854.661/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:09:12,727Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:09:12,728Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:09:12,784Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:12,788Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:14,779Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:15,375Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:09:15,428Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:09:15,449Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:09:15,449Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:09:15,751Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:09:15,761Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:09:15,762Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202155761) {}
[INFO ] 2019-08-19T08:09:15,767Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:15,926Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202155761) {}
[INFO ] 2019-08-19T08:09:15,987Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:09:16,007Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202155761) {}
[INFO ] 2019-08-19T08:09:16,041Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:09:16,071Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:09:16,076Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:09:16,079Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:09:16,477Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202155761) {}
[INFO ] 2019-08-19T08:09:16,493Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202155761) {}
[INFO ] 2019-08-19T08:09:16,494Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:09:16,494Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202155761) {}
[INFO ] 2019-08-19T08:09:16,494Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:09:16,504Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080854.661/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:09:16,505Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:09:16,505Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:09:16,540Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:09:16,540Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:09:16,577Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:09:16,584Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:09:16,620Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:09:16,623Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:08:54.435Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:09:17,068Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:09:17,073Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080854.661/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:09:17,073Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:09:17,075Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:09:17,077Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:17,077Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:17,184Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:17,194Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:09:17,196Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:09:17,197Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:09:17,219Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:09:17,219Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:09:17,358Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:09:17,362Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:09:17,362Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202157362) {}
[INFO ] 2019-08-19T08:09:17,365Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:17,374Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202157362) {}
[INFO ] 2019-08-19T08:09:17,384Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:09:17,389Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202157362) {}
[INFO ] 2019-08-19T08:09:17,395Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:09:17,427Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:09:17,436Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202157362) {}
[INFO ] 2019-08-19T08:09:17,439Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202155761) {}
[INFO ] 2019-08-19T08:09:17,441Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:17,450Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202157362) {}
[INFO ] 2019-08-19T08:09:17,451Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:17,465Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202157362) {}
[INFO ] 2019-08-19T08:09:17,465Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:09:17,465Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202157362) {}
[INFO ] 2019-08-19T08:09:17,465Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:09:17,470Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-080854.661/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:09:17,471Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:09:17,471Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:09:17,507Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:09:17,507Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-080854.661/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:09:17,546Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:09:17,554Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:09:17,578Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:09:17,582Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:08:54.435Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:09:17,960Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:09:17,963Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-080854.661/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:09:17,963Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:09:17,963Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:09:17,966Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:17,966Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:18,060Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:09:18,072Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:09:18,075Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:09:18,075Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:09:18,094Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:09:18,094Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:09:18,223Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:09:18,230Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:09:18,230Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202158230) {}
[INFO ] 2019-08-19T08:09:18,232Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:18,243Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202158230) {}
[INFO ] 2019-08-19T08:09:18,250Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:09:18,254Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202158230) {}
[INFO ] 2019-08-19T08:09:18,261Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:09:18,293Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:09:18,299Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202158230) {}
[INFO ] 2019-08-19T08:09:18,301Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202155761) {}
[INFO ] 2019-08-19T08:09:18,302Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:18,313Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202158230) {}
[INFO ] 2019-08-19T08:09:18,314Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:18,329Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202157362) {}
[INFO ] 2019-08-19T08:09:18,330Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:18,340Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202158230) {}
[INFO ] 2019-08-19T08:09:18,341Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:09:18,350Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202158230) {}
[INFO ] 2019-08-19T08:09:18,350Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:09:18,350Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202158230) {}
[INFO ] 2019-08-19T08:09:18,350Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:10:49,222Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:10:50,571Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:11:36,897Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:11:38,334Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:11:39,850Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081126.342/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:11:39,854Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:11:39,886Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:11:39,965Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:11:39,966Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:11:40,006Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:11:40,010Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:11:40,788Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:11:40,924Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:11:41,182Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:11:26.136Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:11:47,443Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:11:47,446Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081126.342/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:11:47,446Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:11:47,447Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:11:47,494Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:47,498Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:49,428Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:50,022Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:11:50,090Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:11:50,110Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:11:50,110Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:11:50,489Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:11:50,501Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:11:50,501Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202310501) {}
[INFO ] 2019-08-19T08:11:50,507Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:50,687Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202310501) {}
[INFO ] 2019-08-19T08:11:50,757Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:11:50,779Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202310501) {}
[INFO ] 2019-08-19T08:11:50,834Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:11:50,871Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:11:50,875Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:11:50,878Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:11:51,221Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202310501) {}
[INFO ] 2019-08-19T08:11:51,237Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202310501) {}
[INFO ] 2019-08-19T08:11:51,238Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:11:51,238Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202310501) {}
[INFO ] 2019-08-19T08:11:51,238Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:11:51,247Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081126.342/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:11:51,247Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:11:51,247Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:11:51,287Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:11:51,287Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:11:51,321Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:11:51,329Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:11:51,367Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:11:51,372Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:11:26.136Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:11:52,297Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:11:52,300Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081126.342/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:11:52,300Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:11:52,301Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:11:52,307Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:52,311Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:52,497Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:52,513Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:11:52,516Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:11:52,516Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:11:52,546Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:11:52,546Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:11:52,817Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:11:52,826Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:11:52,826Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202312826) {}
[INFO ] 2019-08-19T08:11:52,829Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:52,843Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202312826) {}
[INFO ] 2019-08-19T08:11:52,861Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:11:52,866Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202312826) {}
[INFO ] 2019-08-19T08:11:52,872Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:11:52,919Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:11:52,930Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202312826) {}
[INFO ] 2019-08-19T08:11:52,933Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202310501) {}
[INFO ] 2019-08-19T08:11:52,935Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:52,959Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202312826) {}
[INFO ] 2019-08-19T08:11:52,962Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:52,990Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202312826) {}
[INFO ] 2019-08-19T08:11:52,990Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:11:52,990Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202312826) {}
[INFO ] 2019-08-19T08:11:52,991Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:11:52,997Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081126.342/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:11:52,998Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:11:52,998Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:11:53,043Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:11:53,044Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081126.342/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:11:53,094Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:11:53,107Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:11:53,203Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:11:53,208Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:11:26.136Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:11:53,904Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:11:53,908Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081126.342/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:11:53,908Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:11:53,909Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:11:53,911Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:53,911Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:54,083Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:11:54,097Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:11:54,099Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:11:54,099Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:11:54,127Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:11:54,127Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:11:54,364Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:11:54,373Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:11:54,373Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202314373) {}
[INFO ] 2019-08-19T08:11:54,375Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:54,389Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202314373) {}
[INFO ] 2019-08-19T08:11:54,402Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:11:54,407Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202314373) {}
[INFO ] 2019-08-19T08:11:54,413Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:11:54,456Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:11:54,469Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202314373) {}
[INFO ] 2019-08-19T08:11:54,477Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202310501) {}
[INFO ] 2019-08-19T08:11:54,478Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:54,496Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202314373) {}
[INFO ] 2019-08-19T08:11:54,500Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:54,521Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202312826) {}
[INFO ] 2019-08-19T08:11:54,524Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:54,539Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202314373) {}
[INFO ] 2019-08-19T08:11:54,541Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:11:54,557Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202314373) {}
[INFO ] 2019-08-19T08:11:54,557Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:11:54,557Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202314373) {}
[INFO ] 2019-08-19T08:11:54,557Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:14,636Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:14:16,024Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:14:17,376Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081404.195/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:14:17,381Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:14:17,408Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:14:17,483Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:14:17,485Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:14:17,522Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:14:17,526Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:14:18,141Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:14:18,217Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:14:18,374Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:14:03.973Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:14:22,511Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:14:22,515Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081404.195/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:14:22,515Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:14:22,516Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:14:22,575Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:22,579Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:24,569Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:25,254Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:14:25,325Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:14:25,348Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:14:25,348Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:14:25,740Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:14:25,751Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:14:25,751Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202465751) {}
[INFO ] 2019-08-19T08:14:25,757Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:26,061Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202465751) {}
[INFO ] 2019-08-19T08:14:26,143Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:14:26,184Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202465751) {}
[INFO ] 2019-08-19T08:14:26,236Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:26,273Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:14:26,278Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:14:26,282Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:14:26,713Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202465751) {}
[INFO ] 2019-08-19T08:14:26,732Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202465751) {}
[INFO ] 2019-08-19T08:14:26,733Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:26,733Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202465751) {}
[INFO ] 2019-08-19T08:14:26,733Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:26,743Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081404.195/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:14:26,744Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:14:26,744Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:14:26,786Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:14:26,786Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:14:26,828Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:14:26,837Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:14:26,881Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:14:26,884Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:14:03.973Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:14:27,338Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:14:27,344Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081404.195/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:14:27,344Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:14:27,345Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:14:27,347Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:27,347Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:27,455Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:27,468Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:14:27,470Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:14:27,471Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:14:27,492Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:14:27,492Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:14:27,637Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:14:27,642Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:14:27,642Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202467642) {}
[INFO ] 2019-08-19T08:14:27,644Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:27,653Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202467642) {}
[INFO ] 2019-08-19T08:14:27,661Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:14:27,664Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202467642) {}
[INFO ] 2019-08-19T08:14:27,669Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:27,700Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:14:27,708Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202467642) {}
[INFO ] 2019-08-19T08:14:27,711Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202465751) {}
[INFO ] 2019-08-19T08:14:27,713Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:27,729Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202467642) {}
[INFO ] 2019-08-19T08:14:27,731Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:27,746Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202467642) {}
[INFO ] 2019-08-19T08:14:27,746Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:27,746Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202467642) {}
[INFO ] 2019-08-19T08:14:27,746Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:27,750Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081404.195/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:14:27,750Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:14:27,750Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:14:27,784Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:14:27,784Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081404.195/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:14:27,823Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:14:27,868Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:14:27,930Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:14:27,937Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:14:03.973Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:14:28,359Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:14:28,362Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081404.195/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:14:28,362Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:14:28,363Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:14:28,365Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:28,365Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:28,470Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:14:28,480Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:14:28,482Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:14:28,482Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:14:28,498Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:14:28,499Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:14:28,633Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:14:28,637Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:14:28,637Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202468637) {}
[INFO ] 2019-08-19T08:14:28,640Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:28,651Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202468637) {}
[INFO ] 2019-08-19T08:14:28,662Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:14:28,666Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202468637) {}
[INFO ] 2019-08-19T08:14:28,674Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:28,709Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:14:28,716Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202468637) {}
[INFO ] 2019-08-19T08:14:28,718Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202465751) {}
[INFO ] 2019-08-19T08:14:28,719Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:28,731Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202468637) {}
[INFO ] 2019-08-19T08:14:28,732Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:28,742Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202467642) {}
[INFO ] 2019-08-19T08:14:28,744Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:28,754Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202468637) {}
[INFO ] 2019-08-19T08:14:28,755Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:14:28,764Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202468637) {}
[INFO ] 2019-08-19T08:14:28,764Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:14:28,764Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202468637) {}
[INFO ] 2019-08-19T08:14:28,764Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:06,609Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:16:08,219Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:16:09,801Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081556.237/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:16:09,807Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:09,837Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:09,937Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:09,939Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:09,986Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:16:09,991Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:16:10,698Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:10,770Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:10,962Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:15:56.041Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:15,556Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:15,562Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081556.237/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:15,562Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:15,564Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:15,643Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:15,652Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:17,840Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:18,462Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:18,522Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:18,540Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:18,540Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:18,866Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:18,877Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:18,877Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202578877) {}
[INFO ] 2019-08-19T08:16:18,883Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:19,056Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202578877) {}
[INFO ] 2019-08-19T08:16:19,119Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:19,138Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202578877) {}
[INFO ] 2019-08-19T08:16:19,173Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:19,205Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:19,209Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:16:19,213Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:16:19,613Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202578877) {}
[INFO ] 2019-08-19T08:16:19,632Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202578877) {}
[INFO ] 2019-08-19T08:16:19,634Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:19,634Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202578877) {}
[INFO ] 2019-08-19T08:16:19,634Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:19,644Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081556.237/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:16:19,645Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:19,645Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:19,677Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:19,677Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:19,710Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:19,716Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:19,753Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:19,757Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:15:56.041Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:20,265Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:20,269Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081556.237/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:20,269Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:20,270Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:20,272Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:20,272Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:20,376Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:20,386Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:20,389Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:20,389Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:20,413Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:20,413Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:20,568Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:20,574Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:20,574Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202580574) {}
[INFO ] 2019-08-19T08:16:20,575Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:20,583Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202580574) {}
[INFO ] 2019-08-19T08:16:20,591Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:20,595Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202580574) {}
[INFO ] 2019-08-19T08:16:20,601Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:20,635Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:20,647Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202580574) {}
[INFO ] 2019-08-19T08:16:20,650Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202578877) {}
[INFO ] 2019-08-19T08:16:20,652Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:20,665Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202580574) {}
[INFO ] 2019-08-19T08:16:20,666Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:20,680Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202580574) {}
[INFO ] 2019-08-19T08:16:20,680Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:20,680Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202580574) {}
[INFO ] 2019-08-19T08:16:20,680Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:20,686Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081556.237/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:16:20,686Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:20,686Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:20,719Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:20,719Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081556.237/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:20,756Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:20,764Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:20,788Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:20,792Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:15:56.041Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:21,213Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:21,215Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081556.237/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:21,215Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:21,217Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:21,219Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:21,219Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:21,329Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:21,339Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:21,340Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:21,341Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:21,358Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:21,358Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:21,516Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:21,521Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:21,521Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202581521) {}
[INFO ] 2019-08-19T08:16:21,523Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:21,532Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202581521) {}
[INFO ] 2019-08-19T08:16:21,541Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:21,546Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202581521) {}
[INFO ] 2019-08-19T08:16:21,552Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:21,582Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:21,590Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202581521) {}
[INFO ] 2019-08-19T08:16:21,592Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202578877) {}
[INFO ] 2019-08-19T08:16:21,593Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:21,604Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202581521) {}
[INFO ] 2019-08-19T08:16:21,606Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:21,616Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202580574) {}
[INFO ] 2019-08-19T08:16:21,617Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:21,627Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202581521) {}
[INFO ] 2019-08-19T08:16:21,628Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:21,636Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202581521) {}
[INFO ] 2019-08-19T08:16:21,636Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:21,636Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202581521) {}
[INFO ] 2019-08-19T08:16:21,636Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:21,755Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081621.672/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:16:21,755Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:21,755Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:21,789Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:21,789Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:21,828Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:21,835Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:21,838Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:21,844Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:21.671Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:22,268Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:22,269Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081621.672/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:22,269Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:22,270Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:22,272Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:22,272Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:22,347Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:22,355Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:22,378Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:22,385Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:22,385Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:22,496Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:22,501Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:22,501Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202582501) {}
[INFO ] 2019-08-19T08:16:22,503Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:22,519Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202582501) {}
[INFO ] 2019-08-19T08:16:22,531Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:22,535Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202582501) {}
[INFO ] 2019-08-19T08:16:22,539Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:22,570Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:22,571Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:16:22,571Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:16:22,577Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202582501) {}
[INFO ] 2019-08-19T08:16:22,579Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202582501) {}
[INFO ] 2019-08-19T08:16:22,579Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:22,579Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202582501) {}
[INFO ] 2019-08-19T08:16:22,579Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:22,583Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081621.672/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:16:22,583Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:22,583Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:22,616Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:22,616Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:22,650Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:22,656Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:22,674Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:22,677Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:21.671Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:23,009Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:23,014Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081621.672/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:23,014Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:23,015Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:23,017Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:23,017Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:23,099Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:23,107Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:23,109Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:23,109Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:23,124Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:23,124Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:23,224Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:23,228Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:23,228Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202583228) {}
[INFO ] 2019-08-19T08:16:23,229Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:23,234Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202583228) {}
[INFO ] 2019-08-19T08:16:23,241Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:23,245Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202583228) {}
[INFO ] 2019-08-19T08:16:23,251Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:23,284Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:23,291Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202583228) {}
[INFO ] 2019-08-19T08:16:23,296Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202582501) {}
[INFO ] 2019-08-19T08:16:23,297Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:23,307Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202583228) {}
[INFO ] 2019-08-19T08:16:23,308Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:23,316Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202583228) {}
[INFO ] 2019-08-19T08:16:23,316Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:23,316Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202583228) {}
[INFO ] 2019-08-19T08:16:23,316Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:23,320Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081621.672/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:16:23,320Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:23,320Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:23,351Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:23,351Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081621.672/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:23,389Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:23,395Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:23,418Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:23,421Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:21.671Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:23,716Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:23,717Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081621.672/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:23,717Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:23,718Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:23,720Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:23,720Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:23,778Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:23,785Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:23,786Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:23,787Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:23,802Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:23,802Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:23,903Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:23,907Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:23,907Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202583907) {}
[INFO ] 2019-08-19T08:16:23,909Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:23,914Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202583907) {}
[INFO ] 2019-08-19T08:16:23,920Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:23,923Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202583907) {}
[INFO ] 2019-08-19T08:16:23,928Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:23,963Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:23,971Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202583907) {}
[INFO ] 2019-08-19T08:16:23,973Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202582501) {}
[INFO ] 2019-08-19T08:16:23,974Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:23,981Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202583907) {}
[INFO ] 2019-08-19T08:16:23,982Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:23,992Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202583228) {}
[INFO ] 2019-08-19T08:16:23,993Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:24,002Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202583907) {}
[INFO ] 2019-08-19T08:16:24,003Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:24,010Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202583907) {}
[INFO ] 2019-08-19T08:16:24,010Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:24,010Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202583907) {}
[INFO ] 2019-08-19T08:16:24,010Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:24,103Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081624.023/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:16:24,103Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:24,103Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:24,137Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:24,137Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:24,175Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:24,181Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:24,185Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:24,189Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:24.022Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:24,601Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:24,602Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081624.023/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:24,602Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:24,603Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:24,605Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:24,605Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:24,678Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:24,686Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:24,702Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:24,708Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:24,708Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:24,810Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:24,814Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:24,814Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202584814) {}
[INFO ] 2019-08-19T08:16:24,816Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:24,830Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202584814) {}
[INFO ] 2019-08-19T08:16:24,843Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:24,847Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202584814) {}
[INFO ] 2019-08-19T08:16:24,851Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:24,884Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:24,887Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:16:24,887Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:16:24,894Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202584814) {}
[INFO ] 2019-08-19T08:16:24,897Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202584814) {}
[INFO ] 2019-08-19T08:16:24,897Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:24,897Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202584814) {}
[INFO ] 2019-08-19T08:16:24,897Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:24,901Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081624.023/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:16:24,901Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:24,901Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:24,937Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:24,937Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:24,973Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:24,979Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:25,000Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:25,003Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:24.022Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:25,338Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:25,341Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081624.023/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:25,341Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:25,342Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:25,346Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:25,346Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:25,434Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:25,448Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:25,451Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:25,451Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:25,471Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:25,471Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:25,572Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:25,576Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:25,576Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202585576) {}
[INFO ] 2019-08-19T08:16:25,578Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:25,585Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202585576) {}
[INFO ] 2019-08-19T08:16:25,590Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:25,594Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202585576) {}
[INFO ] 2019-08-19T08:16:25,598Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:25,634Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:25,641Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202585576) {}
[INFO ] 2019-08-19T08:16:25,643Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202584814) {}
[INFO ] 2019-08-19T08:16:25,644Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:25,651Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202585576) {}
[INFO ] 2019-08-19T08:16:25,652Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:25,659Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202585576) {}
[INFO ] 2019-08-19T08:16:25,659Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:25,659Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202585576) {}
[INFO ] 2019-08-19T08:16:25,659Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:25,662Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081624.023/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:16:25,663Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:25,663Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:25,699Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:25,700Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081624.023/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:25,738Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:25,744Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:25,764Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:25,766Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:24.022Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:26,078Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:26,081Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081624.023/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:26,081Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:26,082Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:26,083Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:26,083Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:26,148Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:26,154Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:26,156Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:26,156Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:26,170Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:26,170Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:26,278Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:26,282Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:26,282Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202586282) {}
[INFO ] 2019-08-19T08:16:26,285Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:26,293Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202586282) {}
[INFO ] 2019-08-19T08:16:26,299Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:26,302Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202586282) {}
[INFO ] 2019-08-19T08:16:26,305Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:26,341Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:26,351Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202586282) {}
[INFO ] 2019-08-19T08:16:26,354Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202584814) {}
[INFO ] 2019-08-19T08:16:26,354Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:26,363Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202586282) {}
[INFO ] 2019-08-19T08:16:26,364Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:26,371Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202585576) {}
[INFO ] 2019-08-19T08:16:26,372Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:26,379Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202586282) {}
[INFO ] 2019-08-19T08:16:26,379Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:26,386Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202586282) {}
[INFO ] 2019-08-19T08:16:26,386Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:26,386Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202586282) {}
[INFO ] 2019-08-19T08:16:26,386Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:26,470Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081626.397/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:16:26,470Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:26,470Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:26,502Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:26,502Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:26,538Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:26,544Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:26,548Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:26,552Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:26.397Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:26,868Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:26,870Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081626.397/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:26,870Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:26,871Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:26,872Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:26,872Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:26,928Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:26,934Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:26,954Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:26,961Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:26,961Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:27,065Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:27,070Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:27,070Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202587070) {}
[INFO ] 2019-08-19T08:16:27,072Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:27,087Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202587070) {}
[INFO ] 2019-08-19T08:16:27,096Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:27,099Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202587070) {}
[INFO ] 2019-08-19T08:16:27,102Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:27,133Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:27,134Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:16:27,134Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:16:27,138Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202587070) {}
[INFO ] 2019-08-19T08:16:27,139Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202587070) {}
[INFO ] 2019-08-19T08:16:27,139Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:27,139Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202587070) {}
[INFO ] 2019-08-19T08:16:27,139Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:27,142Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081626.397/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:16:27,143Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:27,143Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:27,175Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:27,175Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:27,213Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:27,218Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:27,235Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:27,239Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:26.397Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:27,498Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:27,500Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081626.397/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:27,500Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:27,501Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:27,502Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:27,502Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:27,555Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:27,560Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:27,561Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:27,562Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:27,574Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:27,574Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:27,648Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:27,652Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:27,652Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202587652) {}
[INFO ] 2019-08-19T08:16:27,654Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:27,659Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202587652) {}
[INFO ] 2019-08-19T08:16:27,664Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:27,666Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202587652) {}
[INFO ] 2019-08-19T08:16:27,670Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:27,700Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:27,705Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202587652) {}
[INFO ] 2019-08-19T08:16:27,707Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202587070) {}
[INFO ] 2019-08-19T08:16:27,708Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:27,714Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202587652) {}
[INFO ] 2019-08-19T08:16:27,715Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:27,721Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202587652) {}
[INFO ] 2019-08-19T08:16:27,721Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:27,721Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202587652) {}
[INFO ] 2019-08-19T08:16:27,721Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:27,724Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081626.397/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:16:27,724Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:27,725Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:27,755Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:27,756Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081626.397/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:27,790Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:27,796Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:27,812Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:27,814Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:26.397Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:28,069Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:28,071Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081626.397/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:28,071Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:28,072Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:28,073Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,073Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,121Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,126Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:28,127Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:28,128Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:28,140Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:28,140Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:28,216Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:28,220Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:28,220Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202588220) {}
[INFO ] 2019-08-19T08:16:28,221Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:28,225Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202588220) {}
[INFO ] 2019-08-19T08:16:28,229Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:28,231Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202588220) {}
[INFO ] 2019-08-19T08:16:28,234Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:28,264Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:28,270Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202588220) {}
[INFO ] 2019-08-19T08:16:28,271Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202587070) {}
[INFO ] 2019-08-19T08:16:28,272Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:28,278Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202588220) {}
[INFO ] 2019-08-19T08:16:28,279Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:28,286Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202587652) {}
[INFO ] 2019-08-19T08:16:28,286Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:28,293Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202588220) {}
[INFO ] 2019-08-19T08:16:28,293Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:28,300Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202588220) {}
[INFO ] 2019-08-19T08:16:28,300Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:28,300Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202588220) {}
[INFO ] 2019-08-19T08:16:28,300Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:28,378Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081628.309/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:16:28,378Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:28,378Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:28,411Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:28,411Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:28,445Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:28,451Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:28,454Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:28,461Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:28.308Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:28,724Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:28,727Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081628.309/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:28,727Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:28,728Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:28,730Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,730Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,779Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,785Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:28,798Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:28,803Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,803Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,873Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:28,876Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:28,876Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202588876) {}
[INFO ] 2019-08-19T08:16:28,877Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:28,885Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202588876) {}
[INFO ] 2019-08-19T08:16:28,891Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:28,893Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202588876) {}
[INFO ] 2019-08-19T08:16:28,896Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:28,925Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:28,927Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:16:28,927Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:16:28,931Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202588876) {}
[INFO ] 2019-08-19T08:16:28,933Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202588876) {}
[INFO ] 2019-08-19T08:16:28,933Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:28,933Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202588876) {}
[INFO ] 2019-08-19T08:16:28,933Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:28,937Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081628.309/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:16:28,937Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:28,937Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:28,970Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:28,970Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:29,008Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:29,012Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:29,027Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:29,029Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:28.308Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:29,255Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:29,257Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081628.309/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:29,257Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:29,257Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:29,259Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:29,259Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:29,312Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:29,318Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:29,319Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:29,319Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:29,332Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:29,332Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:29,417Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:29,421Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:29,421Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202589421) {}
[INFO ] 2019-08-19T08:16:29,423Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:29,427Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202589421) {}
[INFO ] 2019-08-19T08:16:29,431Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:29,433Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202589421) {}
[INFO ] 2019-08-19T08:16:29,436Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:29,467Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:29,470Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202589421) {}
[INFO ] 2019-08-19T08:16:29,471Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202588876) {}
[INFO ] 2019-08-19T08:16:29,472Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:29,477Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202589421) {}
[INFO ] 2019-08-19T08:16:29,477Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:29,482Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202589421) {}
[INFO ] 2019-08-19T08:16:29,482Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:29,482Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202589421) {}
[INFO ] 2019-08-19T08:16:29,482Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:29,484Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081628.309/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:16:29,484Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:29,484Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:29,515Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:29,515Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081628.309/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:29,547Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:29,552Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:29,566Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:29,568Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:28.308Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:29,817Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:29,818Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081628.309/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:29,818Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:29,818Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:29,820Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:29,820Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:29,873Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:29,879Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:29,880Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:29,880Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:29,893Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:29,893Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:29,972Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:29,975Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:29,975Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202589975) {}
[INFO ] 2019-08-19T08:16:29,976Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:29,980Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202589975) {}
[INFO ] 2019-08-19T08:16:29,983Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:29,986Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202589975) {}
[INFO ] 2019-08-19T08:16:29,988Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:30,017Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:30,022Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202589975) {}
[INFO ] 2019-08-19T08:16:30,023Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202588876) {}
[INFO ] 2019-08-19T08:16:30,024Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:30,029Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202589975) {}
[INFO ] 2019-08-19T08:16:30,029Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:30,034Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202589421) {}
[INFO ] 2019-08-19T08:16:30,034Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:30,038Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202589975) {}
[INFO ] 2019-08-19T08:16:30,038Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:30,081Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202589975) {}
[INFO ] 2019-08-19T08:16:30,081Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:30,082Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202589975) {}
[INFO ] 2019-08-19T08:16:30,082Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:30,219Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081630.115/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:16:30,219Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:30,219Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:30,253Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:30,253Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:30,290Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:30,296Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:30,299Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:30,302Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:30.114Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:30,525Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:30,526Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081630.115/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:30,526Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:30,527Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:30,528Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:30,528Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:30,577Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:30,586Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:30,601Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:30,607Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:30,607Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:30,679Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:16:30,682Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:30,682Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202590682) {}
[INFO ] 2019-08-19T08:16:30,683Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:30,694Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202590682) {}
[INFO ] 2019-08-19T08:16:30,703Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:30,706Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202590682) {}
[INFO ] 2019-08-19T08:16:30,709Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:30,737Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:30,738Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:16:30,738Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:16:30,741Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202590682) {}
[INFO ] 2019-08-19T08:16:30,743Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202590682) {}
[INFO ] 2019-08-19T08:16:30,743Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:30,743Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202590682) {}
[INFO ] 2019-08-19T08:16:30,743Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:30,745Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081630.115/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:16:30,746Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:30,746Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:30,775Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:30,776Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:30,811Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:30,816Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:30,830Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:30,832Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:30.114Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:31,048Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:31,050Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081630.115/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:31,050Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:31,051Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:31,052Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:31,052Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:31,099Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:31,106Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:31,109Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:31,109Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:31,123Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:31,123Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:31,187Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:31,189Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:31,189Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202591189) {}
[INFO ] 2019-08-19T08:16:31,190Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:31,194Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202591189) {}
[INFO ] 2019-08-19T08:16:31,198Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:31,200Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202591189) {}
[INFO ] 2019-08-19T08:16:31,203Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:31,230Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:31,235Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202591189) {}
[INFO ] 2019-08-19T08:16:31,236Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202590682) {}
[INFO ] 2019-08-19T08:16:31,237Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:31,241Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202591189) {}
[INFO ] 2019-08-19T08:16:31,241Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:31,245Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202591189) {}
[INFO ] 2019-08-19T08:16:31,245Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:31,245Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202591189) {}
[INFO ] 2019-08-19T08:16:31,245Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:31,249Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081630.115/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:16:31,249Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:16:31,249Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:16:31,282Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:31,282Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081630.115/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:16:31,319Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:16:31,325Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:16:31,336Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:16:31,337Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:16:30.114Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:16:31,567Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:16:31,568Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081630.115/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:16:31,568Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:16:31,569Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:16:31,570Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:31,570Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:31,619Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:16:31,624Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:16:31,626Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:16:31,626Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:16:31,642Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:31,642Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:31,708Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:16:31,711Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:16:31,711Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202591711) {}
[INFO ] 2019-08-19T08:16:31,712Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:31,716Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202591711) {}
[INFO ] 2019-08-19T08:16:31,721Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:16:31,723Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202591711) {}
[INFO ] 2019-08-19T08:16:31,727Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:31,755Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:16:31,758Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202591711) {}
[INFO ] 2019-08-19T08:16:31,760Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202590682) {}
[INFO ] 2019-08-19T08:16:31,760Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:31,765Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202591711) {}
[INFO ] 2019-08-19T08:16:31,765Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:31,769Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202591189) {}
[INFO ] 2019-08-19T08:16:31,770Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:31,773Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202591711) {}
[INFO ] 2019-08-19T08:16:31,774Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:16:31,778Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202591711) {}
[INFO ] 2019-08-19T08:16:31,778Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:16:31,778Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202591711) {}
[INFO ] 2019-08-19T08:16:31,778Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:17:54,747Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:17:56,116Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:17:57,451Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081744.713/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:17:57,456Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:17:57,477Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:17:57,545Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:17:57,547Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:17:57,585Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:17:57,589Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:17:58,188Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:17:58,258Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:17:58,430Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:17:44.508Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:18:02,669Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:18:02,673Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081744.713/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:18:02,673Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:18:02,675Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:18:02,726Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:02,732Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:04,658Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:05,266Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:18:05,313Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:18:05,330Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:18:05,330Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:18:05,622Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:18:05,633Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:18:05,633Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202685633) {}
[INFO ] 2019-08-19T08:18:05,639Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:05,806Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202685633) {}
[INFO ] 2019-08-19T08:18:05,879Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:18:05,898Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202685633) {}
[INFO ] 2019-08-19T08:18:05,928Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:18:05,959Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:18:05,963Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:18:05,966Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:18:06,338Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202685633) {}
[INFO ] 2019-08-19T08:18:06,354Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202685633) {}
[INFO ] 2019-08-19T08:18:06,356Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:18:06,356Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202685633) {}
[INFO ] 2019-08-19T08:18:06,356Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:18:06,362Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081744.713/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:18:06,363Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:18:06,363Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:18:06,396Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:18:06,396Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:18:06,433Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:18:06,441Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:18:06,482Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:18:06,485Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:17:44.508Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:18:06,950Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:18:06,953Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081744.713/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:18:06,953Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:18:06,954Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:18:06,956Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:06,956Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:07,062Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:07,072Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:18:07,074Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:18:07,074Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:18:07,094Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:18:07,094Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:18:07,250Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:18:07,255Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:18:07,255Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202687255) {}
[INFO ] 2019-08-19T08:18:07,257Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:07,267Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202687255) {}
[INFO ] 2019-08-19T08:18:07,276Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:18:07,280Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202687255) {}
[INFO ] 2019-08-19T08:18:07,286Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:18:07,320Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:18:07,330Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202687255) {}
[INFO ] 2019-08-19T08:18:07,334Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202685633) {}
[INFO ] 2019-08-19T08:18:07,335Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:07,350Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202687255) {}
[INFO ] 2019-08-19T08:18:07,351Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:07,363Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202687255) {}
[INFO ] 2019-08-19T08:18:07,363Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:18:07,363Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202687255) {}
[INFO ] 2019-08-19T08:18:07,363Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:18:07,368Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081744.713/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:18:07,368Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:18:07,368Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:18:07,401Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:18:07,401Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081744.713/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:18:07,440Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:18:07,446Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:18:07,470Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:18:07,474Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:17:44.508Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:18:07,889Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:18:07,892Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081744.713/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:18:07,892Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:18:07,893Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:18:07,895Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:07,895Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:07,992Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:18:08,005Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:18:08,007Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:18:08,008Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:18:08,028Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:18:08,029Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:18:08,155Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:18:08,162Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:18:08,162Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202688162) {}
[INFO ] 2019-08-19T08:18:08,166Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:08,177Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202688162) {}
[INFO ] 2019-08-19T08:18:08,190Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:18:08,195Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202688162) {}
[INFO ] 2019-08-19T08:18:08,202Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:18:08,240Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=DB93F49514117ED74D01F565CACCC723CD29A2A01BE45DC8F403F4498FCBD75D uploader=app filename=null {}
[INFO ] 2019-08-19T08:18:08,251Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202688162) {}
[INFO ] 2019-08-19T08:18:08,253Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202685633) {}
[INFO ] 2019-08-19T08:18:08,255Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:08,266Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202688162) {}
[INFO ] 2019-08-19T08:18:08,267Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:08,278Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202687255) {}
[INFO ] 2019-08-19T08:18:08,279Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:08,289Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202688162) {}
[INFO ] 2019-08-19T08:18:08,290Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:18:08,300Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202688162) {}
[INFO ] 2019-08-19T08:18:08,300Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:18:08,300Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202688162) {}
[INFO ] 2019-08-19T08:18:08,300Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:28,144Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:19:35,548Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:19:38,910Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081918.055/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:19:38,915Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:19:38,938Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:19:39,001Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:19:39,002Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:19:39,041Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:19:39,044Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:19:39,614Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:19:39,686Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:19:39,850Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:19:17.845Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:19:44,180Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:19:44,184Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081918.055/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:19:44,184Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:19:44,185Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:19:44,236Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:44,240Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:46,038Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:46,690Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:19:46,749Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:19:46,769Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:19:46,770Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:19:47,130Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:19:47,145Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:19:47,146Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202787145) {}
[INFO ] 2019-08-19T08:19:47,151Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:47,354Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202787145) {}
[INFO ] 2019-08-19T08:19:47,408Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:19:47,426Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202787145) {}
[INFO ] 2019-08-19T08:19:47,456Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:47,483Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=5EA99FFB0F604409086DA187ACA6AD3BFD3C1FC4F9FE83C3C762E7DDAEE67C86 uploader=app filename=null {}
[INFO ] 2019-08-19T08:19:47,485Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:19:47,488Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:19:47,823Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202787145) {}
[INFO ] 2019-08-19T08:19:47,839Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202787145) {}
[INFO ] 2019-08-19T08:19:47,840Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:47,840Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202787145) {}
[INFO ] 2019-08-19T08:19:47,840Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:47,847Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081918.055/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:19:47,848Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:19:47,848Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:19:47,882Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:19:47,882Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:19:47,917Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:19:47,923Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:19:47,957Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:19:47,961Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:19:17.845Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:19:48,461Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:19:48,463Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081918.055/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:19:48,463Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:19:48,464Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:19:48,467Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:48,468Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:48,567Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:48,578Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:19:48,581Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:19:48,581Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:19:48,605Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:19:48,605Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:19:48,756Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:19:48,762Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:19:48,762Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202788762) {}
[INFO ] 2019-08-19T08:19:48,764Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:48,773Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202788762) {}
[INFO ] 2019-08-19T08:19:48,783Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:19:48,787Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202788762) {}
[INFO ] 2019-08-19T08:19:48,794Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:48,831Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=5EA99FFB0F604409086DA187ACA6AD3BFD3C1FC4F9FE83C3C762E7DDAEE67C86 uploader=app filename=null {}
[INFO ] 2019-08-19T08:19:48,844Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202788762) {}
[INFO ] 2019-08-19T08:19:48,847Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202787145) {}
[INFO ] 2019-08-19T08:19:48,848Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:48,863Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202788762) {}
[INFO ] 2019-08-19T08:19:48,865Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:48,878Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202788762) {}
[INFO ] 2019-08-19T08:19:48,878Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:48,878Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202788762) {}
[INFO ] 2019-08-19T08:19:48,878Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:48,882Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-081918.055/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:19:48,882Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:19:48,883Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:19:48,916Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:19:48,916Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-081918.055/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:19:48,952Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:19:48,958Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:19:48,983Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:19:48,988Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:19:17.845Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:19:49,431Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:19:49,433Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-081918.055/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:19:49,433Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:19:49,434Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:19:49,438Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:49,438Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:49,536Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:19:49,546Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:19:49,548Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:19:49,549Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:19:49,568Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:19:49,568Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:19:49,723Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:19:49,727Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:19:49,727Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202789727) {}
[INFO ] 2019-08-19T08:19:49,729Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:49,736Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202789727) {}
[INFO ] 2019-08-19T08:19:49,746Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:19:49,749Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202789727) {}
[INFO ] 2019-08-19T08:19:49,754Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:49,805Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=5EA99FFB0F604409086DA187ACA6AD3BFD3C1FC4F9FE83C3C762E7DDAEE67C86 uploader=app filename=null {}
[INFO ] 2019-08-19T08:19:49,812Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202789727) {}
[INFO ] 2019-08-19T08:19:49,815Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566202787145) {}
[INFO ] 2019-08-19T08:19:49,816Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:49,826Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202789727) {}
[INFO ] 2019-08-19T08:19:49,827Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:49,838Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566202788762) {}
[INFO ] 2019-08-19T08:19:49,839Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:49,849Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202789727) {}
[INFO ] 2019-08-19T08:19:49,851Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:19:49,860Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202789727) {}
[INFO ] 2019-08-19T08:19:49,860Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:19:49,860Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566202789727) {}
[INFO ] 2019-08-19T08:19:49,860Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:07,954Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:08,076Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar {}
[INFO ] 2019-08-19T08:23:08,212Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:23:12,774Z [Test worker] internal.Verifier. - Error validating transaction 1CA406F9FC1D85654A6499B7541663CF40A2A95464A3854E53D39DD2891438A4. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:12,782Z [Test worker] internal.Verifier. - Error validating transaction 1CA406F9FC1D85654A6499B7541663CF40A2A95464A3854E53D39DD2891438A4. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:75) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:12,806Z [Test worker] internal.Verifier. - Error validating transaction 1CA406F9FC1D85654A6499B7541663CF40A2A95464A3854E53D39DD2891438A4. [errorCode=z5z8xi, moreInformationAt=https://errors.corda.net/OS/4.0/z5z8xi] {}
java.lang.IllegalArgumentException: List has more than one element.
	at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:480) ~[kotlin-stdlib-1.2.71.jar:1.2.71-release-64 (1.2.71)]
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:67) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:70) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires one command in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires one command in the transaction(ContractTests.kt:69) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:23:12,872Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:12,872Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar {}
[INFO ] 2019-08-19T08:23:12,909Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:12,970Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:12,970Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar {}
[INFO ] 2019-08-19T08:23:12,996Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:23:13,102Z [Test worker] contracts.AttachmentConstraint. - Found state bootcamp.contracts.TokenContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2019-08-19T08:23:14,122Z [Test worker] internal.Verifier. - Error validating transaction 9439BB3459F7C4954920CF7C614E1EF58DA62D4A2EE921B999C8FBC050AD9D79. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:295) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:32) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:14,151Z [Test worker] internal.Verifier. - Error validating transaction 0BA09F22C9947181434D5DC182E2427CB3ACBA5CCFEA93B0E76FC74D50D98F8D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:14,160Z [Test worker] internal.Verifier. - Error validating transaction 0BA09F22C9947181434D5DC182E2427CB3ACBA5CCFEA93B0E76FC74D50D98F8D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:35) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:14,179Z [Test worker] internal.Verifier. - Error validating transaction 0BA09F22C9947181434D5DC182E2427CB3ACBA5CCFEA93B0E76FC74D50D98F8D. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have no input states
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:49) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:30) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires zero inputs in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires zero inputs in the transaction(ContractTests.kt:29) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:23:14,219Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:14,219Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar {}
[INFO ] 2019-08-19T08:23:14,248Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:23:14,308Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:23:14,317Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:23:15,140Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:23:15,141Z [Test worker] internal.Verifier. - State of class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled in TransactionState with bootcamp.contracts.TokenContract.  For details see: https://docs.corda.net/api-contract-constraints.html#contract-state-agreement {}
[ERROR] 2019-08-19T08:23:15,141Z [Test worker] internal.Verifier. - Error validating transaction 5644CAF504C0BC2F6A3D0461C4E96F6FABB465DF4234777F937C2A95742FAE21. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[WARN ] 2019-08-19T08:23:15,144Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-19T08:23:15,145Z [Test worker] internal.Verifier. - Error validating transaction 5644CAF504C0BC2F6A3D0461C4E96F6FABB465DF4234777F937C2A95742FAE21. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:94) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[WARN ] 2019-08-19T08:23:15,148Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[WARN ] 2019-08-19T08:23:15,157Z [Test worker] contracts.TransactionState. - State class net.corda.testing.contracts.DummyState belongs to contract net.corda.testing.contracts.DummyContract, but is bundled with contract bootcamp.contracts.TokenContract in TransactionState. Annotate DummyState with @BelongsToContract(bootcamp.contracts.TokenContract.class) to remove this warning. {}
[ERROR] 2019-08-19T08:23:15,158Z [Test worker] internal.Verifier. - Error validating transaction 5644CAF504C0BC2F6A3D0461C4E96F6FABB465DF4234777F937C2A95742FAE21. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Output must be a TokenState
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:53) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:90) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to be a token state$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to be a token state(ContractTests.kt:89) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:23:15,197Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:15,197Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar {}
[INFO ] 2019-08-19T08:23:15,267Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:23:16,470Z [Test worker] internal.Verifier. - Error validating transaction B94774E02740A8B47929C088ECEA156875367FFC89C286ECBB165E9D296424E4. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:16,472Z [Test worker] internal.Verifier. - Error validating transaction B94774E02740A8B47929C088ECEA156875367FFC89C286ECBB165E9D296424E4. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:171) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:16,484Z [Test worker] internal.Verifier. - Error validating transaction B94774E02740A8B47929C088ECEA156875367FFC89C286ECBB165E9D296424E4. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:167) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:16,496Z [Test worker] internal.Verifier. - Error validating transaction C547850A5B3748763822B825EC0FFCCB07C25FAB1A73DB48EE7E547444883F69. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:16,499Z [Test worker] internal.Verifier. - Error validating transaction C547850A5B3748763822B825EC0FFCCB07C25FAB1A73DB48EE7E547444883F69. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:178) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:16,506Z [Test worker] internal.Verifier. - Error validating transaction C547850A5B3748763822B825EC0FFCCB07C25FAB1A73DB48EE7E547444883F69. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Issuer must be required signer
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:55) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:174) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires issuer to be a required signer in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires issuer to be a required signer in the transaction(ContractTests.kt:166) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:23:16,558Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:16,558Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar {}
[INFO ] 2019-08-19T08:23:16,585Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:23:17,234Z [Test worker] internal.Verifier. - Error validating transaction 3D67D65B0E51FECC73BC76DF76C8E35F8B207DEF1418C285C39C812C6ED81E64. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:17,238Z [Test worker] internal.Verifier. - Error validating transaction 3D67D65B0E51FECC73BC76DF76C8E35F8B207DEF1418C285C39C812C6ED81E64. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:117) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:17,277Z [Test worker] internal.Verifier. - Error validating transaction 3D67D65B0E51FECC73BC76DF76C8E35F8B207DEF1418C285C39C812C6ED81E64. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:113) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:17,286Z [Test worker] internal.Verifier. - Error validating transaction 641CD1A2ED7656C0F491DF45C382E06A4168A74095D139B7A14F71671EC9D6BD. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:17,288Z [Test worker] internal.Verifier. - Error validating transaction 641CD1A2ED7656C0F491DF45C382E06A4168A74095D139B7A14F71671EC9D6BD. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:124) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1$2.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:17,295Z [Test worker] internal.Verifier. - Error validating transaction 641CD1A2ED7656C0F491DF45C382E06A4168A74095D139B7A14F71671EC9D6BD. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Amount must be positive
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:59) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:120) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction output to have a positive number$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction output to have a positive number(ContractTests.kt:112) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:23:17,331Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:17,331Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar {}
[INFO ] 2019-08-19T08:23:17,353Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:23:17,961Z [Test worker] internal.Verifier. - Error validating transaction 76728EA0AFCFEA19C9284BA6E26D95783A4EBB47FE4638B1244D259338539F0B. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:17,963Z [Test worker] internal.Verifier. - Error validating transaction 76728EA0AFCFEA19C9284BA6E26D95783A4EBB47FE4638B1244D259338539F0B. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:150) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:17,972Z [Test worker] internal.Verifier. - Error validating transaction 76728EA0AFCFEA19C9284BA6E26D95783A4EBB47FE4638B1244D259338539F0B. [errorCode=4j3f9d, moreInformationAt=https://errors.corda.net/OS/4.0/4j3f9d] {}
java.lang.IllegalStateException: Required bootcamp.contracts.TokenContract.Commands command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:69) ~[corda-core-4.0.jar:?]
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:23) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:146) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires the transaction command to be an issue command$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires the transaction command to be an issue command(ContractTests.kt:145) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:23:17,996Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:17,996Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/generated-custom-cordapps/20190819-082307.512/custom-cordapp_1_4_ac33be6f-2062-436d-97a6-63a97cf9aee7.jar {}
[INFO ] 2019-08-19T08:23:18,019Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[ERROR] 2019-08-19T08:23:18,610Z [Test worker] internal.Verifier. - Error validating transaction 68EB927332AE94C4CFE91C353EE30671E42722207DF9DAE5EECC9BBD46FDFA45. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:18,612Z [Test worker] internal.Verifier. - Error validating transaction 68EB927332AE94C4CFE91C353EE30671E42722207DF9DAE5EECC9BBD46FDFA45. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:139) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.fails(LedgerDSLInterpreter.kt:75) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.fails(TestDSL.kt:69) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TransactionDSL.fails(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:55) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:229) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:253) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[ERROR] 2019-08-19T08:23:18,620Z [Test worker] internal.Verifier. - Error validating transaction 68EB927332AE94C4CFE91C353EE30671E42722207DF9DAE5EECC9BBD46FDFA45. [errorCode=w7o5eg, moreInformationAt=https://errors.corda.net/OS/4.0/w7o5eg] {}
java.lang.IllegalArgumentException: Failed requirement: Transaction must have exactly one output
	at bootcamp.contracts.TokenContract.verify(TokenContract.kt:51) ~[bootcamp.contracts-kotlin.jar:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:377) ~[corda-core-4.0.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:71) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:173) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:160) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:128) ~[corda-core-4.0.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:125) ~[corda-core-4.0.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:95) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:257) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:289) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.0.jar:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:50) ~[test/:?]
	at bootcamp.tests.ContractTests$token contract requires on output in the transaction$1.invoke(ContractTests.kt:14) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:214) ~[corda-test-utils-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.0.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.0.jar:?]
	at bootcamp.tests.ContractTests.token contract requires on output in the transaction(ContractTests.kt:49) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:106) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:66) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[?:?]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:117) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[?:?]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_211]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[?:?]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_211]
[INFO ] 2019-08-19T08:23:25,850Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:23:27,904Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082318.667/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:23:27,907Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:27,913Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:27,938Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:27,938Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:27,961Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:23:27,961Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[WARN ] 2019-08-19T08:23:27,961Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract. {}
[WARN ] 2019-08-19T08:23:27,961Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Commands$Issue. {}
[WARN ] 2019-08-19T08:23:27,961Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Companion. {}
[WARN ] 2019-08-19T08:23:27,961Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.states.TokenState. {}
[WARN ] 2019-08-19T08:23:27,961Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.contracts.TokenContract$Commands. {}
[WARN ] 2019-08-19T08:23:27,961Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowInitiator. {}
[WARN ] 2019-08-19T08:23:27,962Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowResponder. {}
[WARN ] 2019-08-19T08:23:27,962Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[WARN ] 2019-08-19T08:23:27,962Z [Test worker] cordapp.CordappResolver. - More than one CorDapp registered for bootcamp.flows.TokenIssueFlowResponder$call$signTransactionFlow$1. {}
[INFO ] 2019-08-19T08:23:28,533Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:28,606Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:28,722Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:18.659Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:32,540Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:32,544Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082318.667/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:32,544Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:32,545Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:32,593Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:32,598Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:34,670Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:35,292Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:35,353Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:35,374Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:35,374Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:35,690Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:35,703Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:35,703Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203015703) {}
[INFO ] 2019-08-19T08:23:35,708Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:35,909Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203015703) {}
[INFO ] 2019-08-19T08:23:35,980Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:36,000Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203015703) {}
[INFO ] 2019-08-19T08:23:36,029Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:36,057Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:36,060Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:23:36,063Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:23:36,385Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203015703) {}
[INFO ] 2019-08-19T08:23:36,401Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203015703) {}
[INFO ] 2019-08-19T08:23:36,402Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:36,402Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203015703) {}
[INFO ] 2019-08-19T08:23:36,402Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:36,409Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082318.667/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:23:36,410Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:36,410Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:36,431Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:36,432Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:36,452Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:36,459Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:36,492Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:36,495Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:18.659Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:36,968Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:36,970Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082318.667/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:36,970Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:36,971Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:36,973Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:36,973Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:37,091Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:37,107Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:37,109Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:37,111Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:37,146Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:37,146Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:37,365Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:37,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:37,376Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203017376) {}
[INFO ] 2019-08-19T08:23:37,379Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:37,393Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203017376) {}
[INFO ] 2019-08-19T08:23:37,403Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:37,407Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203017376) {}
[INFO ] 2019-08-19T08:23:37,412Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:37,447Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:37,460Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203017376) {}
[INFO ] 2019-08-19T08:23:37,463Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203015703) {}
[INFO ] 2019-08-19T08:23:37,464Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:37,476Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203017376) {}
[INFO ] 2019-08-19T08:23:37,477Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:37,487Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203017376) {}
[INFO ] 2019-08-19T08:23:37,487Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:37,487Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203017376) {}
[INFO ] 2019-08-19T08:23:37,487Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:37,491Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082318.667/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:23:37,492Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:37,492Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:37,516Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:37,517Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082318.667/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:37,544Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:37,566Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:37,629Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:37,634Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:18.659Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:38,311Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:38,312Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082318.667/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:38,312Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:38,315Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:38,318Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:38,318Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:38,411Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:38,420Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:38,422Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:38,423Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:38,442Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:38,442Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:38,558Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:38,563Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:38,563Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203018563) {}
[INFO ] 2019-08-19T08:23:38,565Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:38,572Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203018563) {}
[INFO ] 2019-08-19T08:23:38,579Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:38,582Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203018563) {}
[INFO ] 2019-08-19T08:23:38,587Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:38,617Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:38,626Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203018563) {}
[INFO ] 2019-08-19T08:23:38,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203015703) {}
[INFO ] 2019-08-19T08:23:38,629Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:38,639Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203018563) {}
[INFO ] 2019-08-19T08:23:38,641Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:38,650Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203017376) {}
[INFO ] 2019-08-19T08:23:38,651Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:38,659Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203018563) {}
[INFO ] 2019-08-19T08:23:38,660Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:38,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203018563) {}
[INFO ] 2019-08-19T08:23:38,669Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:38,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203018563) {}
[INFO ] 2019-08-19T08:23:38,669Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:23:38,671Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:38,671Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:38,674Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:38,674Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:38,900Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=135683d7-80e9-4a99-8869-b9f04e2d6041, invocation_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, invocation_timestamp=2019-08-19T08:23:38.697Z, origin=Only For Testing, session_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, session_timestamp=2019-08-19T08:23:38.697Z, thread-id=541}
[WARN ] 2019-08-19T08:23:38,900Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=135683d7-80e9-4a99-8869-b9f04e2d6041, invocation_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, invocation_timestamp=2019-08-19T08:23:38.697Z, origin=Only For Testing, session_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, session_timestamp=2019-08-19T08:23:38.697Z, thread-id=541}
[WARN ] 2019-08-19T08:23:39,775Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=135683d7-80e9-4a99-8869-b9f04e2d6041, invocation_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, invocation_timestamp=2019-08-19T08:23:38.697Z, origin=Only For Testing, session_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, session_timestamp=2019-08-19T08:23:38.697Z, thread-id=541}
[INFO ] 2019-08-19T08:23:39,985Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[WARN ] 2019-08-19T08:23:39,995Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,018Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[WARN ] 2019-08-19T08:23:40,068Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,092Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=135683d7-80e9-4a99-8869-b9f04e2d6041, invocation_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, invocation_timestamp=2019-08-19T08:23:38.697Z, origin=Only For Testing, session_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, session_timestamp=2019-08-19T08:23:38.697Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,092Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=135683d7-80e9-4a99-8869-b9f04e2d6041, invocation_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, invocation_timestamp=2019-08-19T08:23:38.697Z, origin=Only For Testing, session_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, session_timestamp=2019-08-19T08:23:38.697Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,115Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=135683d7-80e9-4a99-8869-b9f04e2d6041, invocation_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, invocation_timestamp=2019-08-19T08:23:38.697Z, origin=Only For Testing, session_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, session_timestamp=2019-08-19T08:23:38.697Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,137Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[WARN ] 2019-08-19T08:23:40,137Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,144Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,149Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,154Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=a3bc636f-d348-4b3c-a242-2efdc90f3beb, invocation_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, invocation_timestamp=2019-08-19T08:23:39.916Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1017d7a5-7319-4f0d-b68f-2ca57bba66fc, session_timestamp=2019-08-19T08:23:39.916Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,181Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=135683d7-80e9-4a99-8869-b9f04e2d6041, invocation_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, invocation_timestamp=2019-08-19T08:23:38.697Z, origin=Only For Testing, session_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, session_timestamp=2019-08-19T08:23:38.697Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,181Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=135683d7-80e9-4a99-8869-b9f04e2d6041, invocation_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, invocation_timestamp=2019-08-19T08:23:38.697Z, origin=Only For Testing, session_id=9bd1a548-9b79-46b0-9f8b-8521ab5354fc, session_timestamp=2019-08-19T08:23:38.697Z, thread-id=541, tx_id=BEAD3888C4E98D3C2F24FE46C1E2DAB3852BA52B0DCF1D0BEFD8C798A1EF2E6F}
[INFO ] 2019-08-19T08:23:40,262Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082340.205/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:23:40,263Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:40,263Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:40,284Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:40,285Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:40,306Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:40,311Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:40,315Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:40,342Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:40.204Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:40,776Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:40,778Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082340.205/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:40,778Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:40,779Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:40,781Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:40,781Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:40,856Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:40,864Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:40,885Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:40,892Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:40,892Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:41,006Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:41,010Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:41,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203021010) {}
[INFO ] 2019-08-19T08:23:41,012Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:41,025Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203021010) {}
[INFO ] 2019-08-19T08:23:41,035Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:41,038Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203021010) {}
[INFO ] 2019-08-19T08:23:41,043Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:41,067Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:41,069Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:23:41,069Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:23:41,074Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203021010) {}
[INFO ] 2019-08-19T08:23:41,077Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203021010) {}
[INFO ] 2019-08-19T08:23:41,077Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:41,077Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203021010) {}
[INFO ] 2019-08-19T08:23:41,077Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:41,080Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082340.205/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:23:41,081Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:41,081Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:41,101Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:41,101Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:41,122Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:41,127Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:41,152Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:41,155Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:40.204Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:41,496Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:41,498Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082340.205/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:41,498Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:41,499Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:41,500Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:41,500Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:41,568Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:41,575Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:41,576Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:41,577Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:41,593Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:41,593Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:41,698Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:41,701Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:41,701Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203021701) {}
[INFO ] 2019-08-19T08:23:41,703Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:41,708Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203021701) {}
[INFO ] 2019-08-19T08:23:41,714Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:41,717Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203021701) {}
[INFO ] 2019-08-19T08:23:41,721Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:41,751Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:41,756Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203021701) {}
[INFO ] 2019-08-19T08:23:41,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203021010) {}
[INFO ] 2019-08-19T08:23:41,758Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:41,764Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203021701) {}
[INFO ] 2019-08-19T08:23:41,765Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:41,772Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203021701) {}
[INFO ] 2019-08-19T08:23:41,772Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:41,772Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203021701) {}
[INFO ] 2019-08-19T08:23:41,772Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:41,777Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082340.205/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:23:41,778Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:41,778Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:41,800Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:41,800Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082340.205/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:41,824Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:41,829Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:41,847Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:41,849Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:40.204Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:42,137Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:42,138Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082340.205/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:42,138Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:42,139Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:42,140Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:42,140Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:42,202Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:42,209Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:42,210Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:42,211Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:42,226Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:42,226Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:42,315Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:42,319Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:42,319Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203022319) {}
[INFO ] 2019-08-19T08:23:42,321Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:42,327Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203022319) {}
[INFO ] 2019-08-19T08:23:42,331Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:42,334Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203022319) {}
[INFO ] 2019-08-19T08:23:42,340Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:42,366Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:42,371Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203022319) {}
[INFO ] 2019-08-19T08:23:42,373Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203021010) {}
[INFO ] 2019-08-19T08:23:42,374Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:42,383Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203022319) {}
[INFO ] 2019-08-19T08:23:42,384Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:42,391Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203021701) {}
[INFO ] 2019-08-19T08:23:42,392Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:42,399Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203022319) {}
[INFO ] 2019-08-19T08:23:42,400Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:42,407Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203022319) {}
[INFO ] 2019-08-19T08:23:42,407Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:42,407Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203022319) {}
[INFO ] 2019-08-19T08:23:42,407Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:23:42,407Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:42,407Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:42,407Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:42,407Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:43,011Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c1bfcdf5-d723-48fa-b203-5e84bb71bafe, invocation_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, invocation_timestamp=2019-08-19T08:23:42.408Z, origin=Only For Testing, session_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, session_timestamp=2019-08-19T08:23:42.408Z, thread-id=716}
[INFO ] 2019-08-19T08:23:43,049Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[WARN ] 2019-08-19T08:23:43,049Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,056Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[WARN ] 2019-08-19T08:23:43,089Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,103Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c1bfcdf5-d723-48fa-b203-5e84bb71bafe, invocation_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, invocation_timestamp=2019-08-19T08:23:42.408Z, origin=Only For Testing, session_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, session_timestamp=2019-08-19T08:23:42.408Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,103Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c1bfcdf5-d723-48fa-b203-5e84bb71bafe, invocation_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, invocation_timestamp=2019-08-19T08:23:42.408Z, origin=Only For Testing, session_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, session_timestamp=2019-08-19T08:23:42.408Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,114Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c1bfcdf5-d723-48fa-b203-5e84bb71bafe, invocation_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, invocation_timestamp=2019-08-19T08:23:42.408Z, origin=Only For Testing, session_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, session_timestamp=2019-08-19T08:23:42.408Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,126Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[WARN ] 2019-08-19T08:23:43,126Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,131Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,135Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,139Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=8a796397-7c1d-4fa2-90bd-979329f71493, invocation_id=923537bb-cc16-43d2-bf15-a4be9e500c39, invocation_timestamp=2019-08-19T08:23:43.033Z, origin=O=Mock Company 1, L=London, C=GB, session_id=923537bb-cc16-43d2-bf15-a4be9e500c39, session_timestamp=2019-08-19T08:23:43.033Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,148Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c1bfcdf5-d723-48fa-b203-5e84bb71bafe, invocation_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, invocation_timestamp=2019-08-19T08:23:42.408Z, origin=Only For Testing, session_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, session_timestamp=2019-08-19T08:23:42.408Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,148Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=c1bfcdf5-d723-48fa-b203-5e84bb71bafe, invocation_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, invocation_timestamp=2019-08-19T08:23:42.408Z, origin=Only For Testing, session_id=35f3d276-c5f1-4fd2-bd72-59360273bcb4, session_timestamp=2019-08-19T08:23:42.408Z, thread-id=716, tx_id=82430C8374BB28839F4BFB746B7542F117567F4AB8FBFA18323133651D2EDC50}
[INFO ] 2019-08-19T08:23:43,210Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082343.164/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:23:43,210Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:43,210Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:43,231Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:43,231Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:43,252Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:43,257Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:43,261Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:43,266Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:43.163Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:43,640Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:43,642Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082343.164/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:43,642Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:43,643Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:43,644Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:43,644Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:43,707Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:43,714Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:43,732Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:43,739Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:43,739Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:43,834Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:43,838Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:43,838Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203023838) {}
[INFO ] 2019-08-19T08:23:43,840Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:43,851Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203023838) {}
[INFO ] 2019-08-19T08:23:43,857Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:43,859Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203023838) {}
[INFO ] 2019-08-19T08:23:43,863Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:43,899Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:43,901Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:23:43,901Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:23:43,906Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203023838) {}
[INFO ] 2019-08-19T08:23:43,908Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203023838) {}
[INFO ] 2019-08-19T08:23:43,908Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:43,908Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203023838) {}
[INFO ] 2019-08-19T08:23:43,908Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:43,912Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082343.164/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:23:43,912Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:43,912Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:43,933Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:43,934Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:43,953Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:43,959Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:43,979Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:43,981Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:43.163Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:44,255Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:44,256Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082343.164/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:44,256Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:44,256Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:44,258Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:44,258Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:44,324Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:44,334Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:44,337Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:44,337Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:44,353Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:44,353Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:44,440Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:44,444Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:44,444Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203024444) {}
[INFO ] 2019-08-19T08:23:44,445Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:44,451Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203024444) {}
[INFO ] 2019-08-19T08:23:44,456Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:44,458Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203024444) {}
[INFO ] 2019-08-19T08:23:44,462Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:44,493Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:44,499Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203024444) {}
[INFO ] 2019-08-19T08:23:44,501Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203023838) {}
[INFO ] 2019-08-19T08:23:44,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:44,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203024444) {}
[INFO ] 2019-08-19T08:23:44,509Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:44,515Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203024444) {}
[INFO ] 2019-08-19T08:23:44,515Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:44,515Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203024444) {}
[INFO ] 2019-08-19T08:23:44,515Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:44,518Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082343.164/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:23:44,519Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:44,519Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:44,538Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:44,538Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082343.164/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:44,559Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:44,564Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:44,582Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:44,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:43.163Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:44,861Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:44,862Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082343.164/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:44,862Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:44,863Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:44,864Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:44,864Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:44,926Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:44,932Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:44,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:44,934Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:44,946Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:44,947Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:45,034Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:45,038Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:45,038Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203025038) {}
[INFO ] 2019-08-19T08:23:45,040Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:45,044Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203025038) {}
[INFO ] 2019-08-19T08:23:45,049Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:45,052Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203025038) {}
[INFO ] 2019-08-19T08:23:45,055Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:45,084Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:45,088Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203025038) {}
[INFO ] 2019-08-19T08:23:45,090Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203023838) {}
[INFO ] 2019-08-19T08:23:45,091Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:45,097Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203025038) {}
[INFO ] 2019-08-19T08:23:45,098Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:45,104Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203024444) {}
[INFO ] 2019-08-19T08:23:45,105Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:45,111Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203025038) {}
[INFO ] 2019-08-19T08:23:45,112Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:45,118Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203025038) {}
[INFO ] 2019-08-19T08:23:45,118Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:45,118Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203025038) {}
[INFO ] 2019-08-19T08:23:45,118Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:23:45,118Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:45,118Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:45,118Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:45,118Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:45,774Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ba7fc31-8c67-487f-9d9b-af02110ffcfd, invocation_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, invocation_timestamp=2019-08-19T08:23:45.119Z, origin=Only For Testing, session_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, session_timestamp=2019-08-19T08:23:45.119Z, thread-id=889}
[INFO ] 2019-08-19T08:23:45,804Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[WARN ] 2019-08-19T08:23:45,804Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,810Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[WARN ] 2019-08-19T08:23:45,844Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,861Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ba7fc31-8c67-487f-9d9b-af02110ffcfd, invocation_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, invocation_timestamp=2019-08-19T08:23:45.119Z, origin=Only For Testing, session_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, session_timestamp=2019-08-19T08:23:45.119Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,861Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ba7fc31-8c67-487f-9d9b-af02110ffcfd, invocation_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, invocation_timestamp=2019-08-19T08:23:45.119Z, origin=Only For Testing, session_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, session_timestamp=2019-08-19T08:23:45.119Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,873Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ba7fc31-8c67-487f-9d9b-af02110ffcfd, invocation_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, invocation_timestamp=2019-08-19T08:23:45.119Z, origin=Only For Testing, session_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, session_timestamp=2019-08-19T08:23:45.119Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,884Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[WARN ] 2019-08-19T08:23:45,884Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,888Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,894Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,896Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=91a31e6e-d341-4e0f-88f6-7bb67bfa6a95, invocation_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, invocation_timestamp=2019-08-19T08:23:45.792Z, origin=O=Mock Company 1, L=London, C=GB, session_id=eec24623-c0cf-4e88-b5c4-b0ea56172fd9, session_timestamp=2019-08-19T08:23:45.792Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,903Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ba7fc31-8c67-487f-9d9b-af02110ffcfd, invocation_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, invocation_timestamp=2019-08-19T08:23:45.119Z, origin=Only For Testing, session_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, session_timestamp=2019-08-19T08:23:45.119Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,903Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=6ba7fc31-8c67-487f-9d9b-af02110ffcfd, invocation_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, invocation_timestamp=2019-08-19T08:23:45.119Z, origin=Only For Testing, session_id=d2ce2875-61f7-45d9-92a8-90304abf0fc1, session_timestamp=2019-08-19T08:23:45.119Z, thread-id=889, tx_id=80C64F9BA5BD0E3B55424570482D8035D85643E34CCF6BC28C0567774F399194}
[INFO ] 2019-08-19T08:23:45,951Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082345.913/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:23:45,952Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:45,952Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:45,972Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:45,972Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:45,992Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:45,998Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:46,001Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:46,005Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:45.913Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:46,278Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:46,279Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082345.913/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:46,279Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:46,280Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:46,281Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,281Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,340Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,347Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:46,366Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:46,372Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,372Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,461Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,465Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:46,465Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203026465) {}
[INFO ] 2019-08-19T08:23:46,467Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:46,476Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203026465) {}
[INFO ] 2019-08-19T08:23:46,482Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:46,485Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203026465) {}
[INFO ] 2019-08-19T08:23:46,488Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:46,516Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:46,517Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:23:46,517Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:23:46,522Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203026465) {}
[INFO ] 2019-08-19T08:23:46,525Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203026465) {}
[INFO ] 2019-08-19T08:23:46,525Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:46,525Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203026465) {}
[INFO ] 2019-08-19T08:23:46,525Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:46,528Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082345.913/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:23:46,528Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:46,529Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:46,550Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:46,550Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:46,570Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:46,576Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:46,591Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:46,593Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:45.913Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:46,852Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:46,853Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082345.913/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:46,853Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:46,854Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:46,855Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,855Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,914Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:46,920Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:46,922Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:46,922Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:46,936Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:46,937Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:47,019Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:47,024Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:47,024Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203027024) {}
[INFO ] 2019-08-19T08:23:47,025Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:47,029Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203027024) {}
[INFO ] 2019-08-19T08:23:47,033Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:47,036Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203027024) {}
[INFO ] 2019-08-19T08:23:47,039Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:47,069Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:47,074Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203027024) {}
[INFO ] 2019-08-19T08:23:47,077Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203026465) {}
[INFO ] 2019-08-19T08:23:47,078Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:47,084Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203027024) {}
[INFO ] 2019-08-19T08:23:47,085Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:47,090Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203027024) {}
[INFO ] 2019-08-19T08:23:47,090Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:47,090Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203027024) {}
[INFO ] 2019-08-19T08:23:47,090Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:47,093Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082345.913/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:23:47,094Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:47,094Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:47,116Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:47,116Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082345.913/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:47,137Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:47,142Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:47,159Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:47,161Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:45.913Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:47,416Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:47,417Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082345.913/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:47,417Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:47,418Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:47,419Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:47,419Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:47,479Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:47,487Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:47,489Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:47,489Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:47,503Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:47,503Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:47,578Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:47,582Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:47,582Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203027582) {}
[INFO ] 2019-08-19T08:23:47,620Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:47,624Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203027582) {}
[INFO ] 2019-08-19T08:23:47,628Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:47,630Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203027582) {}
[INFO ] 2019-08-19T08:23:47,634Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:47,662Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:47,667Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203027582) {}
[INFO ] 2019-08-19T08:23:47,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203026465) {}
[INFO ] 2019-08-19T08:23:47,670Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:47,677Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203027582) {}
[INFO ] 2019-08-19T08:23:47,678Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:47,685Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203027024) {}
[INFO ] 2019-08-19T08:23:47,685Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:47,691Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203027582) {}
[INFO ] 2019-08-19T08:23:47,691Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:47,697Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203027582) {}
[INFO ] 2019-08-19T08:23:47,697Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:47,697Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203027582) {}
[INFO ] 2019-08-19T08:23:47,697Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:23:47,697Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:47,697Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:47,697Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:47,697Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:48,250Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=336b6f5f-45b9-4fa0-9427-6391c720b92e, invocation_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, invocation_timestamp=2019-08-19T08:23:47.698Z, origin=Only For Testing, session_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, session_timestamp=2019-08-19T08:23:47.698Z, thread-id=1062}
[INFO ] 2019-08-19T08:23:48,279Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[WARN ] 2019-08-19T08:23:48,279Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,286Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[WARN ] 2019-08-19T08:23:48,311Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,320Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=336b6f5f-45b9-4fa0-9427-6391c720b92e, invocation_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, invocation_timestamp=2019-08-19T08:23:47.698Z, origin=Only For Testing, session_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, session_timestamp=2019-08-19T08:23:47.698Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,320Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=336b6f5f-45b9-4fa0-9427-6391c720b92e, invocation_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, invocation_timestamp=2019-08-19T08:23:47.698Z, origin=Only For Testing, session_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, session_timestamp=2019-08-19T08:23:47.698Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,329Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=336b6f5f-45b9-4fa0-9427-6391c720b92e, invocation_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, invocation_timestamp=2019-08-19T08:23:47.698Z, origin=Only For Testing, session_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, session_timestamp=2019-08-19T08:23:47.698Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,340Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[WARN ] 2019-08-19T08:23:48,340Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,345Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,349Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,354Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=35d7deb0-db65-4213-b9e2-b4236dfc17ed, invocation_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, invocation_timestamp=2019-08-19T08:23:48.268Z, origin=O=Mock Company 1, L=London, C=GB, session_id=63ea3c51-94a1-48e4-8f94-e2d48cc12fd8, session_timestamp=2019-08-19T08:23:48.268Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,360Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=336b6f5f-45b9-4fa0-9427-6391c720b92e, invocation_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, invocation_timestamp=2019-08-19T08:23:47.698Z, origin=Only For Testing, session_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, session_timestamp=2019-08-19T08:23:47.698Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,360Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=336b6f5f-45b9-4fa0-9427-6391c720b92e, invocation_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, invocation_timestamp=2019-08-19T08:23:47.698Z, origin=Only For Testing, session_id=3d2a1c24-bfe7-454b-bb7c-ef4e753ded1a, session_timestamp=2019-08-19T08:23:47.698Z, thread-id=1062, tx_id=B4074E6729AA066EE1CDD1AC04CDBD58B64122C5476A7B7349C625F3E5F49471}
[INFO ] 2019-08-19T08:23:48,415Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082348.375/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:23:48,415Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:48,415Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:48,438Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:48,438Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:48,458Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:48,462Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:48,465Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:48,469Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:48.374Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:48,751Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:48,752Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082348.375/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:48,752Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:48,752Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:48,754Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:48,754Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:48,802Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:48,810Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:48,825Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:48,831Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:48,831Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:48,915Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:48,918Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:48,918Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203028918) {}
[INFO ] 2019-08-19T08:23:48,919Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:48,929Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203028918) {}
[INFO ] 2019-08-19T08:23:48,936Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:48,939Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203028918) {}
[INFO ] 2019-08-19T08:23:48,942Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:48,963Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:48,964Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:23:48,964Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:23:48,969Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203028918) {}
[INFO ] 2019-08-19T08:23:48,971Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203028918) {}
[INFO ] 2019-08-19T08:23:48,971Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:48,971Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203028918) {}
[INFO ] 2019-08-19T08:23:48,971Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:48,975Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082348.375/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:23:48,975Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:48,975Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:48,995Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:48,995Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:49,016Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:49,021Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:49,038Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:49,039Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:48.374Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:49,290Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:49,291Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082348.375/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:49,291Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:49,292Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:49,293Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:49,293Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:49,343Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:49,349Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:49,350Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:49,351Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:49,365Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:49,365Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:49,443Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:49,448Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:49,448Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203029448) {}
[INFO ] 2019-08-19T08:23:49,450Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:49,454Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203029448) {}
[INFO ] 2019-08-19T08:23:49,458Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:49,461Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203029448) {}
[INFO ] 2019-08-19T08:23:49,464Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:49,492Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:49,496Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203029448) {}
[INFO ] 2019-08-19T08:23:49,498Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203028918) {}
[INFO ] 2019-08-19T08:23:49,498Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:49,504Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203029448) {}
[INFO ] 2019-08-19T08:23:49,505Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:49,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203029448) {}
[INFO ] 2019-08-19T08:23:49,509Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:49,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203029448) {}
[INFO ] 2019-08-19T08:23:49,509Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:49,513Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082348.375/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:23:49,513Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:49,513Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:49,528Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:49,528Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082348.375/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:49,550Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:49,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:49,571Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:49,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:48.374Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:49,808Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:49,810Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082348.375/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:49,810Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:49,810Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:49,811Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:49,811Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:49,873Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:49,878Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:49,879Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:49,880Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:49,893Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:49,893Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:49,977Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:49,981Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:49,981Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203029981) {}
[INFO ] 2019-08-19T08:23:49,982Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:49,987Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203029981) {}
[INFO ] 2019-08-19T08:23:49,991Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:49,994Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203029981) {}
[INFO ] 2019-08-19T08:23:49,998Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:50,026Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:50,030Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203029981) {}
[INFO ] 2019-08-19T08:23:50,031Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203028918) {}
[INFO ] 2019-08-19T08:23:50,032Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:50,037Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203029981) {}
[INFO ] 2019-08-19T08:23:50,038Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:50,042Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203029448) {}
[INFO ] 2019-08-19T08:23:50,043Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:50,048Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203029981) {}
[INFO ] 2019-08-19T08:23:50,050Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:50,056Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203029981) {}
[INFO ] 2019-08-19T08:23:50,056Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:50,056Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203029981) {}
[INFO ] 2019-08-19T08:23:50,056Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:23:50,056Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:50,056Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:50,056Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:50,056Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:50,602Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8d6dc25c-823a-4b1a-ae81-f0def88199f3, invocation_id=ea578f4c-3073-406a-a3a2-145814540871, invocation_timestamp=2019-08-19T08:23:50.057Z, origin=Only For Testing, session_id=ea578f4c-3073-406a-a3a2-145814540871, session_timestamp=2019-08-19T08:23:50.057Z, thread-id=1235}
[INFO ] 2019-08-19T08:23:50,633Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[WARN ] 2019-08-19T08:23:50,633Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,640Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[WARN ] 2019-08-19T08:23:50,670Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,681Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8d6dc25c-823a-4b1a-ae81-f0def88199f3, invocation_id=ea578f4c-3073-406a-a3a2-145814540871, invocation_timestamp=2019-08-19T08:23:50.057Z, origin=Only For Testing, session_id=ea578f4c-3073-406a-a3a2-145814540871, session_timestamp=2019-08-19T08:23:50.057Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,681Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8d6dc25c-823a-4b1a-ae81-f0def88199f3, invocation_id=ea578f4c-3073-406a-a3a2-145814540871, invocation_timestamp=2019-08-19T08:23:50.057Z, origin=Only For Testing, session_id=ea578f4c-3073-406a-a3a2-145814540871, session_timestamp=2019-08-19T08:23:50.057Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,690Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8d6dc25c-823a-4b1a-ae81-f0def88199f3, invocation_id=ea578f4c-3073-406a-a3a2-145814540871, invocation_timestamp=2019-08-19T08:23:50.057Z, origin=Only For Testing, session_id=ea578f4c-3073-406a-a3a2-145814540871, session_timestamp=2019-08-19T08:23:50.057Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,702Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[WARN ] 2019-08-19T08:23:50,702Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,708Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,721Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,724Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=23dfc56c-ca3e-4ccd-ba66-26ab1f3d3353, invocation_id=53c48e36-962c-4239-8fea-d5c57945c1a1, invocation_timestamp=2019-08-19T08:23:50.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=53c48e36-962c-4239-8fea-d5c57945c1a1, session_timestamp=2019-08-19T08:23:50.620Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,731Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8d6dc25c-823a-4b1a-ae81-f0def88199f3, invocation_id=ea578f4c-3073-406a-a3a2-145814540871, invocation_timestamp=2019-08-19T08:23:50.057Z, origin=Only For Testing, session_id=ea578f4c-3073-406a-a3a2-145814540871, session_timestamp=2019-08-19T08:23:50.057Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,731Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=8d6dc25c-823a-4b1a-ae81-f0def88199f3, invocation_id=ea578f4c-3073-406a-a3a2-145814540871, invocation_timestamp=2019-08-19T08:23:50.057Z, origin=Only For Testing, session_id=ea578f4c-3073-406a-a3a2-145814540871, session_timestamp=2019-08-19T08:23:50.057Z, thread-id=1235, tx_id=17821C8658FFC290D8C179F90FE91BEA8E3D75C051E2AD601476AC89929C5E7E}
[INFO ] 2019-08-19T08:23:50,779Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082350.744/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:23:50,779Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:50,779Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:50,800Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:50,800Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:50,822Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:50,827Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:50,829Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:50,833Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:50.743Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:51,093Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:51,094Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082350.744/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:51,094Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:51,095Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:51,096Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,096Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,151Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,157Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:51,172Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:51,179Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,179Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,259Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:51,263Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203031263) {}
[INFO ] 2019-08-19T08:23:51,265Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:51,274Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203031263) {}
[INFO ] 2019-08-19T08:23:51,279Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:51,283Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203031263) {}
[INFO ] 2019-08-19T08:23:51,285Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:51,312Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:51,314Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:23:51,314Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:23:51,317Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203031263) {}
[INFO ] 2019-08-19T08:23:51,319Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203031263) {}
[INFO ] 2019-08-19T08:23:51,319Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:51,319Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203031263) {}
[INFO ] 2019-08-19T08:23:51,319Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:51,323Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082350.744/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:23:51,323Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:51,323Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:51,344Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:51,344Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:51,363Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:51,367Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:51,385Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:51,387Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:50.743Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:51,618Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:51,619Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082350.744/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:51,619Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:51,620Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:51,621Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,621Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,678Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:51,684Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:51,685Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:51,685Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:51,698Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:51,698Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:51,778Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:51,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:51,781Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203031781) {}
[INFO ] 2019-08-19T08:23:51,782Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:51,786Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203031781) {}
[INFO ] 2019-08-19T08:23:51,790Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:51,793Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203031781) {}
[INFO ] 2019-08-19T08:23:51,796Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:51,828Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:51,832Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203031781) {}
[INFO ] 2019-08-19T08:23:51,833Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203031263) {}
[INFO ] 2019-08-19T08:23:51,834Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:51,840Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203031781) {}
[INFO ] 2019-08-19T08:23:51,841Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:51,847Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203031781) {}
[INFO ] 2019-08-19T08:23:51,847Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:51,847Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203031781) {}
[INFO ] 2019-08-19T08:23:51,847Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:51,851Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082350.744/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:23:51,852Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:23:51,852Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:23:51,872Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:51,872Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082350.744/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:23:51,887Z [Test worker] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:23:51,890Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:23:51,904Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:23:51,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:23:50.743Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:23:52,163Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:23:52,164Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082350.744/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:23:52,164Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:23:52,165Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:23:52,166Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:52,166Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:52,214Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:23:52,219Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:23:52,221Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:23:52,221Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:23:52,234Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:52,235Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:52,310Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:23:52,313Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:23:52,313Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203032313) {}
[INFO ] 2019-08-19T08:23:52,314Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:52,318Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203032313) {}
[INFO ] 2019-08-19T08:23:52,322Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:23:52,324Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203032313) {}
[INFO ] 2019-08-19T08:23:52,326Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:52,355Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:23:52,360Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203032313) {}
[INFO ] 2019-08-19T08:23:52,361Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203031263) {}
[INFO ] 2019-08-19T08:23:52,362Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:52,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203032313) {}
[INFO ] 2019-08-19T08:23:52,368Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:52,373Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203031781) {}
[INFO ] 2019-08-19T08:23:52,374Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:52,379Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203032313) {}
[INFO ] 2019-08-19T08:23:52,379Z [Test worker] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:23:52,385Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203032313) {}
[INFO ] 2019-08-19T08:23:52,385Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:23:52,385Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203032313) {}
[INFO ] 2019-08-19T08:23:52,385Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:23:52,386Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:52,386Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:52,386Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:23:52,386Z [Test worker] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:23:53,021Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=59e09fdf-d225-4a75-8ee8-f710323e18df, invocation_id=6260e229-d16a-4793-84ac-d914b0ee0307, invocation_timestamp=2019-08-19T08:23:52.386Z, origin=Only For Testing, session_id=6260e229-d16a-4793-84ac-d914b0ee0307, session_timestamp=2019-08-19T08:23:52.386Z, thread-id=1408}
[INFO ] 2019-08-19T08:23:53,042Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[WARN ] 2019-08-19T08:23:53,042Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,047Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[WARN ] 2019-08-19T08:23:53,070Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,084Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=59e09fdf-d225-4a75-8ee8-f710323e18df, invocation_id=6260e229-d16a-4793-84ac-d914b0ee0307, invocation_timestamp=2019-08-19T08:23:52.386Z, origin=Only For Testing, session_id=6260e229-d16a-4793-84ac-d914b0ee0307, session_timestamp=2019-08-19T08:23:52.386Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,084Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=59e09fdf-d225-4a75-8ee8-f710323e18df, invocation_id=6260e229-d16a-4793-84ac-d914b0ee0307, invocation_timestamp=2019-08-19T08:23:52.386Z, origin=Only For Testing, session_id=6260e229-d16a-4793-84ac-d914b0ee0307, session_timestamp=2019-08-19T08:23:52.386Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,093Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=59e09fdf-d225-4a75-8ee8-f710323e18df, invocation_id=6260e229-d16a-4793-84ac-d914b0ee0307, invocation_timestamp=2019-08-19T08:23:52.386Z, origin=Only For Testing, session_id=6260e229-d16a-4793-84ac-d914b0ee0307, session_timestamp=2019-08-19T08:23:52.386Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,100Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[WARN ] 2019-08-19T08:23:53,101Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,104Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,107Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,109Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=21137aba-898b-4bba-aeb1-aa3e681cc519, invocation_id=121fd637-efb3-4e75-a485-4f4774f50ced, invocation_timestamp=2019-08-19T08:23:53.035Z, origin=O=Mock Company 1, L=London, C=GB, session_id=121fd637-efb3-4e75-a485-4f4774f50ced, session_timestamp=2019-08-19T08:23:53.035Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,114Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=59e09fdf-d225-4a75-8ee8-f710323e18df, invocation_id=6260e229-d16a-4793-84ac-d914b0ee0307, invocation_timestamp=2019-08-19T08:23:52.386Z, origin=Only For Testing, session_id=6260e229-d16a-4793-84ac-d914b0ee0307, session_timestamp=2019-08-19T08:23:52.386Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:23:53,114Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=59e09fdf-d225-4a75-8ee8-f710323e18df, invocation_id=6260e229-d16a-4793-84ac-d914b0ee0307, invocation_timestamp=2019-08-19T08:23:52.386Z, origin=Only For Testing, session_id=6260e229-d16a-4793-84ac-d914b0ee0307, session_timestamp=2019-08-19T08:23:52.386Z, thread-id=1408, tx_id=7430E970F426E95357D054175A22D49BB0EB24ED14D430B0A5A27B6B2CC98662}
[INFO ] 2019-08-19T08:26:11,570Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:26:13,007Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:26:14,473Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082601.696/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:26:14,478Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:26:14,502Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:26:14,575Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:26:14,576Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:26:14,617Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:26:14,621Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:26:15,363Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:26:15,440Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:26:15,595Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:26:01.461Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:26:19,780Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:26:19,784Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082601.696/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:26:19,784Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:26:19,785Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:26:19,842Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:19,846Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:21,767Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:22,402Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:26:22,460Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:26:22,477Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:26:22,477Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:26:22,813Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:26:22,826Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:26:22,826Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203182826) {}
[INFO ] 2019-08-19T08:26:22,833Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:23,021Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203182826) {}
[INFO ] 2019-08-19T08:26:23,101Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:26:23,119Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203182826) {}
[INFO ] 2019-08-19T08:26:23,147Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:26:23,177Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:26:23,181Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:26:23,184Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:26:23,525Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203182826) {}
[INFO ] 2019-08-19T08:26:23,542Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203182826) {}
[INFO ] 2019-08-19T08:26:23,543Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:26:23,543Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203182826) {}
[INFO ] 2019-08-19T08:26:23,543Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:26:23,553Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082601.696/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:26:23,553Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:26:23,553Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:26:23,588Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:26:23,588Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:26:23,626Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:26:23,633Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:26:23,674Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:26:23,677Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:26:01.461Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:26:24,125Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:26:24,129Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082601.696/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:26:24,129Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:26:24,129Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:26:24,132Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:24,132Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:24,254Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:24,266Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:26:24,268Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:26:24,269Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:26:24,290Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:26:24,290Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:26:24,453Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:26:24,457Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:26:24,457Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203184457) {}
[INFO ] 2019-08-19T08:26:24,459Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:24,468Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203184457) {}
[INFO ] 2019-08-19T08:26:24,479Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:26:24,482Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203184457) {}
[INFO ] 2019-08-19T08:26:24,487Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:26:24,526Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:26:24,538Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203184457) {}
[INFO ] 2019-08-19T08:26:24,542Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203182826) {}
[INFO ] 2019-08-19T08:26:24,543Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:24,559Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203184457) {}
[INFO ] 2019-08-19T08:26:24,561Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:24,574Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203184457) {}
[INFO ] 2019-08-19T08:26:24,574Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:26:24,574Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203184457) {}
[INFO ] 2019-08-19T08:26:24,574Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:26:24,579Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082601.696/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:26:24,579Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:26:24,579Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:26:24,611Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:26:24,611Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082601.696/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:26:24,645Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:26:24,650Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:26:24,675Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:26:24,678Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:26:01.461Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:26:25,056Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:26:25,058Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082601.696/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:26:25,058Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:26:25,059Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:26:25,061Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:25,062Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:25,164Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:26:25,175Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:26:25,178Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:26:25,179Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:26:25,199Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:26:25,199Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:26:25,338Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:26:25,344Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:26:25,344Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203185344) {}
[INFO ] 2019-08-19T08:26:25,389Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:25,399Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203185344) {}
[INFO ] 2019-08-19T08:26:25,405Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:26:25,408Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203185344) {}
[INFO ] 2019-08-19T08:26:25,413Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:26:25,444Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:26:25,450Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203185344) {}
[INFO ] 2019-08-19T08:26:25,452Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203182826) {}
[INFO ] 2019-08-19T08:26:25,453Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:25,463Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203185344) {}
[INFO ] 2019-08-19T08:26:25,464Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:25,473Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203184457) {}
[INFO ] 2019-08-19T08:26:25,475Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:25,485Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203185344) {}
[INFO ] 2019-08-19T08:26:25,487Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:26:25,498Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203185344) {}
[INFO ] 2019-08-19T08:26:25,498Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:26:25,498Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203185344) {}
[INFO ] 2019-08-19T08:26:25,498Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:26,313Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:27:27,816Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:27:29,422Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082715.403/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:27:29,433Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:27:29,481Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:27:29,608Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:27:29,616Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:27:29,674Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:27:29,681Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:27:30,459Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:27:30,558Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:27:30,747Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:27:15.111Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:27:36,052Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:27:36,064Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082715.403/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:27:36,064Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:27:36,066Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:27:36,206Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:36,215Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:38,512Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:39,144Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:27:39,202Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:27:39,221Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:27:39,221Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:27:39,581Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:27:39,592Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:27:39,592Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203259592) {}
[INFO ] 2019-08-19T08:27:39,598Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:39,788Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203259592) {}
[INFO ] 2019-08-19T08:27:39,878Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:27:39,896Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203259592) {}
[INFO ] 2019-08-19T08:27:39,927Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:39,959Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:27:39,963Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:27:39,965Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:27:40,328Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203259592) {}
[INFO ] 2019-08-19T08:27:40,346Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203259592) {}
[INFO ] 2019-08-19T08:27:40,347Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:40,347Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203259592) {}
[INFO ] 2019-08-19T08:27:40,347Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:40,354Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082715.403/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:27:40,354Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:27:40,355Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:27:40,394Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:27:40,394Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:27:40,437Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:27:40,450Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:27:40,495Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:27:40,502Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:27:15.111Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:27:41,123Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:27:41,126Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082715.403/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:27:41,126Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:27:41,127Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:27:41,129Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:41,129Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:41,240Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:41,256Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:27:41,259Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:27:41,259Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:27:41,290Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:27:41,290Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:27:41,429Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:27:41,438Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:27:41,438Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203261438) {}
[INFO ] 2019-08-19T08:27:41,440Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:41,452Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203261438) {}
[INFO ] 2019-08-19T08:27:41,462Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:27:41,467Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203261438) {}
[INFO ] 2019-08-19T08:27:41,473Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:41,510Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:27:41,520Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203261438) {}
[INFO ] 2019-08-19T08:27:41,522Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203259592) {}
[INFO ] 2019-08-19T08:27:41,524Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:41,534Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203261438) {}
[INFO ] 2019-08-19T08:27:41,535Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:41,548Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203261438) {}
[INFO ] 2019-08-19T08:27:41,548Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:41,548Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203261438) {}
[INFO ] 2019-08-19T08:27:41,548Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:41,552Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-082715.403/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:27:41,553Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:27:41,553Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:27:41,586Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:27:41,586Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-082715.403/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:27:41,623Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:27:41,629Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:27:41,654Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:27:41,659Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:27:15.111Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:27:42,121Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:27:42,123Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-082715.403/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:27:42,123Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:27:42,124Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:27:42,126Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:42,127Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:42,226Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:27:42,236Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:27:42,238Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:27:42,239Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:27:42,258Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:27:42,258Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:27:42,405Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:27:42,410Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:27:42,410Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203262410) {}
[INFO ] 2019-08-19T08:27:42,412Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:42,422Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203262410) {}
[INFO ] 2019-08-19T08:27:42,431Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:27:42,434Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203262410) {}
[INFO ] 2019-08-19T08:27:42,439Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:42,490Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:27:42,497Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203262410) {}
[INFO ] 2019-08-19T08:27:42,500Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203259592) {}
[INFO ] 2019-08-19T08:27:42,501Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:42,510Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203262410) {}
[INFO ] 2019-08-19T08:27:42,511Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:42,521Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203261438) {}
[INFO ] 2019-08-19T08:27:42,522Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:42,532Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203262410) {}
[INFO ] 2019-08-19T08:27:42,533Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:27:42,542Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203262410) {}
[INFO ] 2019-08-19T08:27:42,542Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:27:42,542Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203262410) {}
[INFO ] 2019-08-19T08:27:42,542Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:30:01,439Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:30:02,879Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:30:04,327Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:30:05,504Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:30:06,639Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:30:07,889Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:30:09,010Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:32:00,145Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:32:01,629Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:32:03,145Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083149.458/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:32:03,151Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:03,188Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:03,265Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:03,267Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:03,296Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:32:03,300Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:32:03,964Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:04,044Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:04,243Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:31:49.200Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:08,642Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:08,646Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083149.458/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:08,646Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:08,647Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:08,705Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:08,711Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:10,546Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:11,201Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:11,256Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:11,276Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:11,276Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:11,561Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:11,570Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:11,570Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203531570) {}
[INFO ] 2019-08-19T08:32:11,575Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:11,735Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203531570) {}
[INFO ] 2019-08-19T08:32:11,800Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:11,819Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203531570) {}
[INFO ] 2019-08-19T08:32:11,843Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:11,871Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:11,874Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:32:11,877Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:32:12,207Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203531570) {}
[INFO ] 2019-08-19T08:32:12,224Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203531570) {}
[INFO ] 2019-08-19T08:32:12,225Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:12,225Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203531570) {}
[INFO ] 2019-08-19T08:32:12,225Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:12,233Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083149.458/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:32:12,234Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:12,234Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:12,255Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:12,255Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:12,277Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:12,285Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:12,315Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:12,319Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:31:49.200Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:12,822Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:12,825Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083149.458/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:12,825Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:12,826Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:12,829Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:12,829Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:12,930Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:12,942Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:12,945Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:12,946Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:12,973Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:12,973Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:13,133Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:13,138Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:13,138Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203533138) {}
[INFO ] 2019-08-19T08:32:13,140Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:13,152Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203533138) {}
[INFO ] 2019-08-19T08:32:13,162Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:13,168Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203533138) {}
[INFO ] 2019-08-19T08:32:13,177Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:13,216Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:13,229Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203533138) {}
[INFO ] 2019-08-19T08:32:13,232Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203531570) {}
[INFO ] 2019-08-19T08:32:13,267Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:13,279Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203533138) {}
[INFO ] 2019-08-19T08:32:13,281Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:13,292Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203533138) {}
[INFO ] 2019-08-19T08:32:13,292Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:13,292Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203533138) {}
[INFO ] 2019-08-19T08:32:13,292Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:13,296Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083149.458/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:32:13,297Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:13,297Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:13,321Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:13,321Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083149.458/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:13,344Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:13,352Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:13,381Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:13,386Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:31:49.200Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:13,800Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:13,803Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083149.458/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:13,803Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:13,804Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:13,807Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:13,807Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:13,909Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:13,919Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:13,922Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:13,922Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:13,941Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:13,941Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:14,078Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:14,085Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:14,086Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203534085) {}
[INFO ] 2019-08-19T08:32:14,089Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:14,097Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203534085) {}
[INFO ] 2019-08-19T08:32:14,110Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:14,113Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203534085) {}
[INFO ] 2019-08-19T08:32:14,119Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:14,146Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:14,153Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203534085) {}
[INFO ] 2019-08-19T08:32:14,155Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203531570) {}
[INFO ] 2019-08-19T08:32:14,157Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:14,166Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203534085) {}
[INFO ] 2019-08-19T08:32:14,168Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:14,177Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203533138) {}
[INFO ] 2019-08-19T08:32:14,178Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:14,187Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203534085) {}
[INFO ] 2019-08-19T08:32:14,188Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:14,198Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203534085) {}
[INFO ] 2019-08-19T08:32:14,198Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:14,198Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203534085) {}
[INFO ] 2019-08-19T08:32:14,198Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:32:14,199Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:14,199Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:14,202Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:14,203Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:14,446Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5fbcc9d2-ac1d-4e33-8988-638cfcb9d5f5, invocation_id=3bded85a-d36e-483d-9f1f-de8c2797409b, invocation_timestamp=2019-08-19T08:32:14.233Z, origin=Only For Testing, session_id=3bded85a-d36e-483d-9f1f-de8c2797409b, session_timestamp=2019-08-19T08:32:14.233Z, thread-id=201}
[WARN ] 2019-08-19T08:32:14,446Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5fbcc9d2-ac1d-4e33-8988-638cfcb9d5f5, invocation_id=3bded85a-d36e-483d-9f1f-de8c2797409b, invocation_timestamp=2019-08-19T08:32:14.233Z, origin=Only For Testing, session_id=3bded85a-d36e-483d-9f1f-de8c2797409b, session_timestamp=2019-08-19T08:32:14.233Z, thread-id=201}
[WARN ] 2019-08-19T08:32:15,891Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5fbcc9d2-ac1d-4e33-8988-638cfcb9d5f5, invocation_id=3bded85a-d36e-483d-9f1f-de8c2797409b, invocation_timestamp=2019-08-19T08:32:14.233Z, origin=Only For Testing, session_id=3bded85a-d36e-483d-9f1f-de8c2797409b, session_timestamp=2019-08-19T08:32:14.233Z, thread-id=201}
[INFO ] 2019-08-19T08:32:16,101Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[WARN ] 2019-08-19T08:32:16,113Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,145Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[WARN ] 2019-08-19T08:32:16,199Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,230Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5fbcc9d2-ac1d-4e33-8988-638cfcb9d5f5, invocation_id=3bded85a-d36e-483d-9f1f-de8c2797409b, invocation_timestamp=2019-08-19T08:32:14.233Z, origin=Only For Testing, session_id=3bded85a-d36e-483d-9f1f-de8c2797409b, session_timestamp=2019-08-19T08:32:14.233Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,230Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5fbcc9d2-ac1d-4e33-8988-638cfcb9d5f5, invocation_id=3bded85a-d36e-483d-9f1f-de8c2797409b, invocation_timestamp=2019-08-19T08:32:14.233Z, origin=Only For Testing, session_id=3bded85a-d36e-483d-9f1f-de8c2797409b, session_timestamp=2019-08-19T08:32:14.233Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,270Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5fbcc9d2-ac1d-4e33-8988-638cfcb9d5f5, invocation_id=3bded85a-d36e-483d-9f1f-de8c2797409b, invocation_timestamp=2019-08-19T08:32:14.233Z, origin=Only For Testing, session_id=3bded85a-d36e-483d-9f1f-de8c2797409b, session_timestamp=2019-08-19T08:32:14.233Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,291Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[WARN ] 2019-08-19T08:32:16,291Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,298Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,305Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,311Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=733208b4-754a-44f3-a567-bccfd142835f, invocation_id=86803485-de23-4a9b-94ff-2572f76364f6, invocation_timestamp=2019-08-19T08:32:16.030Z, origin=O=Mock Company 1, L=London, C=GB, session_id=86803485-de23-4a9b-94ff-2572f76364f6, session_timestamp=2019-08-19T08:32:16.030Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,345Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5fbcc9d2-ac1d-4e33-8988-638cfcb9d5f5, invocation_id=3bded85a-d36e-483d-9f1f-de8c2797409b, invocation_timestamp=2019-08-19T08:32:14.233Z, origin=Only For Testing, session_id=3bded85a-d36e-483d-9f1f-de8c2797409b, session_timestamp=2019-08-19T08:32:14.233Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,345Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=5fbcc9d2-ac1d-4e33-8988-638cfcb9d5f5, invocation_id=3bded85a-d36e-483d-9f1f-de8c2797409b, invocation_timestamp=2019-08-19T08:32:14.233Z, origin=Only For Testing, session_id=3bded85a-d36e-483d-9f1f-de8c2797409b, session_timestamp=2019-08-19T08:32:14.233Z, thread-id=201, tx_id=A35C3B144383B524BAB2E8058008B44B92BC9F11841BCA31900BEA925487877E}
[INFO ] 2019-08-19T08:32:16,457Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083216.384/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:32:16,458Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:16,458Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:16,484Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:16,484Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:16,508Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:16,513Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:16,518Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:16,524Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:16.384Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:16,923Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:16,925Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083216.384/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:16,925Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:16,926Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:16,928Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:16,928Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:17,008Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:17,020Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:17,041Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:17,049Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:17,049Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:17,168Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:17,172Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:17,172Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203537172) {}
[INFO ] 2019-08-19T08:32:17,173Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:17,191Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203537172) {}
[INFO ] 2019-08-19T08:32:17,202Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:17,206Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203537172) {}
[INFO ] 2019-08-19T08:32:17,212Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:17,241Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:17,243Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:32:17,243Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:32:17,251Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203537172) {}
[INFO ] 2019-08-19T08:32:17,253Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203537172) {}
[INFO ] 2019-08-19T08:32:17,253Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:17,253Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203537172) {}
[INFO ] 2019-08-19T08:32:17,254Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:17,258Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083216.384/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:32:17,259Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:17,259Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:17,281Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:17,281Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:17,304Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:17,309Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:17,329Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:17,331Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:16.384Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:17,660Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:17,661Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083216.384/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:17,661Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:17,662Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:17,665Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:17,665Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:17,760Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:17,768Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:17,770Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:17,770Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:17,786Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:17,786Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:17,898Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:17,902Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:17,902Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203537902) {}
[INFO ] 2019-08-19T08:32:17,904Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:17,910Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203537902) {}
[INFO ] 2019-08-19T08:32:17,918Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:17,921Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203537902) {}
[INFO ] 2019-08-19T08:32:17,925Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:17,960Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:17,967Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203537902) {}
[INFO ] 2019-08-19T08:32:17,969Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203537172) {}
[INFO ] 2019-08-19T08:32:17,970Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:17,979Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203537902) {}
[INFO ] 2019-08-19T08:32:17,980Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:17,988Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203537902) {}
[INFO ] 2019-08-19T08:32:17,988Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:17,988Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203537902) {}
[INFO ] 2019-08-19T08:32:17,988Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:17,992Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083216.384/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:32:17,993Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:17,993Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:18,072Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:18,072Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083216.384/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:18,094Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:18,100Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:18,124Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:18,128Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:16.384Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:18,428Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:18,429Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083216.384/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:18,429Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:18,430Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:18,431Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:18,431Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:18,502Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:18,509Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:18,511Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:18,511Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:18,527Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:18,527Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:18,626Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:18,630Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:18,631Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203538631) {}
[INFO ] 2019-08-19T08:32:18,632Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:18,639Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203538631) {}
[INFO ] 2019-08-19T08:32:18,646Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:18,648Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203538631) {}
[INFO ] 2019-08-19T08:32:18,654Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:18,686Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:18,692Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203538631) {}
[INFO ] 2019-08-19T08:32:18,695Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203537172) {}
[INFO ] 2019-08-19T08:32:18,696Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:18,705Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203538631) {}
[INFO ] 2019-08-19T08:32:18,706Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:18,715Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203537902) {}
[INFO ] 2019-08-19T08:32:18,716Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:18,724Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203538631) {}
[INFO ] 2019-08-19T08:32:18,725Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:18,736Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203538631) {}
[INFO ] 2019-08-19T08:32:18,736Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:18,736Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203538631) {}
[INFO ] 2019-08-19T08:32:18,736Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:32:18,737Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:18,737Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:18,737Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:18,737Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:19,558Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=93df1515-360e-4631-87e2-9c2ecd687bc5, invocation_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, invocation_timestamp=2019-08-19T08:32:18.738Z, origin=Only For Testing, session_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, session_timestamp=2019-08-19T08:32:18.738Z, thread-id=378}
[INFO ] 2019-08-19T08:32:19,597Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[WARN ] 2019-08-19T08:32:19,597Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,604Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[WARN ] 2019-08-19T08:32:19,633Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,647Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=93df1515-360e-4631-87e2-9c2ecd687bc5, invocation_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, invocation_timestamp=2019-08-19T08:32:18.738Z, origin=Only For Testing, session_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, session_timestamp=2019-08-19T08:32:18.738Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,647Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=93df1515-360e-4631-87e2-9c2ecd687bc5, invocation_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, invocation_timestamp=2019-08-19T08:32:18.738Z, origin=Only For Testing, session_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, session_timestamp=2019-08-19T08:32:18.738Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,662Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=93df1515-360e-4631-87e2-9c2ecd687bc5, invocation_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, invocation_timestamp=2019-08-19T08:32:18.738Z, origin=Only For Testing, session_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, session_timestamp=2019-08-19T08:32:18.738Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,674Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[WARN ] 2019-08-19T08:32:19,674Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,680Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,685Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,690Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=cf8c5b6e-dedd-4008-a849-54944d9c83dc, invocation_id=24f47766-3401-4992-871a-d18495b7c0ca, invocation_timestamp=2019-08-19T08:32:19.581Z, origin=O=Mock Company 1, L=London, C=GB, session_id=24f47766-3401-4992-871a-d18495b7c0ca, session_timestamp=2019-08-19T08:32:19.581Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,698Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=93df1515-360e-4631-87e2-9c2ecd687bc5, invocation_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, invocation_timestamp=2019-08-19T08:32:18.738Z, origin=Only For Testing, session_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, session_timestamp=2019-08-19T08:32:18.738Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,698Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=93df1515-360e-4631-87e2-9c2ecd687bc5, invocation_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, invocation_timestamp=2019-08-19T08:32:18.738Z, origin=Only For Testing, session_id=b9c8522b-12fd-4bbc-85d0-613e140cb95c, session_timestamp=2019-08-19T08:32:18.738Z, thread-id=378, tx_id=64A66D6C687A2976CDE6EA98BAF2178457E27B971BAF24F718CCA65815349B46}
[INFO ] 2019-08-19T08:32:19,775Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083219.713/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:32:19,776Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:19,776Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:19,798Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:19,798Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:19,815Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:19,822Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:19,825Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:19,831Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:19.713Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:20,204Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:20,206Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083219.713/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:20,206Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:20,206Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:20,208Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,208Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,275Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,282Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:20,299Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:20,305Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,305Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,414Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,417Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:20,417Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203540417) {}
[INFO ] 2019-08-19T08:32:20,418Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:20,433Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203540417) {}
[INFO ] 2019-08-19T08:32:20,441Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:20,444Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203540417) {}
[INFO ] 2019-08-19T08:32:20,448Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:20,484Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:20,485Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:32:20,485Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:32:20,489Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203540417) {}
[INFO ] 2019-08-19T08:32:20,492Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203540417) {}
[INFO ] 2019-08-19T08:32:20,492Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:20,492Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203540417) {}
[INFO ] 2019-08-19T08:32:20,492Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:20,495Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083219.713/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:32:20,495Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:20,495Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:20,518Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:20,518Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:20,539Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:20,544Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:20,562Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:20,564Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:19.713Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:20,833Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:20,835Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083219.713/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:20,835Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:20,835Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:20,837Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,837Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,914Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:20,923Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:20,925Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:20,925Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:20,940Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:20,940Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:21,050Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:21,054Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:21,054Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203541054) {}
[INFO ] 2019-08-19T08:32:21,055Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:21,062Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203541054) {}
[INFO ] 2019-08-19T08:32:21,069Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:21,071Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203541054) {}
[INFO ] 2019-08-19T08:32:21,075Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:21,106Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:21,112Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203541054) {}
[INFO ] 2019-08-19T08:32:21,114Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203540417) {}
[INFO ] 2019-08-19T08:32:21,115Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:21,124Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203541054) {}
[INFO ] 2019-08-19T08:32:21,125Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:21,135Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203541054) {}
[INFO ] 2019-08-19T08:32:21,135Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:21,135Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203541054) {}
[INFO ] 2019-08-19T08:32:21,135Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:21,138Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083219.713/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:32:21,139Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:21,139Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:21,161Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:21,161Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083219.713/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:21,183Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:21,189Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:21,209Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:21,212Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:19.713Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:21,493Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:21,494Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083219.713/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:21,494Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:21,495Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:21,496Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:21,496Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:21,561Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:21,567Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:21,569Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:21,569Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:21,585Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:21,585Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:21,677Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:21,681Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:21,681Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203541681) {}
[INFO ] 2019-08-19T08:32:21,683Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:21,689Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203541681) {}
[INFO ] 2019-08-19T08:32:21,694Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:21,697Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203541681) {}
[INFO ] 2019-08-19T08:32:21,701Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:21,732Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:21,738Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203541681) {}
[INFO ] 2019-08-19T08:32:21,740Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203540417) {}
[INFO ] 2019-08-19T08:32:21,741Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:21,748Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203541681) {}
[INFO ] 2019-08-19T08:32:21,749Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:21,757Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203541054) {}
[INFO ] 2019-08-19T08:32:21,758Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:21,765Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203541681) {}
[INFO ] 2019-08-19T08:32:21,766Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:21,773Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203541681) {}
[INFO ] 2019-08-19T08:32:21,773Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:21,773Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203541681) {}
[INFO ] 2019-08-19T08:32:21,773Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:32:21,773Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:21,773Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:21,773Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:21,773Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:22,555Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=403ffee7-3916-4049-a059-29db897c64ce, invocation_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, invocation_timestamp=2019-08-19T08:32:21.774Z, origin=Only For Testing, session_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, session_timestamp=2019-08-19T08:32:21.774Z, thread-id=551}
[INFO ] 2019-08-19T08:32:22,594Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[WARN ] 2019-08-19T08:32:22,594Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,600Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[WARN ] 2019-08-19T08:32:22,631Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,643Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=403ffee7-3916-4049-a059-29db897c64ce, invocation_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, invocation_timestamp=2019-08-19T08:32:21.774Z, origin=Only For Testing, session_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, session_timestamp=2019-08-19T08:32:21.774Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,643Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=403ffee7-3916-4049-a059-29db897c64ce, invocation_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, invocation_timestamp=2019-08-19T08:32:21.774Z, origin=Only For Testing, session_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, session_timestamp=2019-08-19T08:32:21.774Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,654Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=403ffee7-3916-4049-a059-29db897c64ce, invocation_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, invocation_timestamp=2019-08-19T08:32:21.774Z, origin=Only For Testing, session_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, session_timestamp=2019-08-19T08:32:21.774Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,662Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[WARN ] 2019-08-19T08:32:22,663Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,667Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,671Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,675Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=84bb78ee-cc40-44b0-8c42-d306f7eb409a, invocation_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, invocation_timestamp=2019-08-19T08:32:22.579Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a530b56-75f8-4a35-85d0-0e72cd4ce279, session_timestamp=2019-08-19T08:32:22.579Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,681Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=403ffee7-3916-4049-a059-29db897c64ce, invocation_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, invocation_timestamp=2019-08-19T08:32:21.774Z, origin=Only For Testing, session_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, session_timestamp=2019-08-19T08:32:21.774Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,681Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=403ffee7-3916-4049-a059-29db897c64ce, invocation_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, invocation_timestamp=2019-08-19T08:32:21.774Z, origin=Only For Testing, session_id=070dc6ed-f0d3-4e82-b9fb-ed755d5439ee, session_timestamp=2019-08-19T08:32:21.774Z, thread-id=551, tx_id=ECE6F82752EA520E5854632FA44FC32C6CD56FA6D7CCB4D5B16D0805403D9C75}
[INFO ] 2019-08-19T08:32:22,741Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083222.690/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:32:22,741Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:22,742Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:22,764Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:22,764Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:22,785Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:22,789Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:22,792Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:22,796Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:22.690Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:23,084Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:23,085Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083222.690/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:23,085Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:23,086Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:23,087Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,087Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,149Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,156Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:23,173Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:23,179Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,179Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,277Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,281Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:23,281Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203543281) {}
[INFO ] 2019-08-19T08:32:23,282Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:23,295Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203543281) {}
[INFO ] 2019-08-19T08:32:23,303Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:23,306Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203543281) {}
[INFO ] 2019-08-19T08:32:23,310Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:23,341Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:23,342Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:32:23,342Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:32:23,346Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203543281) {}
[INFO ] 2019-08-19T08:32:23,348Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203543281) {}
[INFO ] 2019-08-19T08:32:23,348Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:23,348Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203543281) {}
[INFO ] 2019-08-19T08:32:23,348Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:23,351Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083222.690/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:32:23,352Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:23,352Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:23,367Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:23,367Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:23,382Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:23,389Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:23,404Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:23,406Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:22.690Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:23,687Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:23,688Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083222.690/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:23,688Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:23,689Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:23,691Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,691Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,746Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:23,757Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:23,758Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:23,758Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:23,774Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:23,774Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:23,865Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:23,869Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:23,869Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203543869) {}
[INFO ] 2019-08-19T08:32:23,870Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:23,875Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203543869) {}
[INFO ] 2019-08-19T08:32:23,882Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:23,887Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203543869) {}
[INFO ] 2019-08-19T08:32:23,892Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:23,926Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:23,934Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203543869) {}
[INFO ] 2019-08-19T08:32:23,937Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203543281) {}
[INFO ] 2019-08-19T08:32:23,938Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:23,945Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203543869) {}
[INFO ] 2019-08-19T08:32:23,946Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:23,956Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203543869) {}
[INFO ] 2019-08-19T08:32:23,956Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:23,956Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203543869) {}
[INFO ] 2019-08-19T08:32:23,956Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:23,959Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083222.690/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:32:23,959Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:23,959Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:23,981Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:23,981Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083222.690/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:23,999Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:24,005Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:24,021Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:24,023Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:22.690Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:24,279Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:24,280Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083222.690/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:24,280Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:24,281Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:24,283Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:24,283Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:24,346Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:24,352Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:24,353Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:24,353Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:24,366Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:24,366Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:24,494Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:24,498Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:24,498Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203544498) {}
[INFO ] 2019-08-19T08:32:24,499Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:24,504Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203544498) {}
[INFO ] 2019-08-19T08:32:24,509Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:24,512Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203544498) {}
[INFO ] 2019-08-19T08:32:24,515Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:24,545Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:24,550Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203544498) {}
[INFO ] 2019-08-19T08:32:24,552Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203543281) {}
[INFO ] 2019-08-19T08:32:24,553Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:24,559Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203544498) {}
[INFO ] 2019-08-19T08:32:24,560Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:24,566Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203543869) {}
[INFO ] 2019-08-19T08:32:24,567Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:24,572Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203544498) {}
[INFO ] 2019-08-19T08:32:24,573Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:24,578Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203544498) {}
[INFO ] 2019-08-19T08:32:24,578Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:24,578Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203544498) {}
[INFO ] 2019-08-19T08:32:24,578Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:32:24,578Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:24,578Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:24,578Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:24,578Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:25,274Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9eb04c63-8026-427e-9c8b-7dbb1f3787b2, invocation_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, invocation_timestamp=2019-08-19T08:32:24.579Z, origin=Only For Testing, session_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, session_timestamp=2019-08-19T08:32:24.579Z, thread-id=724}
[INFO ] 2019-08-19T08:32:25,300Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[WARN ] 2019-08-19T08:32:25,300Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,305Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[WARN ] 2019-08-19T08:32:25,333Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,345Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9eb04c63-8026-427e-9c8b-7dbb1f3787b2, invocation_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, invocation_timestamp=2019-08-19T08:32:24.579Z, origin=Only For Testing, session_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, session_timestamp=2019-08-19T08:32:24.579Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,345Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9eb04c63-8026-427e-9c8b-7dbb1f3787b2, invocation_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, invocation_timestamp=2019-08-19T08:32:24.579Z, origin=Only For Testing, session_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, session_timestamp=2019-08-19T08:32:24.579Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,355Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9eb04c63-8026-427e-9c8b-7dbb1f3787b2, invocation_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, invocation_timestamp=2019-08-19T08:32:24.579Z, origin=Only For Testing, session_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, session_timestamp=2019-08-19T08:32:24.579Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,363Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[WARN ] 2019-08-19T08:32:25,363Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,367Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,371Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,374Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=0661bd01-87dd-428b-9fcd-246f738dc750, invocation_id=97b00b51-a307-4b43-b4bf-24656ae6793c, invocation_timestamp=2019-08-19T08:32:25.289Z, origin=O=Mock Company 1, L=London, C=GB, session_id=97b00b51-a307-4b43-b4bf-24656ae6793c, session_timestamp=2019-08-19T08:32:25.289Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,381Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9eb04c63-8026-427e-9c8b-7dbb1f3787b2, invocation_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, invocation_timestamp=2019-08-19T08:32:24.579Z, origin=Only For Testing, session_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, session_timestamp=2019-08-19T08:32:24.579Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,381Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9eb04c63-8026-427e-9c8b-7dbb1f3787b2, invocation_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, invocation_timestamp=2019-08-19T08:32:24.579Z, origin=Only For Testing, session_id=d5da1db1-9cef-4818-8451-76c9b9c218fa, session_timestamp=2019-08-19T08:32:24.579Z, thread-id=724, tx_id=E3D5C022D4A44C96A8810585DB73DD576AE701496688F28A109EFA002443C9ED}
[INFO ] 2019-08-19T08:32:25,445Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083225.398/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:32:25,445Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:25,445Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:25,468Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:25,468Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:25,491Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:25,497Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:25,500Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:25,506Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:25.398Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:25,792Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:25,793Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083225.398/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:25,793Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:25,794Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:25,795Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:25,795Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:25,850Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:25,856Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:25,871Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:25,878Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:25,878Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:25,959Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:25,963Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:25,963Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203545963) {}
[INFO ] 2019-08-19T08:32:25,965Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:25,976Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203545963) {}
[INFO ] 2019-08-19T08:32:25,983Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:25,985Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203545963) {}
[INFO ] 2019-08-19T08:32:25,989Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:26,015Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:26,016Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:32:26,016Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:32:26,021Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203545963) {}
[INFO ] 2019-08-19T08:32:26,023Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203545963) {}
[INFO ] 2019-08-19T08:32:26,023Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:26,023Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203545963) {}
[INFO ] 2019-08-19T08:32:26,023Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:26,026Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083225.398/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:32:26,026Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:26,026Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:26,048Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:26,048Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:26,069Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:26,074Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:26,090Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:26,092Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:25.398Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:26,358Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:26,360Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083225.398/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:26,360Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:26,360Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:26,361Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:26,361Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:26,415Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:26,420Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:26,421Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:26,421Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:26,434Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:26,434Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:26,516Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:26,519Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:26,519Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203546519) {}
[INFO ] 2019-08-19T08:32:26,521Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:26,526Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203546519) {}
[INFO ] 2019-08-19T08:32:26,530Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:26,533Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203546519) {}
[INFO ] 2019-08-19T08:32:26,536Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:26,562Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:26,568Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203546519) {}
[INFO ] 2019-08-19T08:32:26,570Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203545963) {}
[INFO ] 2019-08-19T08:32:26,570Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:26,575Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203546519) {}
[INFO ] 2019-08-19T08:32:26,576Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:26,582Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203546519) {}
[INFO ] 2019-08-19T08:32:26,582Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:26,582Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203546519) {}
[INFO ] 2019-08-19T08:32:26,582Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:26,588Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083225.398/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:32:26,588Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:26,588Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:26,610Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:26,610Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083225.398/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:26,630Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:26,637Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:26,656Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:26,658Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:25.398Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:26,915Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:26,917Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083225.398/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:26,917Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:26,918Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:26,919Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:26,919Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:26,973Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:26,979Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:26,980Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:26,981Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:26,995Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:26,995Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:27,071Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:27,075Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:27,075Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203547075) {}
[INFO ] 2019-08-19T08:32:27,076Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:27,080Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203547075) {}
[INFO ] 2019-08-19T08:32:27,085Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:27,087Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203547075) {}
[INFO ] 2019-08-19T08:32:27,091Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:27,121Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:27,126Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203547075) {}
[INFO ] 2019-08-19T08:32:27,127Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203545963) {}
[INFO ] 2019-08-19T08:32:27,128Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:27,133Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203547075) {}
[INFO ] 2019-08-19T08:32:27,134Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:27,140Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203546519) {}
[INFO ] 2019-08-19T08:32:27,140Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:27,148Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203547075) {}
[INFO ] 2019-08-19T08:32:27,149Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:27,155Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203547075) {}
[INFO ] 2019-08-19T08:32:27,155Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:27,155Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203547075) {}
[INFO ] 2019-08-19T08:32:27,155Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:32:27,156Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:27,156Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:27,156Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:27,156Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:28,295Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a16f58ff-d643-4881-a2a6-ca6fc69ca0f6, invocation_id=72f32ef2-103a-4889-a3a5-548c5285719c, invocation_timestamp=2019-08-19T08:32:27.157Z, origin=Only For Testing, session_id=72f32ef2-103a-4889-a3a5-548c5285719c, session_timestamp=2019-08-19T08:32:27.157Z, thread-id=897}
[INFO ] 2019-08-19T08:32:28,381Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[WARN ] 2019-08-19T08:32:28,381Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,391Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[WARN ] 2019-08-19T08:32:28,425Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,437Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a16f58ff-d643-4881-a2a6-ca6fc69ca0f6, invocation_id=72f32ef2-103a-4889-a3a5-548c5285719c, invocation_timestamp=2019-08-19T08:32:27.157Z, origin=Only For Testing, session_id=72f32ef2-103a-4889-a3a5-548c5285719c, session_timestamp=2019-08-19T08:32:27.157Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,437Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a16f58ff-d643-4881-a2a6-ca6fc69ca0f6, invocation_id=72f32ef2-103a-4889-a3a5-548c5285719c, invocation_timestamp=2019-08-19T08:32:27.157Z, origin=Only For Testing, session_id=72f32ef2-103a-4889-a3a5-548c5285719c, session_timestamp=2019-08-19T08:32:27.157Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,452Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a16f58ff-d643-4881-a2a6-ca6fc69ca0f6, invocation_id=72f32ef2-103a-4889-a3a5-548c5285719c, invocation_timestamp=2019-08-19T08:32:27.157Z, origin=Only For Testing, session_id=72f32ef2-103a-4889-a3a5-548c5285719c, session_timestamp=2019-08-19T08:32:27.157Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,461Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[WARN ] 2019-08-19T08:32:28,461Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,465Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,469Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,473Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=c20aa050-ab2a-4f78-a2cb-0a44f76c4332, invocation_id=a9e68ef6-d789-428a-8f57-159c74880a57, invocation_timestamp=2019-08-19T08:32:28.358Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a9e68ef6-d789-428a-8f57-159c74880a57, session_timestamp=2019-08-19T08:32:28.358Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,478Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a16f58ff-d643-4881-a2a6-ca6fc69ca0f6, invocation_id=72f32ef2-103a-4889-a3a5-548c5285719c, invocation_timestamp=2019-08-19T08:32:27.157Z, origin=Only For Testing, session_id=72f32ef2-103a-4889-a3a5-548c5285719c, session_timestamp=2019-08-19T08:32:27.157Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,478Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=a16f58ff-d643-4881-a2a6-ca6fc69ca0f6, invocation_id=72f32ef2-103a-4889-a3a5-548c5285719c, invocation_timestamp=2019-08-19T08:32:27.157Z, origin=Only For Testing, session_id=72f32ef2-103a-4889-a3a5-548c5285719c, session_timestamp=2019-08-19T08:32:27.157Z, thread-id=897, tx_id=69B82ECB6956C8DB4718D8A9BF016C0A356490BE7BA8321A57FEF15866C8DD4E}
[INFO ] 2019-08-19T08:32:28,531Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083228.488/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:32:28,531Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:28,531Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:28,553Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:28,553Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:28,568Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:28,579Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:28,581Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:28,586Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:28.488Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:28,844Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:28,845Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083228.488/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:28,845Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:28,846Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:28,848Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:28,848Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:28,907Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:28,912Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:28,925Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:28,932Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:28,932Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:29,010Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:32:29,014Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:29,014Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203549014) {}
[INFO ] 2019-08-19T08:32:29,015Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:29,024Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203549014) {}
[INFO ] 2019-08-19T08:32:29,029Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:29,032Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203549014) {}
[INFO ] 2019-08-19T08:32:29,035Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:29,061Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:29,062Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:32:29,062Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:32:29,066Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203549014) {}
[INFO ] 2019-08-19T08:32:29,067Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203549014) {}
[INFO ] 2019-08-19T08:32:29,067Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:29,067Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203549014) {}
[INFO ] 2019-08-19T08:32:29,067Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:29,070Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083228.488/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:32:29,071Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:29,071Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:29,093Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:29,093Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:29,114Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:29,121Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:29,133Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:29,134Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:28.488Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:29,350Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:29,351Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083228.488/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:29,351Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:29,352Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:29,353Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:29,353Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:29,412Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:29,418Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:29,420Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:29,420Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:29,433Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:29,433Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:29,506Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:29,509Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:29,509Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203549509) {}
[INFO ] 2019-08-19T08:32:29,511Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:29,515Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203549509) {}
[INFO ] 2019-08-19T08:32:29,521Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:29,524Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203549509) {}
[INFO ] 2019-08-19T08:32:29,526Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:29,548Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:29,551Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203549509) {}
[INFO ] 2019-08-19T08:32:29,552Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203549014) {}
[INFO ] 2019-08-19T08:32:29,553Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:29,556Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203549509) {}
[INFO ] 2019-08-19T08:32:29,557Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:29,561Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203549509) {}
[INFO ] 2019-08-19T08:32:29,561Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:29,561Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203549509) {}
[INFO ] 2019-08-19T08:32:29,561Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:29,563Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083228.488/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:32:29,563Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:32:29,563Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:32:29,579Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:29,579Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083228.488/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:32:29,600Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:32:29,605Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:32:29,616Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:32:29,617Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:32:28.488Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:32:29,897Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:32:29,899Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083228.488/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:32:29,899Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:32:29,899Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:32:29,901Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:29,901Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:29,959Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:32:29,964Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:32:29,965Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:32:29,965Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:32:29,982Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:29,982Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:30,063Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:32:30,067Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:32:30,067Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203550067) {}
[INFO ] 2019-08-19T08:32:30,068Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:30,073Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203550067) {}
[INFO ] 2019-08-19T08:32:30,077Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:32:30,079Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203550067) {}
[INFO ] 2019-08-19T08:32:30,082Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:30,112Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:32:30,118Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203550067) {}
[INFO ] 2019-08-19T08:32:30,120Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203549014) {}
[INFO ] 2019-08-19T08:32:30,121Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:30,126Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203550067) {}
[INFO ] 2019-08-19T08:32:30,127Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:30,132Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203549509) {}
[INFO ] 2019-08-19T08:32:30,132Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:30,137Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203550067) {}
[INFO ] 2019-08-19T08:32:30,138Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:32:30,144Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203550067) {}
[INFO ] 2019-08-19T08:32:30,144Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:32:30,144Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203550067) {}
[INFO ] 2019-08-19T08:32:30,144Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:32:30,144Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:30,144Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:30,144Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:32:30,144Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:32:30,809Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=09bd7433-5faf-480c-a404-7e5da1f93bc2, invocation_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, invocation_timestamp=2019-08-19T08:32:30.145Z, origin=Only For Testing, session_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, session_timestamp=2019-08-19T08:32:30.145Z, thread-id=1070}
[INFO ] 2019-08-19T08:32:30,839Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[WARN ] 2019-08-19T08:32:30,839Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,844Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[WARN ] 2019-08-19T08:32:30,872Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,882Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=09bd7433-5faf-480c-a404-7e5da1f93bc2, invocation_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, invocation_timestamp=2019-08-19T08:32:30.145Z, origin=Only For Testing, session_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, session_timestamp=2019-08-19T08:32:30.145Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,882Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=09bd7433-5faf-480c-a404-7e5da1f93bc2, invocation_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, invocation_timestamp=2019-08-19T08:32:30.145Z, origin=Only For Testing, session_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, session_timestamp=2019-08-19T08:32:30.145Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,892Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=09bd7433-5faf-480c-a404-7e5da1f93bc2, invocation_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, invocation_timestamp=2019-08-19T08:32:30.145Z, origin=Only For Testing, session_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, session_timestamp=2019-08-19T08:32:30.145Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,899Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[WARN ] 2019-08-19T08:32:30,899Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,902Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,906Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,909Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=6cd9410d-63a7-4e99-b343-3e88d777505f, invocation_id=049d60eb-1ba8-4435-b27b-456f2fece474, invocation_timestamp=2019-08-19T08:32:30.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=049d60eb-1ba8-4435-b27b-456f2fece474, session_timestamp=2019-08-19T08:32:30.827Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,914Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=09bd7433-5faf-480c-a404-7e5da1f93bc2, invocation_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, invocation_timestamp=2019-08-19T08:32:30.145Z, origin=Only For Testing, session_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, session_timestamp=2019-08-19T08:32:30.145Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:32:30,914Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=09bd7433-5faf-480c-a404-7e5da1f93bc2, invocation_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, invocation_timestamp=2019-08-19T08:32:30.145Z, origin=Only For Testing, session_id=cdc560f5-3d8d-4b9b-a205-beb2501555ff, session_timestamp=2019-08-19T08:32:30.145Z, thread-id=1070, tx_id=8D3F8C952A8F2169DFF1433AA6A6B27DCDDA45E1C4FB49D6F809D95771A00E8B}
[INFO ] 2019-08-19T08:33:14,863Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/contracts-kotlin ... {}
[INFO ] 2019-08-19T08:33:16,248Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin ... {}
[INFO ] 2019-08-19T08:33:17,555Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083304.753/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:33:17,560Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:17,585Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:17,646Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:17,648Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:17,673Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[WARN ] 2019-08-19T08:33:17,679Z [main] cordapp.CordappResolver. - More than one CorDapp registered for net.corda.core.internal.cordapp.CordappImpl. {}
[INFO ] 2019-08-19T08:33:18,340Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:18,417Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:18,598Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:04.550Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:23,122Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:23,127Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083304.753/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:23,127Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:23,129Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:23,178Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:23,181Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:25,082Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:25,679Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:25,740Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:25,760Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:25,760Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:26,084Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:26,120Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:26,120Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203606120) {}
[INFO ] 2019-08-19T08:33:26,124Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:26,267Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203606120) {}
[INFO ] 2019-08-19T08:33:26,327Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:26,344Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203606120) {}
[INFO ] 2019-08-19T08:33:26,367Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:26,397Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:26,401Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:33:26,404Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:33:26,733Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203606120) {}
[INFO ] 2019-08-19T08:33:26,748Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203606120) {}
[INFO ] 2019-08-19T08:33:26,749Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:26,749Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203606120) {}
[INFO ] 2019-08-19T08:33:26,749Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:26,756Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083304.753/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:33:26,757Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:26,757Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:26,779Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:26,779Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:26,802Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:26,809Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:26,847Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:26,851Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:04.550Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:27,312Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:27,315Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083304.753/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:27,315Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:27,316Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:27,319Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:27,319Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:27,421Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:27,431Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:27,433Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:27,433Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:27,456Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:27,456Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:27,603Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:27,608Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:27,608Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203607608) {}
[INFO ] 2019-08-19T08:33:27,611Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:27,619Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203607608) {}
[INFO ] 2019-08-19T08:33:27,632Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:27,636Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203607608) {}
[INFO ] 2019-08-19T08:33:27,641Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:27,672Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:27,683Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203607608) {}
[INFO ] 2019-08-19T08:33:27,686Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203606120) {}
[INFO ] 2019-08-19T08:33:27,687Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:27,700Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203607608) {}
[INFO ] 2019-08-19T08:33:27,701Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:27,713Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203607608) {}
[INFO ] 2019-08-19T08:33:27,713Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:27,713Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203607608) {}
[INFO ] 2019-08-19T08:33:27,713Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:27,717Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083304.753/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:33:27,717Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:27,718Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:27,740Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:27,740Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083304.753/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:27,762Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:27,768Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:27,790Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:27,794Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:04.550Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:28,208Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:28,211Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083304.753/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:28,211Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:28,212Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:28,214Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:28,214Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:28,320Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:28,331Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:28,333Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:28,334Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:28,354Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:28,354Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:28,531Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:28,535Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:28,535Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203608535) {}
[INFO ] 2019-08-19T08:33:28,537Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:28,545Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203608535) {}
[INFO ] 2019-08-19T08:33:28,553Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:28,557Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203608535) {}
[INFO ] 2019-08-19T08:33:28,564Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:28,597Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:28,603Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203608535) {}
[INFO ] 2019-08-19T08:33:28,606Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203606120) {}
[INFO ] 2019-08-19T08:33:28,607Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:28,615Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203608535) {}
[INFO ] 2019-08-19T08:33:28,616Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:28,625Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203607608) {}
[INFO ] 2019-08-19T08:33:28,626Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:28,635Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203608535) {}
[INFO ] 2019-08-19T08:33:28,636Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:28,646Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203608535) {}
[INFO ] 2019-08-19T08:33:28,646Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:28,646Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203608535) {}
[INFO ] 2019-08-19T08:33:28,646Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:33:28,648Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:28,648Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:28,652Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:28,652Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:28,914Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aad730-ca75-4424-bb28-c6db6a741c8f, invocation_id=a88f0864-2041-4613-a194-0c8718ac521b, invocation_timestamp=2019-08-19T08:33:28.685Z, origin=Only For Testing, session_id=a88f0864-2041-4613-a194-0c8718ac521b, session_timestamp=2019-08-19T08:33:28.685Z, thread-id=201}
[WARN ] 2019-08-19T08:33:28,915Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract bootcamp.contracts.TokenContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aad730-ca75-4424-bb28-c6db6a741c8f, invocation_id=a88f0864-2041-4613-a194-0c8718ac521b, invocation_timestamp=2019-08-19T08:33:28.685Z, origin=Only For Testing, session_id=a88f0864-2041-4613-a194-0c8718ac521b, session_timestamp=2019-08-19T08:33:28.685Z, thread-id=201}
[WARN ] 2019-08-19T08:33:30,356Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aad730-ca75-4424-bb28-c6db6a741c8f, invocation_id=a88f0864-2041-4613-a194-0c8718ac521b, invocation_timestamp=2019-08-19T08:33:28.685Z, origin=Only For Testing, session_id=a88f0864-2041-4613-a194-0c8718ac521b, session_timestamp=2019-08-19T08:33:28.685Z, thread-id=201}
[INFO ] 2019-08-19T08:33:30,547Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[WARN ] 2019-08-19T08:33:30,563Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,604Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[WARN ] 2019-08-19T08:33:30,657Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,683Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aad730-ca75-4424-bb28-c6db6a741c8f, invocation_id=a88f0864-2041-4613-a194-0c8718ac521b, invocation_timestamp=2019-08-19T08:33:28.685Z, origin=Only For Testing, session_id=a88f0864-2041-4613-a194-0c8718ac521b, session_timestamp=2019-08-19T08:33:28.685Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,683Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aad730-ca75-4424-bb28-c6db6a741c8f, invocation_id=a88f0864-2041-4613-a194-0c8718ac521b, invocation_timestamp=2019-08-19T08:33:28.685Z, origin=Only For Testing, session_id=a88f0864-2041-4613-a194-0c8718ac521b, session_timestamp=2019-08-19T08:33:28.685Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,720Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aad730-ca75-4424-bb28-c6db6a741c8f, invocation_id=a88f0864-2041-4613-a194-0c8718ac521b, invocation_timestamp=2019-08-19T08:33:28.685Z, origin=Only For Testing, session_id=a88f0864-2041-4613-a194-0c8718ac521b, session_timestamp=2019-08-19T08:33:28.685Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,741Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[WARN ] 2019-08-19T08:33:30,742Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,748Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,754Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,759Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=c0e4609c-c2f7-428d-923c-1920aac317b7, invocation_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, invocation_timestamp=2019-08-19T08:33:30.482Z, origin=O=Mock Company 1, L=London, C=GB, session_id=70f57866-7aaf-4332-8b98-23bd4b9a61d2, session_timestamp=2019-08-19T08:33:30.482Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,797Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aad730-ca75-4424-bb28-c6db6a741c8f, invocation_id=a88f0864-2041-4613-a194-0c8718ac521b, invocation_timestamp=2019-08-19T08:33:28.685Z, origin=Only For Testing, session_id=a88f0864-2041-4613-a194-0c8718ac521b, session_timestamp=2019-08-19T08:33:28.685Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,797Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=62aad730-ca75-4424-bb28-c6db6a741c8f, invocation_id=a88f0864-2041-4613-a194-0c8718ac521b, invocation_timestamp=2019-08-19T08:33:28.685Z, origin=Only For Testing, session_id=a88f0864-2041-4613-a194-0c8718ac521b, session_timestamp=2019-08-19T08:33:28.685Z, thread-id=201, tx_id=10DD4173105B408FC518D5AB579F874F3DC601D11038A3C06227BFD6B53A50A8}
[INFO ] 2019-08-19T08:33:30,898Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083330.831/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:33:30,898Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:30,898Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:30,923Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:30,923Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:30,944Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:30,949Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:30,953Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:30,958Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:30.831Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:31,337Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:31,339Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083330.831/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:31,339Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:31,340Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:31,343Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:31,343Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:31,426Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:31,434Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:31,457Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:31,463Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:31,463Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:31,642Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:31,646Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:31,646Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203611646) {}
[INFO ] 2019-08-19T08:33:31,648Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:31,661Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203611646) {}
[INFO ] 2019-08-19T08:33:31,669Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:31,672Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203611646) {}
[INFO ] 2019-08-19T08:33:31,677Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:31,709Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:31,710Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:33:31,710Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:33:31,715Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203611646) {}
[INFO ] 2019-08-19T08:33:31,717Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203611646) {}
[INFO ] 2019-08-19T08:33:31,717Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:31,717Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203611646) {}
[INFO ] 2019-08-19T08:33:31,717Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:31,720Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083330.831/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:33:31,720Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:31,720Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:31,741Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:31,741Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:31,762Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:31,767Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:31,786Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:31,788Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:30.831Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:32,094Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:32,096Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083330.831/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:32,096Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:32,097Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:32,098Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:32,098Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:32,178Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:32,187Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:32,188Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:32,189Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:32,207Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:32,207Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:32,324Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:32,327Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:32,328Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203612327) {}
[INFO ] 2019-08-19T08:33:32,329Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:32,335Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203612327) {}
[INFO ] 2019-08-19T08:33:32,344Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:32,347Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203612327) {}
[INFO ] 2019-08-19T08:33:32,351Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:32,383Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:32,388Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203612327) {}
[INFO ] 2019-08-19T08:33:32,390Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203611646) {}
[INFO ] 2019-08-19T08:33:32,391Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:32,397Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203612327) {}
[INFO ] 2019-08-19T08:33:32,398Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:32,404Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203612327) {}
[INFO ] 2019-08-19T08:33:32,404Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:32,404Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203612327) {}
[INFO ] 2019-08-19T08:33:32,404Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:32,407Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083330.831/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:33:32,407Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:32,407Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:32,430Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:32,430Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083330.831/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:32,451Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:32,456Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:32,474Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:32,477Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:30.831Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:32,765Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:32,767Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083330.831/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:32,767Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:32,768Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:32,770Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:32,770Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:32,838Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:32,845Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:32,846Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:32,847Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:32,862Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:32,862Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:32,960Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:32,966Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:32,966Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203612966) {}
[INFO ] 2019-08-19T08:33:32,967Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:32,974Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203612966) {}
[INFO ] 2019-08-19T08:33:32,980Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:32,983Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203612966) {}
[INFO ] 2019-08-19T08:33:32,988Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:33,018Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:33,025Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203612966) {}
[INFO ] 2019-08-19T08:33:33,028Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203611646) {}
[INFO ] 2019-08-19T08:33:33,031Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:33,040Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203612966) {}
[INFO ] 2019-08-19T08:33:33,041Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:33,051Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203612327) {}
[INFO ] 2019-08-19T08:33:33,052Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:33,059Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203612966) {}
[INFO ] 2019-08-19T08:33:33,060Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:33,068Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203612966) {}
[INFO ] 2019-08-19T08:33:33,068Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:33,068Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203612966) {}
[INFO ] 2019-08-19T08:33:33,068Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:33:33,068Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:33,068Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:33,068Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:33,068Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:34,001Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=03911eb0-b780-4d6b-b039-fbd6501557c2, invocation_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, invocation_timestamp=2019-08-19T08:33:33.069Z, origin=Only For Testing, session_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, session_timestamp=2019-08-19T08:33:33.069Z, thread-id=377}
[INFO ] 2019-08-19T08:33:34,049Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[WARN ] 2019-08-19T08:33:34,050Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,057Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[WARN ] 2019-08-19T08:33:34,090Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,105Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=03911eb0-b780-4d6b-b039-fbd6501557c2, invocation_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, invocation_timestamp=2019-08-19T08:33:33.069Z, origin=Only For Testing, session_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, session_timestamp=2019-08-19T08:33:33.069Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,105Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=03911eb0-b780-4d6b-b039-fbd6501557c2, invocation_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, invocation_timestamp=2019-08-19T08:33:33.069Z, origin=Only For Testing, session_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, session_timestamp=2019-08-19T08:33:33.069Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,118Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=03911eb0-b780-4d6b-b039-fbd6501557c2, invocation_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, invocation_timestamp=2019-08-19T08:33:33.069Z, origin=Only For Testing, session_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, session_timestamp=2019-08-19T08:33:33.069Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,127Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[WARN ] 2019-08-19T08:33:34,127Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,131Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,137Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,141Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=b4598af1-c084-4ee6-bcbb-f35284760c24, invocation_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, invocation_timestamp=2019-08-19T08:33:34.031Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f8b53d3b-8f45-43ca-b11e-a228d49fcbef, session_timestamp=2019-08-19T08:33:34.031Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,151Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=03911eb0-b780-4d6b-b039-fbd6501557c2, invocation_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, invocation_timestamp=2019-08-19T08:33:33.069Z, origin=Only For Testing, session_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, session_timestamp=2019-08-19T08:33:33.069Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,151Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=03911eb0-b780-4d6b-b039-fbd6501557c2, invocation_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, invocation_timestamp=2019-08-19T08:33:33.069Z, origin=Only For Testing, session_id=20d3954f-5c17-4ee4-8d0b-92422f90bf23, session_timestamp=2019-08-19T08:33:33.069Z, thread-id=377, tx_id=4EA83E066B76D7BBDF4BD118BD20AD4C645B7ADB5C99702D4DFB1684F06B8AFA}
[INFO ] 2019-08-19T08:33:34,250Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083334.171/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:33:34,250Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:34,250Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:34,274Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:34,275Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:34,297Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:34,304Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:34,309Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:34,316Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:34.171Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:34,607Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:34,608Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083334.171/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:34,608Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:34,609Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:34,610Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:34,610Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:34,672Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:34,680Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:34,699Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:34,705Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:34,705Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:34,798Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:34,802Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:34,802Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203614802) {}
[INFO ] 2019-08-19T08:33:34,803Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:34,820Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203614802) {}
[INFO ] 2019-08-19T08:33:34,829Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:34,832Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203614802) {}
[INFO ] 2019-08-19T08:33:34,836Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:34,871Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:34,872Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:33:34,872Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:33:34,878Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203614802) {}
[INFO ] 2019-08-19T08:33:34,880Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203614802) {}
[INFO ] 2019-08-19T08:33:34,880Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:34,880Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203614802) {}
[INFO ] 2019-08-19T08:33:34,880Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:34,884Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083334.171/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:33:34,885Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:34,885Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:34,907Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:34,907Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:34,929Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:34,934Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:34,957Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:34,959Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:34.171Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:35,219Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:35,220Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083334.171/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:35,220Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:35,221Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:35,223Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:35,223Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:35,290Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:35,297Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:35,299Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:35,299Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:35,314Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:35,314Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:35,420Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:35,423Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:35,423Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203615423) {}
[INFO ] 2019-08-19T08:33:35,425Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:35,432Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203615423) {}
[INFO ] 2019-08-19T08:33:35,439Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:35,442Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203615423) {}
[INFO ] 2019-08-19T08:33:35,450Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:35,484Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:35,490Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203615423) {}
[INFO ] 2019-08-19T08:33:35,492Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203614802) {}
[INFO ] 2019-08-19T08:33:35,493Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:35,502Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203615423) {}
[INFO ] 2019-08-19T08:33:35,503Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:35,511Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203615423) {}
[INFO ] 2019-08-19T08:33:35,511Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:35,511Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203615423) {}
[INFO ] 2019-08-19T08:33:35,511Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:35,515Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083334.171/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:33:35,515Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:35,515Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:35,536Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:35,537Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083334.171/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:35,559Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:35,564Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:35,580Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:35,583Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:34.171Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:35,859Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:35,860Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083334.171/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:35,860Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:35,861Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:35,862Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:35,862Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:35,925Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:35,931Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:35,932Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:35,933Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:35,946Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:35,946Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:36,034Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:36,037Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:36,037Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203616037) {}
[INFO ] 2019-08-19T08:33:36,039Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:36,045Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203616037) {}
[INFO ] 2019-08-19T08:33:36,050Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:36,052Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203616037) {}
[INFO ] 2019-08-19T08:33:36,056Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:36,087Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:36,093Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203616037) {}
[INFO ] 2019-08-19T08:33:36,095Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203614802) {}
[INFO ] 2019-08-19T08:33:36,096Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:36,103Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203616037) {}
[INFO ] 2019-08-19T08:33:36,104Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:36,111Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203615423) {}
[INFO ] 2019-08-19T08:33:36,112Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:36,117Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203616037) {}
[INFO ] 2019-08-19T08:33:36,118Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:36,124Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203616037) {}
[INFO ] 2019-08-19T08:33:36,124Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:36,124Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203616037) {}
[INFO ] 2019-08-19T08:33:36,124Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:33:36,124Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:36,124Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:36,124Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:36,124Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:36,857Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=fc1ab780-760c-47cf-bd34-c1bde095f4ec, invocation_id=f829cba0-a42b-4828-86bc-03e668814369, invocation_timestamp=2019-08-19T08:33:36.125Z, origin=Only For Testing, session_id=f829cba0-a42b-4828-86bc-03e668814369, session_timestamp=2019-08-19T08:33:36.125Z, thread-id=551}
[INFO ] 2019-08-19T08:33:36,888Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[WARN ] 2019-08-19T08:33:36,888Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,894Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[WARN ] 2019-08-19T08:33:36,918Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,935Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=fc1ab780-760c-47cf-bd34-c1bde095f4ec, invocation_id=f829cba0-a42b-4828-86bc-03e668814369, invocation_timestamp=2019-08-19T08:33:36.125Z, origin=Only For Testing, session_id=f829cba0-a42b-4828-86bc-03e668814369, session_timestamp=2019-08-19T08:33:36.125Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,935Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=fc1ab780-760c-47cf-bd34-c1bde095f4ec, invocation_id=f829cba0-a42b-4828-86bc-03e668814369, invocation_timestamp=2019-08-19T08:33:36.125Z, origin=Only For Testing, session_id=f829cba0-a42b-4828-86bc-03e668814369, session_timestamp=2019-08-19T08:33:36.125Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,946Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=fc1ab780-760c-47cf-bd34-c1bde095f4ec, invocation_id=f829cba0-a42b-4828-86bc-03e668814369, invocation_timestamp=2019-08-19T08:33:36.125Z, origin=Only For Testing, session_id=f829cba0-a42b-4828-86bc-03e668814369, session_timestamp=2019-08-19T08:33:36.125Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,955Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[WARN ] 2019-08-19T08:33:36,955Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,960Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,963Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,966Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=f7945ced-771d-4432-b350-2c68adf9e5de, invocation_id=b4b800f3-39a3-49fc-bd52-810c679508ac, invocation_timestamp=2019-08-19T08:33:36.876Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b4b800f3-39a3-49fc-bd52-810c679508ac, session_timestamp=2019-08-19T08:33:36.876Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,972Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=fc1ab780-760c-47cf-bd34-c1bde095f4ec, invocation_id=f829cba0-a42b-4828-86bc-03e668814369, invocation_timestamp=2019-08-19T08:33:36.125Z, origin=Only For Testing, session_id=f829cba0-a42b-4828-86bc-03e668814369, session_timestamp=2019-08-19T08:33:36.125Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:36,972Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000005, flow-id=fc1ab780-760c-47cf-bd34-c1bde095f4ec, invocation_id=f829cba0-a42b-4828-86bc-03e668814369, invocation_timestamp=2019-08-19T08:33:36.125Z, origin=Only For Testing, session_id=f829cba0-a42b-4828-86bc-03e668814369, session_timestamp=2019-08-19T08:33:36.125Z, thread-id=551, tx_id=52BF4909A9124BCD10408709BA83E564494847B7719C932C97E693EED43375C7}
[INFO ] 2019-08-19T08:33:37,036Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083336.980/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:33:37,036Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:37,036Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:37,056Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:37,057Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:37,080Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:37,085Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:37,088Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:37,093Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:36.980Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:37,383Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:37,384Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083336.980/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:37,384Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:37,385Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:37,386Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:37,386Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:37,449Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:37,457Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:37,476Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:37,481Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:37,481Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:37,560Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:37,563Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:37,563Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203617563) {}
[INFO ] 2019-08-19T08:33:37,564Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:37,575Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203617563) {}
[INFO ] 2019-08-19T08:33:37,581Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:37,585Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203617563) {}
[INFO ] 2019-08-19T08:33:37,590Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:37,619Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:37,621Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:33:37,621Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:33:37,630Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203617563) {}
[INFO ] 2019-08-19T08:33:37,631Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203617563) {}
[INFO ] 2019-08-19T08:33:37,632Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:37,632Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203617563) {}
[INFO ] 2019-08-19T08:33:37,632Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:37,635Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083336.980/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:33:37,635Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:37,635Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:37,656Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:37,656Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:37,677Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:37,682Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:37,699Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:37,701Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:36.980Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:37,949Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:37,951Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083336.980/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:37,951Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:37,952Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:37,953Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:37,953Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:38,011Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:38,017Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:38,018Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:38,018Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:38,034Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:38,034Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:38,109Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:38,113Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:38,113Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203618113) {}
[INFO ] 2019-08-19T08:33:38,494Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:38,500Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203618113) {}
[INFO ] 2019-08-19T08:33:38,505Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:38,507Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203618113) {}
[INFO ] 2019-08-19T08:33:38,510Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:38,539Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:38,544Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203618113) {}
[INFO ] 2019-08-19T08:33:38,545Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203617563) {}
[INFO ] 2019-08-19T08:33:38,546Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:38,552Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203618113) {}
[INFO ] 2019-08-19T08:33:38,553Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:38,558Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203618113) {}
[INFO ] 2019-08-19T08:33:38,558Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:38,558Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203618113) {}
[INFO ] 2019-08-19T08:33:38,558Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:38,560Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083336.980/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:33:38,561Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:38,561Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:38,583Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:38,583Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083336.980/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:38,605Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:38,609Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:38,623Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:38,625Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:36.980Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:38,851Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:38,852Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083336.980/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:38,852Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:38,853Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:38,854Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:38,854Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:38,907Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:38,914Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:38,915Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:38,915Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:38,929Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:38,929Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:39,008Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:39,011Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:39,011Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203619011) {}
[INFO ] 2019-08-19T08:33:39,012Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:39,016Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203619011) {}
[INFO ] 2019-08-19T08:33:39,020Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:39,023Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203619011) {}
[INFO ] 2019-08-19T08:33:39,025Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:39,053Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:39,058Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203619011) {}
[INFO ] 2019-08-19T08:33:39,061Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203617563) {}
[INFO ] 2019-08-19T08:33:39,062Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:39,068Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203619011) {}
[INFO ] 2019-08-19T08:33:39,069Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:39,075Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203618113) {}
[INFO ] 2019-08-19T08:33:39,076Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:39,081Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203619011) {}
[INFO ] 2019-08-19T08:33:39,082Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:39,088Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203619011) {}
[INFO ] 2019-08-19T08:33:39,088Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:39,088Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203619011) {}
[INFO ] 2019-08-19T08:33:39,088Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:33:39,088Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:39,088Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:39,088Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:39,088Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:39,703Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=fe3bf838-ce73-436b-80dd-d10080eb4764, invocation_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, invocation_timestamp=2019-08-19T08:33:39.089Z, origin=Only For Testing, session_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, session_timestamp=2019-08-19T08:33:39.089Z, thread-id=724}
[INFO ] 2019-08-19T08:33:39,736Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[WARN ] 2019-08-19T08:33:39,736Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,745Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[WARN ] 2019-08-19T08:33:39,770Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,779Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=fe3bf838-ce73-436b-80dd-d10080eb4764, invocation_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, invocation_timestamp=2019-08-19T08:33:39.089Z, origin=Only For Testing, session_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, session_timestamp=2019-08-19T08:33:39.089Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,779Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=fe3bf838-ce73-436b-80dd-d10080eb4764, invocation_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, invocation_timestamp=2019-08-19T08:33:39.089Z, origin=Only For Testing, session_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, session_timestamp=2019-08-19T08:33:39.089Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,791Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=fe3bf838-ce73-436b-80dd-d10080eb4764, invocation_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, invocation_timestamp=2019-08-19T08:33:39.089Z, origin=Only For Testing, session_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, session_timestamp=2019-08-19T08:33:39.089Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,803Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[WARN ] 2019-08-19T08:33:39,803Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,808Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,812Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,818Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=ba092e70-d697-4a85-b971-dd56ac344e2c, invocation_id=c50d7291-1189-46c2-91c0-75d1919769f6, invocation_timestamp=2019-08-19T08:33:39.722Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c50d7291-1189-46c2-91c0-75d1919769f6, session_timestamp=2019-08-19T08:33:39.722Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,824Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=fe3bf838-ce73-436b-80dd-d10080eb4764, invocation_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, invocation_timestamp=2019-08-19T08:33:39.089Z, origin=Only For Testing, session_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, session_timestamp=2019-08-19T08:33:39.089Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,824Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=fe3bf838-ce73-436b-80dd-d10080eb4764, invocation_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, invocation_timestamp=2019-08-19T08:33:39.089Z, origin=Only For Testing, session_id=e20e9a9b-05a9-4d40-abb7-b74b7f8c6456, session_timestamp=2019-08-19T08:33:39.089Z, thread-id=724, tx_id=252274DE875233A1951B4B7D1A099A93A56676FFB438FA0603587825C894410D}
[INFO ] 2019-08-19T08:33:39,884Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083339.837/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:33:39,885Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:39,885Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:39,906Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:39,907Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:39,928Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:39,935Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:39,939Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:39,944Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:39.837Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:40,245Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:40,246Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083339.837/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:40,246Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:40,247Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:40,248Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,248Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,301Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,306Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:40,320Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:40,326Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,326Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,407Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,411Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:40,411Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203620411) {}
[INFO ] 2019-08-19T08:33:40,412Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:40,424Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203620411) {}
[INFO ] 2019-08-19T08:33:40,432Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:40,434Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203620411) {}
[INFO ] 2019-08-19T08:33:40,437Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:40,469Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:40,471Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:33:40,471Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:33:40,474Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203620411) {}
[INFO ] 2019-08-19T08:33:40,476Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203620411) {}
[INFO ] 2019-08-19T08:33:40,476Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:40,476Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203620411) {}
[INFO ] 2019-08-19T08:33:40,476Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:40,479Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083339.837/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:33:40,479Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:40,479Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:40,501Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:40,501Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:40,524Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:40,529Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:40,541Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:40,542Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:39.837Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:40,751Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:40,752Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083339.837/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:40,752Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:40,753Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:40,754Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,754Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,806Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:40,811Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:40,813Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:40,813Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:40,824Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:40,824Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:40,903Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:40,906Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:40,907Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203620906) {}
[INFO ] 2019-08-19T08:33:40,908Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:40,913Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203620906) {}
[INFO ] 2019-08-19T08:33:40,918Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:40,921Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203620906) {}
[INFO ] 2019-08-19T08:33:40,924Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:40,951Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:40,955Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203620906) {}
[INFO ] 2019-08-19T08:33:40,957Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203620411) {}
[INFO ] 2019-08-19T08:33:40,957Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:40,961Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203620906) {}
[INFO ] 2019-08-19T08:33:40,962Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:40,966Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203620906) {}
[INFO ] 2019-08-19T08:33:40,966Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:40,966Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203620906) {}
[INFO ] 2019-08-19T08:33:40,966Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:40,969Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083339.837/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:33:40,969Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:40,969Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:40,992Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:40,992Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083339.837/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:41,014Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:41,018Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:41,037Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:41,039Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:39.837Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:41,290Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:41,292Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083339.837/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:41,292Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:41,292Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:41,294Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:41,294Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:41,348Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:41,354Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:41,355Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:41,355Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:41,368Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:41,368Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:41,433Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:41,436Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:41,436Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203621436) {}
[INFO ] 2019-08-19T08:33:41,437Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:41,441Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203621436) {}
[INFO ] 2019-08-19T08:33:41,445Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:41,448Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203621436) {}
[INFO ] 2019-08-19T08:33:41,450Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:41,476Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:41,480Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203621436) {}
[INFO ] 2019-08-19T08:33:41,482Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203620411) {}
[INFO ] 2019-08-19T08:33:41,482Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:41,487Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203621436) {}
[INFO ] 2019-08-19T08:33:41,487Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:41,492Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203620906) {}
[INFO ] 2019-08-19T08:33:41,493Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:41,497Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203621436) {}
[INFO ] 2019-08-19T08:33:41,497Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:41,501Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203621436) {}
[INFO ] 2019-08-19T08:33:41,501Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:41,501Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203621436) {}
[INFO ] 2019-08-19T08:33:41,501Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:33:41,501Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:41,501Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:41,501Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:41,501Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:42,076Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=d390c85e-06c2-44d1-bdff-86b7b2d30e41, invocation_id=e52d99d2-898c-442f-877e-0d820d043132, invocation_timestamp=2019-08-19T08:33:41.502Z, origin=Only For Testing, session_id=e52d99d2-898c-442f-877e-0d820d043132, session_timestamp=2019-08-19T08:33:41.502Z, thread-id=897}
[INFO ] 2019-08-19T08:33:42,099Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[WARN ] 2019-08-19T08:33:42,099Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,105Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[WARN ] 2019-08-19T08:33:42,128Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,138Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=d390c85e-06c2-44d1-bdff-86b7b2d30e41, invocation_id=e52d99d2-898c-442f-877e-0d820d043132, invocation_timestamp=2019-08-19T08:33:41.502Z, origin=Only For Testing, session_id=e52d99d2-898c-442f-877e-0d820d043132, session_timestamp=2019-08-19T08:33:41.502Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,138Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=d390c85e-06c2-44d1-bdff-86b7b2d30e41, invocation_id=e52d99d2-898c-442f-877e-0d820d043132, invocation_timestamp=2019-08-19T08:33:41.502Z, origin=Only For Testing, session_id=e52d99d2-898c-442f-877e-0d820d043132, session_timestamp=2019-08-19T08:33:41.502Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,149Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=d390c85e-06c2-44d1-bdff-86b7b2d30e41, invocation_id=e52d99d2-898c-442f-877e-0d820d043132, invocation_timestamp=2019-08-19T08:33:41.502Z, origin=Only For Testing, session_id=e52d99d2-898c-442f-877e-0d820d043132, session_timestamp=2019-08-19T08:33:41.502Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,157Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[WARN ] 2019-08-19T08:33:42,158Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,162Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,166Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,169Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000010, flow-id=25080be9-a28d-4fd7-8eff-a928053af0c9, invocation_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, invocation_timestamp=2019-08-19T08:33:42.090Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5431e7eb-5ea1-4b40-ad46-ac79c23084ac, session_timestamp=2019-08-19T08:33:42.090Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,175Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=d390c85e-06c2-44d1-bdff-86b7b2d30e41, invocation_id=e52d99d2-898c-442f-877e-0d820d043132, invocation_timestamp=2019-08-19T08:33:41.502Z, origin=Only For Testing, session_id=e52d99d2-898c-442f-877e-0d820d043132, session_timestamp=2019-08-19T08:33:41.502Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,175Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000009, flow-id=d390c85e-06c2-44d1-bdff-86b7b2d30e41, invocation_id=e52d99d2-898c-442f-877e-0d820d043132, invocation_timestamp=2019-08-19T08:33:41.502Z, origin=Only For Testing, session_id=e52d99d2-898c-442f-877e-0d820d043132, session_timestamp=2019-08-19T08:33:41.502Z, thread-id=897, tx_id=AD4F16EACEED9E54C9BD4F6DEF1CE1B21F8A61F6053C854957E6A1D8822322BF}
[INFO ] 2019-08-19T08:33:42,229Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083342.185/nodes/0/cordapps] {}
[INFO ] 2019-08-19T08:33:42,230Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/0/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/0/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:42,230Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/0/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:42,252Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:42,252Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/0/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:42,273Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:42,278Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:42,280Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:42,283Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:42.185Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:42,550Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:42,551Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083342.185/nodes/0/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:42,551Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:42,551Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:42,553Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:42,553Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:42,600Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:42,605Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:42,618Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:42,624Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:42,624Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:42,692Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2019-08-19T08:33:42,695Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:42,695Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203622695) {}
[INFO ] 2019-08-19T08:33:42,696Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:42,704Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203622695) {}
[INFO ] 2019-08-19T08:33:42,709Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:42,711Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203622695) {}
[INFO ] 2019-08-19T08:33:42,713Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:42,732Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:42,733Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2019-08-19T08:33:42,733Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2019-08-19T08:33:42,736Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203622695) {}
[INFO ] 2019-08-19T08:33:42,738Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203622695) {}
[INFO ] 2019-08-19T08:33:42,738Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:42,738Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203622695) {}
[INFO ] 2019-08-19T08:33:42,738Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:42,740Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083342.185/nodes/1/cordapps] {}
[INFO ] 2019-08-19T08:33:42,740Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/1/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/1/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:42,741Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/1/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:42,757Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:42,757Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/1/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:42,781Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:42,786Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:42,798Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:42,800Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:42.185Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:43,000Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:43,001Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083342.185/nodes/1/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:43,001Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:43,002Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:43,003Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:43,003Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:43,052Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:43,059Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:43,060Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:43,061Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:43,075Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:43,075Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:43,138Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:43,141Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:43,141Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203623141) {}
[INFO ] 2019-08-19T08:33:43,143Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:43,145Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203623141) {}
[INFO ] 2019-08-19T08:33:43,148Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:43,151Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203623141) {}
[INFO ] 2019-08-19T08:33:43,153Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:43,178Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:43,182Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203623141) {}
[INFO ] 2019-08-19T08:33:43,183Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203622695) {}
[INFO ] 2019-08-19T08:33:43,184Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:43,188Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203623141) {}
[INFO ] 2019-08-19T08:33:43,188Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:43,192Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203623141) {}
[INFO ] 2019-08-19T08:33:43,192Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:43,192Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203623141) {}
[INFO ] 2019-08-19T08:33:43,192Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:43,194Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20190819-083342.185/nodes/2/cordapps] {}
[INFO ] 2019-08-19T08:33:43,195Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/2/cordapps/bootcamp.contracts-kotlin.jar, rootPackageName=null), RestrictedURL(url=file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/2/cordapps/bootcamp.workflows-kotlin.jar, rootPackageName=null) {}
[INFO ] 2019-08-19T08:33:43,195Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/2/cordapps/bootcamp.contracts-kotlin.jar {}
[INFO ] 2019-08-19T08:33:43,216Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:43,216Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/anthonynixon/Repo/TEST/bootcamp-cordapp/workflows-kotlin/build/mock-network/20190819-083342.185/nodes/2/cordapps/bootcamp.workflows-kotlin.jar {}
[INFO ] 2019-08-19T08:33:43,231Z [main] cordapp.JarScanningCordappLoader. - Found notary service CorDapp implementations:  {}
[INFO ] 2019-08-19T08:33:43,236Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2019-08-19T08:33:43,251Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[INFO ] 2019-08-19T08:33:43,253Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2019-08-19T08:33:42.185Z
      epoch=1
  } {}
[INFO ] 2019-08-19T08:33:43,497Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {}
[INFO ] 2019-08-19T08:33:43,499Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20190819-083342.185/nodes/2/network-parameters, whitelistedContractImplementations: {}. {}
[INFO ] 2019-08-19T08:33:43,499Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {}
[INFO ] 2019-08-19T08:33:43,500Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {}
[INFO ] 2019-08-19T08:33:43,501Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:43,501Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:43,554Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {}
[INFO ] 2019-08-19T08:33:43,559Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {}
[INFO ] 2019-08-19T08:33:43,560Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2019-08-19T08:33:43,561Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2019-08-19T08:33:43,573Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:43,573Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:43,665Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2019-08-19T08:33:43,668Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-08-19T08:33:43,668Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203623668) {}
[INFO ] 2019-08-19T08:33:43,670Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:43,673Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203623668) {}
[INFO ] 2019-08-19T08:33:43,677Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2019-08-19T08:33:43,679Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203623668) {}
[INFO ] 2019-08-19T08:33:43,682Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:43,711Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=913E6A0DF757F2DD32692B545B63658FCD619CC03E0456AFEFADA1BB5A26C78B uploader=app filename=null {}
[INFO ] 2019-08-19T08:33:43,715Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203623668) {}
[INFO ] 2019-08-19T08:33:43,716Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=4, serial=1566203622695) {}
[INFO ] 2019-08-19T08:33:43,716Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:43,720Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203623668) {}
[INFO ] 2019-08-19T08:33:43,721Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:43,725Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=4, serial=1566203623141) {}
[INFO ] 2019-08-19T08:33:43,726Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:43,731Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203623668) {}
[INFO ] 2019-08-19T08:33:43,731Z [main] network.PersistentNetworkMapCache. - No previous node found {}
[INFO ] 2019-08-19T08:33:43,737Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203623668) {}
[INFO ] 2019-08-19T08:33:43,737Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-08-19T08:33:43,737Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=4, serial=1566203623668) {}
[INFO ] 2019-08-19T08:33:43,737Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2019-08-19T08:33:43,737Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:43,737Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:43,737Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class bootcamp.flows.TokenIssueFlowInitiator, currently using: class bootcamp.flows.TokenIssueFlowResponder {}
[INFO ] 2019-08-19T08:33:43,737Z [main] internal.NodeFlowManager. - Registered bootcamp.flows.TokenIssueFlowInitiator to initiate bootcamp.flows.TokenIssueFlowResponder (version 1) {}
[WARN ] 2019-08-19T08:33:44,302Z [Mock network] corda.flow. - ProgressTracker has not been started {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=66922a72-8e20-4dad-ad67-c8ff4491ecb2, invocation_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, invocation_timestamp=2019-08-19T08:33:43.738Z, origin=Only For Testing, session_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, session_timestamp=2019-08-19T08:33:43.738Z, thread-id=1070}
[INFO ] 2019-08-19T08:33:44,324Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[WARN ] 2019-08-19T08:33:44,324Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,329Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[WARN ] 2019-08-19T08:33:44,350Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,360Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=66922a72-8e20-4dad-ad67-c8ff4491ecb2, invocation_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, invocation_timestamp=2019-08-19T08:33:43.738Z, origin=Only For Testing, session_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, session_timestamp=2019-08-19T08:33:43.738Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,360Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=66922a72-8e20-4dad-ad67-c8ff4491ecb2, invocation_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, invocation_timestamp=2019-08-19T08:33:43.738Z, origin=Only For Testing, session_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, session_timestamp=2019-08-19T08:33:43.738Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,371Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=66922a72-8e20-4dad-ad67-c8ff4491ecb2, invocation_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, invocation_timestamp=2019-08-19T08:33:43.738Z, origin=Only For Testing, session_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, session_timestamp=2019-08-19T08:33:43.738Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,383Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[WARN ] 2019-08-19T08:33:44,383Z [Mock network] corda.flow. - ProgressTracker has not been started {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,386Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,389Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,392Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000012, flow-id=97442d5d-6a4d-48d3-bb83-10ced49eaf72, invocation_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, invocation_timestamp=2019-08-19T08:33:44.315Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c5b2d944-254f-4298-8f3a-76bfcd464bea, session_timestamp=2019-08-19T08:33:44.315Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,396Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=66922a72-8e20-4dad-ad67-c8ff4491ecb2, invocation_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, invocation_timestamp=2019-08-19T08:33:43.738Z, origin=Only For Testing, session_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, session_timestamp=2019-08-19T08:33:43.738Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
[INFO ] 2019-08-19T08:33:44,396Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=66922a72-8e20-4dad-ad67-c8ff4491ecb2, invocation_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, invocation_timestamp=2019-08-19T08:33:43.738Z, origin=Only For Testing, session_id=d4446cfc-d72e-40b8-9db5-31c520db2a02, session_timestamp=2019-08-19T08:33:43.738Z, thread-id=1070, tx_id=2B41329B55727E1ED48A1619757FD428FEB90C8E02097796EA9321522DFFEABC}
